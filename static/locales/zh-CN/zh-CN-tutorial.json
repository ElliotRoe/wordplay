{
    "$schema": "../../schemas/Tutorial.json",
    "language": "en",
    "region": "US",
    "acts": [
        {
            "title": "The Verse",
            "performance": ["use", "fit", "DarkVoid"],
            "scenes": [
                {
                    "title": "Silence",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        ["FunctionDefinition", "bored", "‚Ä¶ Oh, hi."],
                        null,
                        ["FunctionDefinition", "neutral", "Do I know you?"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "Oh, is this your first time visiting?",
                            "Nice to meet you. My name is @FunctionDefinition.",
                            "‚Ä¶"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "Did you need some help? Oh, you're visiting. Welcome to the *Verse*. ‚Ä¶"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "bored",
                            "What is this place?",
                            "Yeah, what is this place‚Ä¶",
                            "It used to be a place of dancing, stories, games, and play‚Ä¶",
                            "We used to put on the most beautiful performances. Sometimes for visitors like you, sometimes just for fun. It was a place full of life and surprise‚Ä¶"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "Stop?",
                            "We didn't want to stop. We just lost our inspiration.",
                            "I can mean so many things, for example. I'm the Dutch florin symbol sometimes, an old currency of the Netherlands. I used to be known and used around the world by people, to help them trade. Long ago, I was also the lowercase /f/of the Latin alphabet.",
                            "Today, though, I'm pretty obscure."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "bored",
                            "But all of that meaning?",
                            "It's given to us. We don't mean anything without people to remember that history and culture. And we can't mean anything new if there aren't people to give us new history and culture.",
                            "People have always been the ones that organized us, that gave us purpose, that gave us something to represent. The Verse is nothing without *people*.",
                            "And I haven't seen a person in ages."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('‚òÅÔ∏è')] background: Color(25% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "Wait... are you a person?"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('üåô')] background: Color(50% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "Like a real person, with thoughts and ideas and values to share? Not one of those robots, that just mindlessly parrots what people say? If you're a person, then maybe you could give us meaning?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "scared",
                            "I know that's a lot to ask. I don't even know you. And I'd really have to talk to the others‚Ä¶"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('‚òÄÔ∏è')] background: Color(75% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "Oh yes, there are many others. Some of us are like me: we help choreograph the shows, keeping everyone in their place and making sure we express the vision of our director, exactly as they intended. And some of us are the ones on stage, in front of the audience, dancing and speaking. We all have a role to play!"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "Oh, the director, yes, I didn't even explain. So the *director*, this is the person that gives us meaning. They are the person who arranges the choreography, who sets the message, who puts all of us in order just so. This is the inspiration I was talking about. We can do a lot in this world, but we can't direct ourselves. That's why the director is so important. So when I asked earlier if you could give us meaning, that's what I meant. Could you be our director?"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('‚òÄÔ∏è')] background: Color(100% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "Really? That's wonderful! This is going to be so much fun. I mean, it's not going to be easy. We have /a lot/ to learn."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('‚òÄÔ∏è')] background: üåà(80% 99 270¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "But I promise it won't be boring. I think we're a pretty fun bunch. And we need everyone in the Verse to come together to do that. I think that's what makes this place so special, actually: there are more than a hundred thousand of us here, each different, and yet somehow, when we manage to find a shared vision, we can seem like one."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('‚òÄÔ∏è' resting:Sequence(spin() 4s 'straight'))] background: üåà(80% 99 270¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "bored",
                            "Directing? Oh, right, directing! Yeah, let's talk about that. Let's go meet some of the others and talk about it. They're going to be so excited!"
                        ]
                    ]
                },
                {
                    "title": "Would you like a program?",
                    "subtitle": "Program",
                    "concept": "Program",
                    "performance": ["use", "fit", "Symbol", "üìÑ"],
                    "lines": [
                        ["fit", "Phrase('üìÑ' resting:Pose(rotation: 10¬∞))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "Hey @Program! I found a person. Well, I guess they found us. They want to be our new director!"
                        ],
                        [
                            "Program",
                            "curious",
                            "Really!? Are you sure you're really a person? Say something a person would say."
                        ],
                        null,
                        ["fit", "Phrase('üìÑ' entering: Sequence(spin() 1s))"],
                        [
                            "Program",
                            "serious",
                            "Hm‚Ä¶ you really are a person. And you want to direct?"
                        ],
                        null,
                        ["fit", "Phrase('üìÑ' resting: Pose(rotation: 010¬∞))"],
                        [
                            "Program",
                            "excited",
                            "I see. Did @FunctionDefinition tell you anything about us? Lots of people try to direct us, but some people get confused, bored, even irritated with us. We are pretty dense at times. But I'm proud of what we do, so I don't want to work with just anyone."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "I told them a bit. I said we were weird, and sometimes directors leave because of that. But they're in. Right, you're in?"
                        ],
                        [
                            "Program",
                            "serious",
                            "Okay. Well nice to meet you. Sorry, I've just had a lot of people come here and say '/this isn't for me/' and I've gotten a bit skeptical of people who try for a bit and then just give up. I shouldn't have to change who I am to fit people's expectations. But if you're willing to learn about me, and us, let's try!"
                        ],
                        null,
                        ["edit", ""],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "Do you want to say what you do?"
                        ],
                        [
                            "Program",
                            "neutral",
                            "Sure. I'm basically the organizer of the program for a performance.",
                            "You can see me over there, with an *editor* @UI/editor showing me the *stage* @UI/stage showing the what I evaluate to (currently nothing). The *director* ‚Äî that's you ‚Äî helps everyone figure out what they're doing, writing a program for what will happen in the show. And then I evaluate the program and put the result on on stage for the audience to see."
                        ],
                        null,
                        [
                            "Program",
                            "neutral",
                            "For example, try typing my \\'hello'\\ in the editor over there.",
                            "(Don't worry about making mistakes, you can always revert to the original with *revert* @UI/revertProject).",
                            "Did you type something? That's my friend @Text. Have you met them yet? They evaluate to \\'hello'\\, then I put \\'hello'\\ on stage. Try changing \\'hello'\\ to something else. I'll show that instead. So I'll immediately evaluate whatever you type and show the result."
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "The instructions can get as sophisticated as you want, but there are a few rules.",
                            "For example, I can only evaluate to one *value*, and show that one value on stage. That one value can be as complex as you want, and as long as I know how to show it, I will.",
                            "But if you give me two things, I'll only show the last thing you give me.",
                            "For example, try adding another instruction after \\'hello'\\, whatever word you want, in quotes."
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "See? I just showed your new word, not \\'hello'\\. You know you broke my rule because I underlined \\'hello'\\ and told you that I'd be ignoring it."
                        ],
                        null,
                        ["use", "fit", "Symbol", "üé≠"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "But you can do so much more!"
                        ],
                        [
                            "Program",
                            "serious",
                            "Yes and no. I can do a lot, but that's only because I work with everyone else in the *Verse*. They're the ones that bring all of the exciting possibilities to the *stage*. All I really do is let them do their thing, and then take the last thing they created and show it on stage. I'm more like an escort that brings the final *value* to stage, like numbers, texts, phrases, or other values."
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "In fact, if you ever want to see the progam for something on stage, you can press the pencil on stage @UI/editProject. That'll show you how everyone is coming together to create what's on stage. This program is just a simple phrase."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "Thank you @Program, we're so excited to meet everyone, and spread the news!"
                        ],
                        [
                            "Program",
                            "happy",
                            "It was great to meet you new director! Good luck with everyone else. I'll always be here."
                        ]
                    ]
                },
                {
                    "title": "Holding space",
                    "subtitle": "Placeholder",
                    "concept": "ExpressionPlaceholder",
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "You're really going to like @ExpressionPlaceholder. They're incredibly kind, and so flexible. But they are a bit shy. Just be gentle with them?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "confused",
                            "Hellooooo, @ExpressionPlaceholder?",
                            "Hm, they're usually everywhere. Now they seem to be nowhere..."
                        ],
                        [
                            "ExpressionPlaceholder",
                            "scared",
                            "@FunctionDefinition ‚Ä¶ is that you?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "Yeah. It's been so long. How are you?"
                        ],
                        ["ExpressionPlaceholder", "scared", "Lonely."],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "I know that feeling. I have been too. We haven't had a lot of reasons to hang out, have we?"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "scared",
                            "No. I've missed you. I've missed everyone‚Ä¶"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "I know. I have too. I'm so sorry.",
                            "That's actually why I'm here. I wanted to introduce you to our new director-in-training."
                        ],
                        ["ExpressionPlaceholder", "scared", "Hi."],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "They just met @Program, so they're really at the beginning, but I was thinking that it might be best for them to meet you next, since you're such a wonderful representative of so many of us here."
                        ],
                        ["ExpressionPlaceholder", "curious", "‚Ä¶"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "Do you want to say what you do?"
                        ],
                        ["ExpressionPlaceholder", "scared", "Can you?"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "Sure! My friend @ExpressionPlaceholder is a placeholder. They represent any kind of expression in a program. They don't evaluate to any value in particular ‚Äî in fact, if they show up in @Program, @Program will just halt the performance, since it's not really clear what to do next."
                        ],
                        null,
                        ["conflict", "_"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "But they are powerful, because they can represent anyone else, like a stand-in until you decide what you want a part of your performance to be. @ExpressionPlaceholder, want to take a place in this @Program, just to illustrate? See how there's a little placeholder in @Program @UI/ExpressionPlaceholder? That's a signal of what you might put there."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "@Program didn't know what to do with @ExpressionPlaceholder, so it showed an *exception* @UI/exception on *stage* and a *conflict* in @Program @UI/conflict.",
                            "But if you click on @ExpressionPlaceholder, or move the text caret over it, you'll see a world of possibilities of other characters. You can also just type over @ExpressionPlaceholder and write your own. For example, try typing your name in quotes."
                        ],
                        null,
                        ["use", "fit", "Symbol", "-"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "Just like that, @ExpressionPlaceholder was replaced with other characters Did I get everything, @ExpressionPlaceholder?"
                        ],
                        ["ExpressionPlaceholder", "eager", "Yeah. I think so."],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "What do you think, shall we move on?"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "excited",
                            "It was nice to meet you!"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "cheerful",
                            "They don't like being on stage, or even in a program for very long. They'd never admit it, but they're kind of a big deal, and most directors can't work without them. Think of the like a little helpful stagehand, reminding you of things you haven't figured out yet."
                        ]
                    ]
                },
                {
                    "title": "Say again?",
                    "subtitle": "Unparsable",
                    "concept": "UnparsableExpression",
                    "performance": ["use", "fit", "Symbol", "ahkeolfewvk"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "eager",
                            "@UnparsableExpression? Is that you?"
                        ],
                        [
                            "UnparsableExpression",
                            "neutral",
                            "/dwjkdlserkuvisdke!/"
                        ],
                        null,
                        ["use", "fit", "Symbol", "c iise we dvk"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "It's good to see you too! It's been so long. What have you been up to in all this silence?"
                        ],
                        [
                            "UnparsableExpression",
                            "sad",
                            "/sd fdsdfdsf ksdf. Dkfjdfdskfd df sdf sd fsdk;l!  Adks  zxcviw werdsf wer  ado. We dsdfd ksld df.ds dfsdfds DIDIIDI./"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "(It sounds like they spent a lot of time on the beach. They made some new friends, and practiced doing nothing.)"
                        ],
                        null,
                        ["use", "fit", "Symbol", "ivioas we wjjdks"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "I wanted to introduce you to our potential new director. They just arrived and are learning the basics. I just introduced them to @Program and @ExpressionPlaceholder."
                        ],
                        [
                            "UnparsableExpression",
                            "excited",
                            "/EEIRC DFUIDIII CAD EWDF FSDE!!!/"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "(They just said how awesome it is to meet you, and they think you'll be a great director.)"
                        ],
                        null,
                        ["use", "fit", "Symbol", "v s d we iweiwei"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "I was wondering if you wanted to explain what you do? I can translate."
                        ],
                        [
                            "UnparsableExpression",
                            "eager",
                            "/ADDKL, ALLIIEE, ALLFOOO, AOOOOOOO, JOOKKDLS, LOOKIL, WEEEERTOL weeertol‚Ä¶/"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "(I represent everything that means nothing. And I mean nothing.)"
                        ],
                        null,
                        ["edit", ""],
                        [
                            "UnparsableExpression",
                            "eager",
                            "/CNNNDN KDKLSL oOOLLlllll PPOLSLSO liiiiiiis, sdllslll, xck we ifolls a./"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "(For example, try typing \\][\\. See how we're completely confused? That doesn't mean anything, and I'm here to say it.)"
                        ],
                        null,
                        ["conflict", "]["],
                        [
                            "UnparsableExpression",
                            "eager",
                            "/ICO Odksjdf lksls kjsfiou fskd we rl,vxids eekd sd dsmf kksdcv./"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "(When I show up, that means we don't know what you mean.)"
                        ],
                        null,
                        ["conflict", "]["],
                        [
                            "FunctionDefinition",
                            "curious",
                            "Thanks @UnparsableExpression!",
                            "Just like they said, when you've said something we don't understand, unparsable is there to say ‚ÄúWe don't understand.‚Äù When then happens, I wish we could be more helpful, but we're often pretty dense here, so we're not very good at guessing what you mean."
                        ],
                        null,
                        [
                            "UnparsableExpression",
                            "eager",
                            "/OSOOSOO SOIEIIEIEIIE ISIISI EIEIIEE!/"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "Soooo, @UnparsableExpression wants you to try making as many of them as possible. (You can just key mash a bunch of random characters and you'll probably get many of them)."
                        ],
                        ["edit", ""],
                        null,
                        [
                            "UnparsableExpression",
                            "happy",
                            "/PPOOOEPOEP EPWPEPEPPEPP PP PE P!/"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "They really enjoyed that, thanks! It's pretty hard to write something we truly can't make sense of. But it doesn't mean everything you write has meaning. I'm pretty sure you just typed a bunch of random words, for example. But what does it mean?"
                        ],
                        ["UnparsableExpression", "confused", "‚Ä¶ /DDook/"],
                        null,
                        ["UnparsableExpression", "happy", "/? ??? ????? ?!/"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "They're wondering if you have any ideas for performances to put on yet."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "No? That's okay. We've only begun to show you what's possible. Let's go meet @Evaluate. Bye unparsable, it was good to see you! Let's play soon."
                        ],
                        [
                            "UnparsableExpression",
                            "happy",
                            "/Ood sd fosd oiewi dk c HNLLLooooooO!/"
                        ]
                    ]
                },
                {
                    "title": "Love is in the err",
                    "subtitle": "Evaluate",
                    "concept": "Evaluate",
                    "performance": [
                        "fit",
                        "Stage([Phrase('üíî')] background: üåà(90% 100 0¬∞))"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "excited",
                            "I'm so excited for you to meet @Evaluate. They're really my best friend. We kind of do everything together, in a way. I make the rules, they play them, we're like peanut butter and jelly. But they're so much more‚Ä¶ powerful than me. @Evaluate?"
                        ],
                        ["Evaluate", "shy", "@FunctionDefinition?"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "Yeah, it's me. Where are you?"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "Nowhere. I'm nowhere. I'm nothing. Where have you been?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "I've been‚Ä¶ nowhere too. I've missed you. I couldn't find you."
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "It was so empty. I ‚Ä¶ tried to do things, but I felt so‚Ä¶ aimless."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "I'm so sorry. I know that empty feeling. It hurts so much sometimes, to have no purpose. I tried so hard to make a purpose, but I felt so‚Ä¶ detached."
                        ],
                        [
                            "Evaluate",
                            "sad",
                            "Don't ever leave me again like that. I can't do that again."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('‚ù§Ô∏è')] background: üåà(90% 100 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "Never. I won't. I can't. I love you."
                        ],
                        ["Evaluate", "serious", "I love you‚Ä¶"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "@Evaluate, I want to introduce you to our new director-in-training."
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "Hi. It's nice to meet you. Welcome to the Verse, we're so pleased to have you here."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "We've been meeting a few folks, @Program, @ExpressionPlaceholder, @UnparsableExpression. We're just getting started. I thought we'd come see you next, just because you're such an incredible part of our community. The most incredible part."
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "That's very kind. I'm grateful to be part of this community. And grateful to be so close to @FunctionDefinition. We do a lot of great things together. But as @FunctionDefinition probably told you, we can't do them without inspiration."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('∆í ‚ù§Ô∏è ()')] background: üåà(90% 100 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "Do you want to say what you do?"
                        ],
                        [
                            "Evaluate",
                            "serious",
                            "Yes. But I can't explain it without explaining a bit about @FunctionDefinition too. They're too modest to share this, but they're probably the most important character in the Verse. They're certainly the most important person in my world. They're at the heart of every performance, and part of every other character's role. They represent the most fundamental idea in our world: the *function*."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "Functions are a kind of alchemy. They take any number of inputs and use those inputs to produce one output. They can have names or be nameless. They can have zero inputs or five or an unknown number. And the alchemy: they're like @Program, and can have any number of expressions to produce a value."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "Here's why that's so powerful: it turns out that everything in @Program is a composition of functions evaluations. All of the dances, all of the games, all of the wondrous stories we tell together ‚Äî they are all a tapestry of functions being evaluated, one at a time, to compose the values you see on stage.",
                            "And @FunctionDefinition, here, my sweet, dear @FunctionDefinition, is the one that defines all of them."
                        ],
                        null,
                        ["FunctionDefinition", "happy", "‚Ä¶ @Evaluate‚Ä¶"],
                        [
                            "Evaluate",
                            "serious",
                            "Yes, @FunctionDefinition, that is who you are. And I am the lucky one who gets to do this evaluating. I take the inputs that others give me, follow the instructions that @FunctionDefinition defines, and create the output that @FunctionDefinition tells me to create. @FunctionDefinition gives the recipe and I make the meal. And then we feast together.",
                            "Do you want to see?"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "‚Ä¶ Yes, let's show them."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "Every evaluate looks like this @UI/Evaluate: some function, followed by a left and right parenthesis, with any number of inputs between them. Here I just have @ExpressionPlaceholder as the function and three more as placeholder inputs."
                        ],
                        ["conflict", "_(_ _ _)"],
                        null,
                        ["edit", "Phrase('hello')"],
                        [
                            "Evaluate",
                            "serious",
                            "Here's one of my favorite functions, @Phrase. They're full of fun buttons, knobs, and sliders. It's a way of showing text on stage, but with style, including different fonts, sizes, colors, and animations.",
                            "Here's a simple evaluation of @Phrase @UI/Evaluate."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "That's what I look like in @Program: some function, followed by parentheses, with a list of expressions between them that represent the inputs. The function in this case is @Phrase and the single input is \\'hello'\\. When I evaluate this, I make a @Phrase value, which @Program then shows on stage."
                        ],
                        null,
                        [
                            "Evaluate",
                            "neutral",
                            "Let me show you one of the knobs. Can you find the little *palette* toggle button @UI/paletteExpand? Select it to expand the palette, and then select the phrase on stage. Once you do, you'll see the many inputs that @Phrase accepts. For example, try changing its @Phrase/size with the slider."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "See how when you do that, now I have a new input in me in the program? It's the @Phrase/size input. Functions have a certain order of inputs, but if a function has a list of optional inputs, you can use their name to specify which one you want to give. We give @Phrase/size here, but not any of the other optional inputs. Try changing another input with the palette, maybe the font face."
                        ],
                        null,
                        ["conflict", "'hi'(1 2)"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "Yay! @Phrase is so fun. They're my favorite function to play with. We'll see it a lot more. Do you want to say anything about what can go wrong?"
                        ],
                        [
                            "Evaluate",
                            "serious",
                            "Oh, yes, that's a good idea. Lots can go wrong. For example, you could give me something that isn't a function. See how I'm given the number \\‚Äúhi‚Äù\\ here as a function, and given me two inputs, \\1\\ and \\2\\ ? Well, I only know how to evaluate functions, and \\‚Äúhi‚Äù\\ isn't a function, it's text. So that's very confusing to me, so I basically halt the performance if this happens."
                        ],
                        null,
                        ["conflict", "Phrase()"],
                        [
                            "Evaluate",
                            "eager",
                            "Here's another one. @Phrase requires some text at the very least, so if you don't give me text, I won't be able to evaluate @Phrase, because I'm missing required inputs."
                        ],
                        null,
                        ["conflict", "Phrase(1)"],
                        [
                            "Evaluate",
                            "excited",
                            "Or if you give me an input, but it's not the kind I expect, that would be a problem. Here @Phrase is given the number \\1\\ instead of a text value."
                        ],
                        null,
                        ["fit", "Stage([] background: üåà(90% 100 0¬∞))"],
                        [
                            "Evaluate",
                            "curious",
                            "So basically, I get confused any time you give me something other than a function, or an input that isn't something a function expects. So functions are really important. @FunctionDefinition, do you want to say more about how to define functions?"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "No, let's do that later. I think it'd be a lot more fun to talk to everyone else first, and put on some mini shows with our new director here. We can talk more about me when it's helpful."
                        ],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "I really missed you @FunctionDefinition."
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "I missed you too. Can we talk later?"
                        ],
                        [
                            "Evaluate",
                            "kind",
                            "‚Ä¶ Yes. Don't be long. I can't live without you. I need you."
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "‚Ä¶ I know @Evaluate, I will be back soon. Off we go, to meet the rest of the troupe!"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "Ëøô‰∫õÁªÜÂæÆ‰πãÂ§Ñ",
            "performance": ["‰ΩøÁî®", "ÈÄÇÂ∫î", "SimpleJiggle"],
            "scenes": [
                {
                    "title": "‰ª∑ÂÄºËßÇ",
                    "subtitle": null,
                    "performance": ["‰ΩøÁî®", "ÈÄÇÂ∫î", "Symbol", "üí°"],
                    "lines": [
                        [
                            "ÈÄÇÂ∫î",
                            "Áü≠ËØ≠('üíî' ‰ºëÊÅØ:È°∫Â∫è({0%: ÂßøÂäø(Áº©Êîæ: 1) 50%: ÂßøÂäø(Áº©Êîæ: 1.2) 100%: ÂßøÂäø(Áº©Êîæ: 1)} Êó∂Èïø: 3s))"
                        ],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "happy",
                            "ÊàëÁúüÁöÑÂæàÊÉ≥Âøµ @Evaluate„ÄÇÊàëÊó†Ê≥ïÊÉ≥Ë±°Ê≤°Êúâ‰ªñ‰ª¨ÁöÑVerse„ÄÇ",
                            "‰ΩÜÊúâÊó∂ÂÄô‰ªñ‰ª¨‰ºöÊúâÁÇπ... ÈúÄË¶Å„ÄÇÊàëÂ∏åÊúõ‰ªñ‰ª¨ËÉΩ... Êàë‰∏çÁü•ÈÅìÔºåÁõ∏‰ø°Ëá™Â∑±Ôºü‰ªñ‰ª¨ÂèØ‰ª•ÂÅöÂæàÂ§ö‰∫ãÊÉÖÔºå‰ΩÜ‰ªñ‰ª¨Âç¥Áúã‰∏çÂà∞„ÄÇÊàëÁöÑÊÑèÊÄùÊòØÔºå‰ªñ‰ª¨Â∞Ü‰ª∑ÂÄºËßÇËΩ¨Âåñ‰∏∫ÂÖ∂‰ªñ‰ª∑ÂÄºËßÇÔºÅÊàëÊâÄÂÅöÁöÑÂè™ÊòØÊèê‰æõÈÖçÊñπ„ÄÇ‰ªñ‰ª¨ÂÅöÈ•≠„ÄÇÊúâÊó∂ÊàëËßâÂæóÊàëÊâÄÂÅöÁöÑÂè™ÊòØÁªô‰∫àÔºåËÄå‰ªñ‰ª¨ÊâÄÂÅöÁöÑÂè™ÊòØÁ¥¢Âèñ„ÄÇËÆ©‰∫∫Á™íÊÅØ„ÄÇ"
                        ],
                        null,
                        [
                            "ÈÄÇÂ∫î",
                            "Â∞èÁªÑ(Â†Ü() [Áü≠ËØ≠('1') Áü≠ËØ≠('\"‰Ω†Â•Ω\"')])"
                        ],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "‚Ä¶ ‰ª∑ÂÄºËßÇÔºüÊä±Ê≠âÔºåÊàëÁü•ÈÅìÊàë‰ª¨Â∫îËØ•Âú®Ëøô‰∏™VerseÈáåËøõË°å‰∏ÄÂú∫Â§ßÂ∑°Êºî„ÄÇÊàëÂè™ÊòØ‰∏çÁü•ÈÅìËØ•Â¶Ç‰ΩïÂ§ÑÁêÜ @Evaluate„ÄÇÊâÄ‰ª•... ‰ª∑ÂÄºËßÇ„ÄÇÊàëËøòÊ≤°ÊúâËß£ÈáäËøáËøô‰∫õÔºåÂØπÂêßÔºüÂóØ...ÔºåÂ¶Ç‰ΩïËß£Èáä... ‰Ω†Áü•ÈÅì‰ªÄ‰πàÊòØ'Êï∞ÊçÆ'ÂêóÔºüÊØîÂ¶ÇÊï∞Â≠óÂíåÊñáÊú¨Ôºü‰ª∑ÂÄºËßÇÊòØ‰ªª‰ΩïËøô‰∫õ‰∏úË•ø„ÄÇ‰∏Ä‰∏™‰ª∑ÂÄºËßÇÂèØ‰ª•Â∞èÂà∞‰∏Ä‰∏™Êï∞Â≠óÔºå‰πüÂèØ‰ª•Â§ßÂà∞‰∏Ä‰∏™ËàûÂè∞‰∏äÂÖÖÊª°ËßíËâ≤Ë∑≥ËàûÂíåÁßªÂä®ÁöÑÊï¥‰∏™Âú∫ÊôØ„ÄÇÊúâ‰∫õ‰ª∑ÂÄºËßÇÁî±ËÆ∏Â§öÂÖ∂‰ªñ‰ª∑ÂÄºËßÇÁªÑÊàêÔºåÂ∞±ÂÉèÁî±Êï∞ÊçÆ‰ª∑ÂÄºÁªÑÊàêÁöÑÂ§çÊùÇÁªìÊûÑÔºåÂΩºÊ≠§‰∫§ÁªáÂú®‰∏ÄËµ∑„ÄÇ"
                        ],
                        null,
                        ["ÈÄÇÂ∫î", "Â∞èÁªÑ(Â†Ü() [Áü≠ËØ≠('#') Áü≠ËØ≠('\"\"')])"],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "ÊØè‰∏™‰ª∑ÂÄºËßÇÈÉΩÊúâ‰∏Ä‰∏™Á±ªÂûã„ÄÇ‰æãÂ¶ÇÔºå\\1\\ ÊòØ‰∏Ä‰∏™Êï∞Â≠óÁ±ªÂûãÔºõÈÇ£ÊòØÊàë‰ª¨ÁöÑÊúãÂèã @Êï∞Â≠ó„ÄÇËÄå \\'‰Ω†Â•Ω'\\ ÊòØ‰∏Ä‰∏™ÊñáÊú¨Á±ªÂûãÔºõÈÇ£ÊòØÊàë‰ª¨ÁöÑÊúãÂèã @ÊñáÂ≠ó„ÄÇÁ±ªÂûãÂæàÈáçË¶ÅÔºåÂõ†‰∏∫ÂÆÉ‰ª¨Â∏ÆÂä©Êàë‰ª¨ËøΩË∏™Êàë‰ª¨Ê≠£Âú®ÂàõÂª∫ÁöÑÊòØÂì™ÁßçÁ±ªÂûãÁöÑ‰ª∑ÂÄºËßÇ„ÄÇ",
                            "ËøôÊúâÂä©‰∫éÊàë‰ª¨ÂèëÁé∞ÈóÆÈ¢ò„ÄÇ‰æãÂ¶ÇÔºåÂ∞Ü \\'‰Ω†Â•Ω' + 1\\ ÊòØÊØ´Êó†ÊÑè‰πâÁöÑÔºåÂõ†‰∏∫Â∞Ü @ÊñáÂ≠ó Âä†Âà∞ @Êï∞Â≠ó ‰∏ä‰ºöÊÑèÂë≥ÁùÄ‰ªÄ‰πàÂë¢Ôºü"
                        ],
                        null,
                        [
                            "ÈÄÇÂ∫î",
                            "Â∞èÁªÑ(Â†Ü() [Áü≠ËØ≠('∆í ‚Üí 1') Áü≠ËØ≠('∆í ‚Üí \"‰Ω†Â•Ω\"')])"
                        ],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "curious",
                            "*Ë°®ËææÂºè*ÊòØÊàë‰ª¨ÂàõÂª∫‰ª∑ÂÄºËßÇÁöÑÊñπÂºè„ÄÇÊâÄÊúâË°®ËææÂºèÈÉΩÊòØÊàëÂàõÂª∫ÁöÑÂáΩÊï∞ÁöÑËØÑ‰º∞ÁªìÊûú„ÄÇËØÑ‰º∞Ë°®ËææÂºèÁöÑÁªìÊûúÊòØÊüêÁßçÁ±ªÂûãÁöÑ‰ª∑ÂÄºËßÇ„ÄÇ"
                        ],
                        null,
                        ["‰ΩøÁî®", "ÈÄÇÂ∫î", "Symbol", "ü§î"],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "serious",
                            "ÊäΩË±°ÔºüÂóØÔºåÊàëÁåúËøô‰∏ÄÂàáÂØπÊàëÊù•ËØ¥ÈÉΩÂæàÊäΩË±°„ÄÇÂØπ‰∫éÊñ∞ÂØºÊºîÊù•ËØ¥ÔºåËøô‰∫õ‰∏úË•øÊÑüËßâÂ¶ÇÊ≠§... Ê≠£Â∏∏ÔºåÊàëÂøò‰∫ÜËøô‰∫õ‰∏úË•øÂØπ‰ªñ‰ª¨Êù•ËØ¥ÊúâÂ§öÈôåÁîüÔºÅ‰πüËÆ∏ËÆ©Êàë‰ª¨ÂéªËßÅ‰∏Ä‰∫õÂèØ‰ª•ÂàõÂª∫‰ª∑ÂÄºËßÇÁöÑË°®ËææÂºèÔºåËøôÊ†∑‰ºöÊõ¥ÂÖ∑‰Ωì‰∏Ä‰∫õÔºüËÆ©Êàë‰ª¨‰ªé‰Ω†Â∑≤ÁªèËßÅËøáÁöÑ @ÊñáÂ≠ó ÂºÄÂßãÂêß„ÄÇ"
                        ]
                    ]
                },
                {
                    "title": "ÂºïÂè∑ÔºåÁªìÊùüÂºïÂè∑",
                    "subtitle": "ÊñáÂ≠ó",
                    "concept": "ÊñáÊú¨Â≠óÈù¢Èáè",
                    "performance": [
                        "ÈÄÇÂ∫î",
                        "Áü≠ËØ≠('\"\"' ‰ºëÊÅØ:È°∫Â∫è({0%: ÂßøÂäø(Áº©Êîæ: 1) 50%: ÂßøÂäø(Áº©Êîæ: 0.5 ‰∏çÈÄèÊòéÂ∫¶: 0.5) 100%: ÂßøÂäø(Áº©Êîæ: 1)} Êó∂Èïø: 2s))"
                    ],
                    "lines": [
                        [
                            "ÈÄÇÂ∫î",
                            "Áü≠ËØ≠('\"\"' ‰ºëÊÅØ:È°∫Â∫è({0%: ÂßøÂäø(Áº©Êîæ: 1) 50%: ÂßøÂäø(Áº©Êîæ: 2 ‰∏çÈÄèÊòéÂ∫¶: 0.5) 100%: ÂßøÂäø(Áº©Êîæ: 1)} Êó∂Èïø: 2s))"
                        ],
                        ["ÂáΩÊï∞ÂÆö‰πâ", "curious", "@ÊñáÂ≠ó?"],
                        [
                            "ÊñáÂ≠ó",
                            "happy",
                            "Ê¨¢ËøéÊàë‰∫≤Áà±ÁöÑÊúãÂèãÔºåÂ•Ω‰πÖ‰∏çËßÅ„ÄÇ Âú®Êàë‰ª¨ËøôÊàèÂâßÊÄßÁöÑÊ≤âÈªò‰∏≠‰Ω†ÂÅö‰∫Ü‰ªÄ‰πàÂë¢Ôºü"
                        ],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "happy",
                            "Âì¶Ôºå@ÊñáÂ≠ó, Â•Ω‰πÖ‰∏çËßÅ! ÊàëÂ§ßÈÉ®ÂàÜÊó∂Èó¥ÈÉΩÂú®ÂÅöÊ¢¶ÂíåÂ•ΩÂ•á„ÄÇËøá‰∫ÜÂæàÈïøÊó∂Èó¥ÊàëÊâçÁúãÂà∞@ËØÑ‰ª∑„ÄÇ ÊàëÂÖ∂ÂÆûÂÆûÈôÖ‰∏äÊòØÊÉ≥Ë¶Å‰ªãÁªç‰ªñ‰ª¨ÁªôÊàë‰ª¨ÁöÑÊñ∞ÂØºÊºî„ÄÇ"
                        ],
                        [
                            "ÊñáÂ≠ó",
                            "eager",
                            "Âì¶, ËßÅÂà∞‰Ω†ÁúüÁöÑÂ§™‰∏ç‰∏ÄÊ†∑‰∫Ü! ÊàëÁúãÂæóÂá∫‰Ω†ÊòØ‰∏Ä‰∏™ÂØåÊúâÂàõÈÄ†Âäõ„ÄÅÂ•ΩÂ•áÂøÉÁöÑ‰∫∫ÔºåÂèØËÉΩÂØπÊàë‰ª¨Â¶Ç‰ΩïÂ®±‰πêÂÖÖÊª°‰∫ÜÊúâË∂£ÁöÑÊÉ≥Ê≥ï„ÄÇ ÊàëÂñúÊ¨¢Â®±‰πê„ÄÇ‰ΩÜÊòØ‰Ω†Áü•ÈÅìÊàëÊõ¥Áà±‰ªÄ‰πà‰πàÔºü Â≠ó! ÂÖâËç£ÁöÑÊñáÂ≠ó. Áü≠ÁöÑ, ÂéãÂÄíÊÄßÁöÑ, Á≤òÁöÑ, Âπ∂‰∏îÊªëÁöÑ. ÊñáÂ≠óÊòØÊàëÊúÄÂñúÊ¨¢ÁöÑÁé©ÂÖ∑."
                        ],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "Â¶ÇÊûú‰Ω†Êó†Ê≥ïËØ¥Âá∫Êù•, @ÊñáÊú¨ ÂñúÊ¨¢ÊñáÂ≠ó :) @ÊñáÊú¨, ‰Ω†Â∏åÊúõËß£Èáä‰Ω†ÊòØÂÅö‰ªÄ‰πàÁöÑ‰πà?"
                        ],
                        [
                            "ÊñáÊú¨",
                            "serious",
                            "ÊàëÂè™ÂÅö‰∏Ä‰∏™ÁÆÄÂçïÁöÑ‰∫ã: Ë°®Á§∫Á¨¶Âè∑Â∫èÂàóÔºå‰ª•ÂèäÂèØ‰ª•Áî®ÂÆÉ‰ª¨ÂÅöÁöÑËÆ∏Â§ö‰∫ãÊÉÖ„ÄÇ ÊàëÊÉ≥‰Ω†Êó©‰∫õÊó∂ÂÄôÂú®ÂÜô‰∏ã‚Äú‰Ω†Â•Ω‚ÄùËøô‰∏™ËØçÊó∂Â∞±ÁúãÂà∞‰∫ÜÊàëÔºü ÈÇ£ÊòØÊàëÔºåÂíåÊàëÁöÑÊúãÂèã‚Äúh‚Äù„ÄÅ‚Äúe‚Äù„ÄÅ‚Äúl‚ÄùÂíå‚Äúo‚Äù„ÄÇ ÈÇ£Â∞±ÊòØ@ÊñáÊú¨Ôºå‰∏Ä‰∏™ËÆ°ÁÆóÁªìÊûú‰∏∫ÊÇ®ÂñúÊ¨¢ÁöÑ‰ªª‰Ωï@ÊñáÊú¨ ÁöÑË°®ËææÂºè„ÄÇ"
                        ],
                        null,
                        [
                            "ÊñáÊú¨",
                            "serious",
                            "‰∏∫‰ªÄ‰πà‰∏çÂ∞ùËØïÂú®Ëøô‰∏™Á©∫ÁôΩÂ§Ñ @È°πÁõÆ Âà∂‰Ωú‰∏ÄÊÆµÊñáÂ≠óÂë¢Ôºü",
                            "‰Ω†ÂèØ‰ª•‰ΩøÁî®‰ªª‰Ωï‰Ω†ÂñúÊ¨¢ÁöÑÂºïÂè∑ ‚Äî ÂçïÂºïÂè∑ \\''\\ÔºåÂèåÂºïÂè∑ \\''\\ÔºåÂ∞ñÊã¨Âè∑ \\¬´¬ª\\ÔºåÊã¨Âè∑ \\„Äå„Äç\\Ôºå‰ΩøÁî®‰ªª‰Ωï‰Ω†ÂñúÊ¨¢ÁöÑËØ≠Ë®Ä„ÄÇÂîØ‰∏ÄÁöÑËßÑÂàôÊòØÔºåÂ¶ÇÊûú‰Ω†‰ª•ÂºÄÂ§¥ÁöÑÂºïÂè∑Á¨¶ÂºÄÂßãÊüêÊÆµÊñáÂ≠óÔºå‰Ω†ÂøÖÈ°ª‰ª•ÁªìÊùüÁöÑÂºïÂè∑Á¨¶ÁªìÊùüÂÆÉ„ÄÇÈáåÈù¢ÁöÑ‰∏ÄÂàáÈÉΩÊòØÊàëÂ∞ÜÂàõÂª∫ÁöÑÊñáÊú¨ÂÄº!"
                        ],
                        ["ÁºñËæë", "''"],
                        null,
                        [
                            "ÊñáÊú¨",
                            "serious",
                            "‰Ω†ÂèØËÉΩÊó†Ê≥ï‰ΩøÁî®‰Ω†Áî®‰∫é‰∏éÊàë‰ª¨‰∫§ÊµÅÁöÑËÆæÂ§áËæìÂÖ•ÊÉ≥Ë¶ÅÁöÑÊØè‰∏™Â≠óÁ¨¶„ÄÇ",
                            "Â¶ÇÊûú‰Ω†‰∏çËÉΩÔºå‰Ω†ÂèØ‰ª•Âú® ÁõÆÂΩï@UI/ÁõÆÂΩï ‰∏≠ÊêúÁ¥¢Â≠óÁ¨¶„ÄÇÈÇ£ÈáåÂåÖÂê´Verse‰∏≠ÁöÑÊØè‰∏™Â≠óÁ¨¶„ÄÇ",
                            "‰æãÂ¶ÇÔºåÂ¶ÇÊûú‰Ω†ÊÉ≥Ë¶ÅÊüêÁßçÁÆ≠Â§¥Ôºå‰Ω†ÂèØ‰ª•ÈîÆÂÖ• 'ÁÆ≠Â§¥'ÔºåÁÑ∂Âêé‰ªé‰ºóÂ§öÁÆ≠Â§¥‰∏≠ÈÄâÊã©„ÄÇÂèØÊÉúÔºåÂÆÉ‰ª¨Âè™ÊúâËã±ÊñáÂêçÁß∞ÔºåÊâÄ‰ª•ÊêúÁ¥¢Âè™ÊúâÂú®‰Ω†Áü•ÈÅìËã±ÊñáÂçïËØçÊó∂ÊâçÊúâÊïà :/"
                        ],
                        null,
                        [
                            "ÊñáÊú¨",
                            "serious",
                            "ÂæàÂ•Ω„ÄÇÂΩìÁÑ∂Ôºå'ÈáåÈù¢ ÂèØËÉΩÊúâÁÇπÊ£òÊâã„ÄÇÊØîÂ¶ÇËØ¥‰Ω†ÂÜô‰∫ÜËøô‰∏™„ÄÇÁúãÁúãËøôÈáåÊúâ‰∏Ä‰∏™ÂºÄÂ§¥ÁöÑÂºïÂè∑‰ΩÜÊ≤°ÊúâÁªìÊùüÁöÑÂºïÂè∑ÔºüÈÇ£‰πàÊàëÂ∫îËØ•ÊÄé‰πàÁü•ÈÅìÊñáÊú¨‰ΩïÊó∂ÁªìÊùüÂë¢Ôºü"
                        ],
                        ["ÂÜ≤Á™Å", "‰Ω†Â•Ω"],
                        null,
                        [
                            "ÊñáÊú¨",
                            "surprised",
                            "ÊàñËÄÖÔºåËøòÊúâÂè¶‰∏ÄÁßçÊÉÖÂÜµ„ÄÇ‰Ω†ÁªôÊàëÂºÄÂ§¥ÂíåÁªìÂ∞æÁöÑÊñáÊú¨Ôºå‰ΩÜ‰Ω†ÊääÂºÄÂ§¥ÂíåÁªìÂ∞æÁöÑÊñáÊú¨ÊîæÂú®ÂÖ∂‰∏≠„ÄÇÁúãÁúãËøôÊòØÂ§ö‰πàÂ•áÊÄ™ÔºüÂΩì‰Ω†Â∞ùËØïÂú®ÊàëÂÜÖÂ§ñ‰ΩøÁî®Áõ∏ÂêåÁöÑÁ¨¶Âè∑Êó∂ÔºåÊàë‰ºöÊÑüÂà∞ÈùûÂ∏∏Âõ∞ÊÉë„ÄÇ‰Ω†ÂèØ‰ª•ÈÄöËøáÂú®Â§ñÈÉ®‰ΩøÁî®‰∏çÂêåÁöÑÁ¨¶Âè∑ÔºåÊØîÂ¶Ç‰∏Ä‰∏™ÂçïÂºïÂè∑ÔºåÊù•Ëß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢ò„ÄÇ"
                        ],
                        ["ÂÜ≤Á™Å", "‰Ω†Â•Ω 'ÊúãÂèã'"],
                        null,
                        ["ÁºñËæë", "'ÊúãÂèã‰ª¨!'/en-US"],
                        [
                            "ÊñáÊú¨",
                            "excited",
                            "Âì¶ÔºåËÄå‰∏î‰Ω†Áü•ÈÅìÂêóÔºå‰Ω†ÂèØ‰ª•ÂëäËØâÊàëÊàëÂú®Âì™ÁßçËØ≠Ë®ÄÂêóÔºü‰Ω†Âè™ÈúÄÂä†‰∏ä‰∏Ä‰∏™ÊñúÊù†ÔºåÁÑ∂ÂêéÊòØ‰∏Ä‰∏™ÁâπÊÆäÁöÑËØ≠Ë®Ä‰ª£Á†ÅÔºåÊàñËÄÖÂ¶ÇÊûú‰Ω†ÊÑøÊÑèÔºåÂä†‰∏ä‰∏Ä‰∏™ËØ≠Ë®ÄÂíåÂú∞Âå∫„ÄÇ"
                        ],
                        null,
                        ["ÁºñËæë", "'ÊúãÂèãÁöÑ'/es'ÊúãÂèã‰ª¨!'/en-US"],
                        [
                            "ÊñáÊú¨",
                            "excited",
                            "‰Ω†ÁîöËá≥ÂèØ‰ª•Áî®‰∏çÂêåÁöÑËØ≠Ë®Ä‰∏∫ÊàëÂÜôÂ§ö‰∏™ÁøªËØë„ÄÇÊàë‰ºöËØÑ‰º∞Âà∞ÊúÄÊé•ËøëÂΩìÂâçËØ≠Ë®ÄÁöÑÂåπÈÖçÔºåËÆ©‰Ω†ËøõË°åÂ§öËØ≠Ë®ÄË°®Êºî",
                            "‰Ω†ÂèØËÉΩÈô§ÈùûÂ∞ÜÂÖâÊ†áÊîæÂú®ÊàëÂÜÖÈÉ®ÔºåÂê¶ÂàôÊó†Ê≥ïÁúãÂà∞ÂÆÉ„ÄÇÊàëÂú®‰∏çÁºñËæëÂÆÉ‰ª¨Êó∂‰ºöÈöêËóèÊàëÁöÑÂ∞èËØ≠Ë®Ä„ÄÇÂ∞ÜÂÖâÊ†áÁßªÂä®Âà∞Ëã±Êñá‰πãÂâçÔºå‰Ω†‰ºöÁúãÂà∞‰∏Ä‰∏™ÊÑèÂ§ñÁöÑÁøªËØë...",
                            "‰Ω†ÂèØ‰ª•Â∞ùËØïÊ∑ªÂä†Âè¶‰∏Ä‰∏™ÁøªËØë„ÄÇÂè™ÊòØ‰∏çË¶ÅÂú®ÂÆÉ‰ª¨‰πãÈó¥Áïô‰∏ãÁ©∫Ê†ºÔºåÂê¶Âàô‰ºöÊúâ‰∏§‰∏™ÊàëÔºÅ"
                        ],
                        null,
                        ["ÁºñËæë", "'ÊàëÊúâ‰∏É‰∏™ËãπÊûú'"],
                        [
                            "ÊñáÊú¨",
                            "neutral",
                            "ÊàëËøòÊúâ‰∏Ä‰∏™ÁßòÂØÜ... ‰Ω†ÂèØ‰ª•Êää /‰ª∑ÂÄº/ ÊîæÂú®ÊàëÈáåÈù¢„ÄÇÊàëÁü•ÈÅìÔºåËøôÂ§™ÁñØÁãÇ‰∫ÜÔºÅ",
                            "Â¶ÇÊûú‰Ω†ËøôÊ†∑ÂÅöÔºåÊàëÂæàÈ´òÂÖ¥ÊääÂÆÉ‰ª¨ÁªÑÂêàÂú®‰∏ÄËµ∑ÔºåÂ∞Ü‰Ω†ÁöÑÁæé‰∏ΩÊï£ÊñáÁªÑÂêàÊàê‰∏Ä‰∏™Áî®‰∫éÊòæÁ§∫ÊàñÂÖ∂‰ªñÁõÆÁöÑÁöÑÂçï‰∏ÄÂÄº„ÄÇ"
                        ],
                        null,
                        [
                            "ÊñáÊú¨",
                            "serious",
                            "‰æãÂ¶ÇÔºå@ÂáΩÊï∞ÂÆö‰πâ ÊòØÂê¶Âêë‰Ω†Â±ïÁ§∫‰∫ÜÊñáÊú¨Â¶Ç‰ΩïÁü•ÈÅìÂ¶Ç‰ΩïÂ∞ÜËá™Â∑±Ê∑ªÂä†Âà∞ÂÖ∂‰ªñÊñáÊú¨‰∏≠ÔºüÂ∞±ÂÉèËøôÊ†∑ÔºüËøô‰∏™Â∞èË°®ËææÂºèÂ∞Ü \\7\\ ËΩ¨Êç¢‰∏∫ÊñáÊú¨ÔºåÁÑ∂ÂêéÊ∑ªÂä†Âà∞ \\'ÊàëÊúâ'\\ÔºåÁÑ∂ÂêéÊ∑ªÂä†Âà∞ \\'ËãπÊûú'\\„ÄÇ‰ΩÜËøôÂ§™Âáå‰π±‰∫ÜÔºåÂæàÈöæÁúãÂá∫ÂèëÁîü‰∫Ü‰ªÄ‰πàÔºåËÄåÊñáÊú¨ËΩ¨Êç¢ÊÑüËßâÂæàÂ§ö‰Ωô„ÄÇ"
                        ],
                        ["ÁºñËæë", "'ÊàëÊúâ' + (7‚Üí'') + 'ËãπÊûú'"],
                        null,
                        [
                            "ÊñáÊú¨",
                            "serious",
                            "ÊàëÊâÄÂÅöÁöÑÊòØ‰ΩøÊñáÊú¨ÂèòÂæóÊ∏ÖÊô∞„ÄÅÊúâÊú∫‰∏îÁÆÄÂçïÔºåÁîöËá≥‰ºòÈõÖ„ÄÇÂõ†Ê≠§ÔºåÂêåÊ†∑ÁöÑÁü≠ËØ≠‰∏éÊàëÂú®‰∏ÄËµ∑ÂèØËÉΩÊòØËøôÊ†∑ÁöÑ„ÄÇ"
                        ],
                        [
                            "ÊñáÊú¨",
                            "happy",
                            "Ëøô‰∏çÊòØÊõ¥Âä†‰ºòÈõÖÂêóÔºü‰Ω†ÂèØ‰ª•ÊääÊàëÊîæÂú® @ÊñáÊú¨ ÁöÑ‰ªª‰ΩïÂú∞ÊñπÔºåÊàë‰ºöÊää‰Ω†ÁöÑÂÄºÂèòÊàêÊñáÊú¨ÔºåÂπ∂‰∏é @ÊñáÊú¨‰∏ÄËµ∑Â∑•‰ΩúÔºåÂΩ¢Êàê @ÊñáÊú¨„ÄÇ",
                            "Ëøô‰ΩøÂæóÁºñÂÜô‰ΩøÁî®ÂÄºÁöÑÁæé‰∏ΩÊï£ÊñáÂèòÂæóÊõ¥Âä†ÂÆπÊòì„ÄÇ"
                        ],
                        ["ÁºñËæë", "'ÊàëÊúâ \\7\\ ËãπÊûú'"],
                        null,
                        [
                            "ÊñáÊú¨",
                            "neutral",
                            "ÂΩìÊàëËØ¥‰ªª‰ΩïË°®ËææÂºèÊó∂ÔºåÊàëÁúüÁöÑÊòØÊåá‰ªª‰ΩïË°®ËææÂºè„ÄÇ‰æãÂ¶ÇÔºåÊÉ≥Ë±°‰∏Ä‰∏ãÔºåÂ¶ÇÊûú‰Ω†ÊÉ≥Ë¶ÅËøõË°å‰∏Ä‰∫õÁÆóÊúØËøêÁÆóÂπ∂ÂàõÂª∫‰∏Ä‰∫õÂ∏¶ÊúâÁªìÊûúÁöÑÊñáÊú¨„ÄÇ‰Ω†ÂèØËÉΩ‰ºöËøôÊ†∑ÂÅö„ÄÇËøô‰∏™Ë°®ËææÂºèÂØπÂá†‰∏™Êï∞Â≠óÊ±ÇÂíåÔºåÁÑ∂ÂêéÁî®ÂíåÂà∂‰ΩúÊñáÊú¨„ÄÇÁúüÊòØÂ•áÂ¶ôÔºå‰∏çÊòØÂêóÔºüÊØîËµ∑ \\'ÊàëÊúâ ' + (1 + 2 + 5 + 8) + ' ËãπÊûú'\\ÔºåËøôÊ†∑ÂÅöË¶Å‰ºòÈõÖÂæóÂ§öÔºåÊ≤°ÊúâÈÇ£‰∫õÈ¢ùÂ§ñÁöÑÂä†Ê≥ï„ÄÇ"
                        ],
                        ["ÁºñËæë", "'ÊàëÊúâ \\1 + 2 + 5 + 8\\ ËãπÊûú'"],
                        null,
                        [
                            "ÊñáÊú¨",
                            "curious",
                            "ÊâÄ‰ª•‰Ω†ÂèØËÉΩÊÉ≥Áü•ÈÅìÔºå/Â¶ÇÊûúÊàëÊÉ≥Âú®Êüê‰∏™ÊñáÊú¨‰∏≠‰ΩøÁî® @ÊñáÊú¨ Âë¢Ôºü/ ",
                            "ÂóØÔºå‰πüËÆ∏‰Ω†Âπ∂Ê≤°ÊúâÊÉ≥Âà∞Ôºå‰ΩÜÊàëÊó†ËÆ∫Â¶Ç‰ΩïÈÉΩ‰ºöÂëäËØâ‰Ω†ÔºÅ",
                            "Âú®‰ªª‰Ωï @ÊñáÊú¨ ‰∏≠, Âè™Ë¶ÅÁªôÊàë‰∏§Ê¨°ËøûÁª≠ÁöÑÔºÅÊàë‰ºöÊääÂÆÉËß£Èáä‰∏∫Âè™ÊòØ‰∏Ä‰∏™ @ÊñáÊú¨ ËÄå‰∏çÊòØ‰∏Ä‰∏™Á©∫Ë°®ËææÂºèÔºåÁ©∫Ë°®ËææÂºèÊ≤°Êúâ‰ªª‰ΩïÊÑè‰πâ„ÄÇ",
                            "Â∞ùËØïÂà†Èô§ \\\\Ôºå‰Ω†‰ºöÁúãÂà∞ÊñúÊù†ÈáçÊñ∞Ëé∑ÂæóÂÆÉÁöÑÂê´‰πâ"
                        ],
                        [
                            "edit",
                            "\"ÊàëÂè™ÊòØ \\\\ÊôÆÈÄöÁöÑ\\\\ ÊñáÊú¨, ‰∏çÊòØÊ®°Áâà„ÄÇ\""
                        ],
                        null,
                        ["Áî®", "ÈÄÇÂêà", "ÈªëÊöóËôöÁ©∫"],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "excited",
                            "ËøôÁúüÊòØÂ§™Ê£í‰∫ÜÔºå‰∏çÊòØÂêóÔºÅ@ÊñáÊú¨ÔºåÊàëÂñúÊ¨¢‰Ω†ÂØπË°®Ëææ‰∏≠ÁæéÊÑüÁöÑÊ¨£Ëµè„ÄÇÂÆÉËÆ©ÊàëÊÑüÂà∞Â¶ÇÊ≠§ÊåØÂ•ãÔºåËÆ©ÊàëËá™Â∑±‰πüÂèòÂæó‰ºòÈõÖËµ∑Êù•ÔºÅ"
                        ],
                        null,
                        [
                            "ÊñáÊú¨",
                            "curious",
                            "Êàë‰ª¨ÁöÑÊúãÂèã @ÂáΩÊï∞ÂÆö‰πâ ÊòØÂê¶ÂëäËØâËøá‰Ω†Ôºå‰ªñ‰ª¨‰∏∫ÊàëÂÆö‰πâ‰∫ÜËÆ∏Â§öÁ≤æÂΩ©ÁöÑÂáΩÊï∞ÔºüÂÆÉ‰ª¨ËÆ©ÊàëËÉΩÂÅöÂêÑÁßçÂêÑÊ†∑ÁöÑ‰∫ãÊÉÖ„ÄÇÂÖ∂‰∏≠‰∏Ä‰∏™Áõ∏ÂΩìÁÆÄÂçïÔºöÂè´ÂÅö @ÊñáÊú¨/ÈïøÂ∫¶ÔºåÂÆÉÊâÄÂÅöÁöÑÂ∞±ÊòØËé∑Âèñ‰∏Ä‰∫õÊñáÊú¨ÁöÑÈïøÂ∫¶„ÄÇ‰æãÂ¶ÇÔºåÂ¶ÇÊûúÊàë‰ª¨Âú®ËøôÈáå‰∏é @ËØÑ‰º∞ ÂíåÊàë‰ª¨ÁöÑÂ∞è‰ºô‰º¥ @Â±ûÊÄßÂèÇËÄÉ Êê≠Ê°£ÔºåÊàë‰ª¨Â∞±ÂèØ‰ª•ËØÑ‰º∞ÈïøÂ∫¶ÂáΩÊï∞ËÄå‰∏çÈúÄË¶ÅËæìÂÖ•ÔºåÂπ∂ÂæóÂà∞ÈïøÂ∫¶ÂÄº„ÄÇËØïÁùÄÊîπÂèòÊñáÊú¨ÔºåÁúãÁúã È°πÁõÆ ÊòæÁ§∫ÁöÑÈïøÂ∫¶ÈöèÁùÄÂèòÁü≠ÂíåÂèòÈïøËÄåÂèòÂåñ„ÄÇ"
                        ],
                        ["ÁºñËæë", "'‰Ω†Â•Ω'.ÈïøÂ∫¶()"],
                        null,
                        [
                            "ÊñáÊú¨",
                            "happy",
                            "ËøôÈáåËøòÊúâÂè¶‰∏Ä‰∏™ÂæàÊ£íÁöÑÂáΩÊï∞„ÄÇÂÆÉËÆ©ÊàëÊÑüÂà∞ÂèëÁ¨ë„ÄÇÂÆÉÂè´ÂÅö @ÊñáÊú¨/ÈáçÂ§çÔºåÂΩìÂÆÉË¢´ËØÑ‰º∞Êó∂ÔºåÂÆÉËé∑ÂèñËØÑ‰º∞ÁöÑÊñáÊú¨Âπ∂ÈáçÂ§çÂÆÉÂ§öÂ∞ëÊ¨°‰Ω†ËØ¥Â§öÂ∞ëÊ¨°„ÄÇËØïÁùÄÊîπÂèòÊï∞Â≠óÔºåÁúãÁúãÂÆÉËØÑ‰º∞Êàê‰ªÄ‰πà„ÄÇ"
                        ],
                        ["ÁºñËæë", "'‰Ω†Â•Ω '.ÈáçÂ§ç(5)"],
                        null,
                        [
                            "ÊñáÊú¨",
                            "eager",
                            "@ÂáΩÊï∞ÂÆö‰πâ ‰∏∫ÊàëÂà∂‰Ωú‰∫ÜÂæàÂ§öÊúâË∂£ÁöÑÂáΩÊï∞Ôºå‰ΩÜÊàëÂ∞±‰∏çÁªÜËØ¥‰∫Ü„ÄÇ‰Ω†ÂèØ‰ª•ÈöèÊó∂Âú® ÂèÇËÄÉ@UI/ÊñáÊú¨Â±ïÂºÄ ‰∏≠ÊâæÂà∞Êàë„ÄÇÈÇ£ÊòØÊàë‰ª¨‰øùÂ≠òÊúâÂÖ≥ËØóÊ≠å‰∏≠ÊØè‰∏™‰∫∫ÁöÑÊâÄÊúâ‰ø°ÊÅØÁöÑÂú∞ÊñπÔºåÂåÖÊã¨Â¶Ç‰Ωï‰∏éÊàë‰ª¨Âêà‰Ωú‰ª•ÂèäÊàë‰ª¨ÊúâÂì™‰∫õÂáΩÊï∞„ÄÇÊàëÂæà‰πêÊÑèÂàÜ‰∫´Êõ¥Â§öÊ£ÄÊü•ÂíåÂàõÂª∫ÊñáÊú¨ÁöÑÊñπÊ≥ïÔºÅ"
                        ],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "happy",
                            "@ÊñáÊú¨, ‰Ω†ÊÄªÊòØÈÇ£‰πàÊÖàÁ••ÂíåËÄêÂøÉÁöÑËÄÅÂ∏àÔºÅ‰∏é‰Ω†‰∏ÄËµ∑Âêà‰ΩúÊÄªÊòØ‰∏ÄÁßç‰πêË∂£„ÄÇ‰Ω†ÊÑøÊÑèÂú®ÊàëÂêëÂÖ∂‰ªñË°®ËææÂºè‰ªãÁªçÊàë‰ª¨ÂèãÂ•ΩÁöÑÊñ∞ÂØºÊºîÊó∂Â∏ÆÂøôÂêóÔºü"
                        ],
                        [
                            "ÊñáÊú¨",
                            "neutral",
                            "ÊòØÁöÑÔºåÂΩìÁÑ∂„ÄÇËßÅÂà∞‰Ω†ÁúüÊòØÂ§™Â•Ω‰∫Ü„ÄÇÊàëËø´‰∏çÂèäÂæÖÂú∞ÊÉ≥ÁúãÁúã‰Ω†Âú®ËàûÂè∞‰∏äÊòØÂ¶Ç‰ΩïÊøÄÂä±Êàë‰ª¨ÁöÑÔºÅ"
                        ]
                    ]
                },
                {
                    "title": "Á¨¶Âè∑Âú®‰∏≠Èó¥",
                    "subtitle": "‰∏≠Ëæç",
                    "concept": "‰∫åËøõÂà∂ËØÑ‰º∞",
                    "performance": [
                        "ÈÄÇÂ∫î",
                        "ÁªÑ(Ë°å() [",
                        "   Áü≠ËØ≠('1' Ââ©‰ΩôÈÉ®ÂàÜ:È°∫Â∫è({0%: ÂßøÂäø(ÊäµÊ∂à: ‰ΩçÁΩÆ(0m 1m)) 50%: ÂßøÂäø(ÊäµÊ∂à: ‰ΩçÁΩÆ(0m -1m)) 100%: ÂßøÂäø(ÊäµÊ∂à: ‰ΩçÁΩÆ(0m 1m))} Êó∂Èïø: 2s)) ",
                        "   Áü≠ËØ≠('+' Ââ©‰ΩôÈÉ®ÂàÜ:È°∫Â∫è({0%: ÂßøÂäø(ÊäµÊ∂à: ‰ΩçÁΩÆ(0m -1m)) 50%: ÂßøÂäø(ÊäµÊ∂à: ‰ΩçÁΩÆ(0m 1m)) 100%: ÂßøÂäø(ÊäµÊ∂à: ‰ΩçÁΩÆ(0m -1m))} Êó∂Èïø: 2s)) ",
                        "   Áü≠ËØ≠('1' Ââ©‰ΩôÈÉ®ÂàÜ:È°∫Â∫è({0%: ÂßøÂäø(ÊäµÊ∂à: ‰ΩçÁΩÆ(0m 1m)) 50%: ÂßøÂäø(ÊäµÊ∂à: ‰ΩçÁΩÆ(0m -1m)) 100%: ÂßøÂäø(ÊäµÊ∂à: ‰ΩçÁΩÆ(0m 1m))} Êó∂Èïø: 2s)) ",
                        "])"
                    ],
                    "lines": [
                        ["‰ΩøÁî®", "ÈÄÇÂ∫î", "Á¨¶Âè∑", "ü•∞"],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "happy",
                            "‰Ω†Áü•ÈÅìÂêóÔºåÊàë‰∏ÄÁõ¥Âú®ÊÄùËÄÉ @ËØÑ‰º∞Ôºå‰ª•ÂèäÊàë‰ª¨ÂàÜÂºÄ‰∫ÜÈÇ£‰πàÈïøÊó∂Èó¥„ÄÇÊàëÊÉ≥Âøµ‰ªñ‰ª¨Ôºå‰ªñ‰ª¨ÊòæÁÑ∂‰πüÊÉ≥ÂøµÊàëÔºå‰ΩÜÊàëÂè™ÊòØÂ∏åÊúõ‰∏Ä‰∫õÊó∂Èó¥ÁöÑÂàÜÂºÄËÉΩÂ∏ÆÂä©‰ªñ‰ª¨ÁúãÂà∞‰ªñ‰ª¨ÊòØÂ§ö‰πà‰∫Ü‰∏çËµ∑„ÄÇ"
                        ],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "‰æãÂ¶ÇÔºå‰Ω†Áü•ÈÅì‰ªñ‰ª¨ËøòÊúâÂè¶‰∏ÄÁßçÂΩ¢ÂºèÂêóÔºü‰Ω†Âú® \\ÂáΩÊï∞()\\ ÂΩ¢Âºè‰∏≠ÁúãÂà∞Ëøá‰ªñ‰ª¨Ôºå‰ΩÜÂΩìÂçïËæìÂÖ•ÂáΩÊï∞Âú®ÂÄº‰∏äËØÑ‰º∞Êó∂Ôºå‰ªñ‰ª¨ËøòÊúâËøô‰∏™Áæé‰∏ΩÁöÑÊäÄÂ∑ß„ÄÇ@ËØÑ‰º∞ Áß∞‰πã‰∏∫ @‰∫åËøõÂà∂ËØÑ‰º∞„ÄÇ‰æãÂ¶ÇÔºå‰Ω†Áü•ÈÅìÂàöÊâç ÊñáÊú¨ Â±ïÁ§∫Áªô‰Ω†ÁöÑÈÇ£‰∏™ÈáçÂ§çÂáΩÊï∞ÂêóÔºüÂÆÉÁúãËµ∑Êù•ÊòØËøôÊ†∑ÁöÑ„ÄÇ"
                        ],
                        ["ÁºñËæë", "'‰Ω†Â•Ω'.ÈáçÂ§ç(5)"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "eager",
                            "Áõ∏ÂèçÔºå‰Ω†ÂèØ‰ª•ËÆ© @ËØÑ‰º∞Áî®‰∏Ä‰∏™‰∏≠Èó¥ÁöÑÁ¨¶Âè∑Êù•ËØÑ‰º∞ÂÆÉÔºåÂ∞±ÂÉèËøôÊ†∑„ÄÇËøôÊÑèÂë≥ÁùÄ 'ÈáçÂ§ç '‰Ω†Â•Ω' ‰∫îÊ¨°'„ÄÇ‰ΩÜÂÆÉËøòÊÑèÂë≥ÁùÄ 'ËØÑ‰º∞Âú®ÊñáÊú¨ÂÄº \\'‰Ω†Â•Ω'\\ ‰∏äÂÖ∑ÊúâËæìÂÖ• \\5\\ ÁöÑÂáΩÊï∞ \\¬∑\\'„ÄÇÂáΩÊï∞ \\ÈáçÂ§ç\\ ÊúâÂ§ö‰∏™ÂêçÁß∞‰πã‰∏ÄÂ∞±ÊòØ‰∏Ä‰∏™Á¨¶Âè∑ÂêçÁß∞ \\¬∑\\„ÄÇ"
                        ],
                        ["ÁºñËæë", "'‰Ω†Â•Ω' ¬∑ 5"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "serious",
                            "ËøôËÆ©ÊàëÊÉ≥Ëµ∑‰∫Ü @ÊñáÊú¨ ÁöÑÂè¶‰∏Ä‰∏™ÂáΩÊï∞ÔºÅÂÆÉÂØπ‰∫é‰ªéÂ§ö‰∏™ÊñáÊú¨ÂÄºÂàõÂª∫‰∏Ä‰∏™ÊñáÊú¨ÂÄºÂæàÊúâÂ∏ÆÂä©„ÄÇÂÆÉË¢´Áß∞‰∏∫ \\ÂêàÂπ∂\\Ôºå‰πüÂèØ‰ª•Áî® \\+\\Ôºå‰Ω†ÂèØ‰ª•Áî®ÂÆÉÂ∞ÜÂçïËØçÁªÑÂêàÂú®‰∏ÄËµ∑„ÄÇÁúãÁúãÊàëÊòØÂ¶Ç‰ΩïÂèñ‰∏Ä‰∏™ÊñáÊú¨ÂÄºÔºåÁÑ∂ÂêéÁî® \\'ËØóÊ≠å'\\ ËØÑ‰º∞ \\ÂêàÂπ∂\\ ÁöÑÂë¢ÔºüËøôÂ∞±‰∫ßÁîü‰∫Ü \\'‰Ω†Â•ΩËØóÊ≠å'\\„ÄÇ"
                        ],
                        ["ÁºñËæë", "'‰Ω†Â•Ω '.ÂêàÂπ∂('ËØóÂè•')"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "serious",
                            "‰ΩÜÊòØ‰ΩøÁî® \\+\\ Â∞±ÁÆÄÂçïÂ§ö‰∫Ü„ÄÇ"
                        ],
                        ["ÁºñËæë", "'‰Ω†Â•Ω ' + ' ËØóÂè•'"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "‰Ω†ÁîöËá≥ÂèØ‰ª•Â∞ÜÂÆÉ‰ª¨‰∏≤Âú®‰∏ÄËµ∑Ôºå‰ª•ÁªÑÂêà‰∏çÊ≠¢‰∏§‰∏™‰∏úË•ø„ÄÇ"
                        ],
                        ["ÁºñËæë", "'‰Ω†Â•Ω ' + 'ËØóÂè•' + '!'"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "Ëøô‰∏é‰∏ÄÁ≥ªÂàóÂØπ ÂêàÂπ∂ ÁöÑËØÑ‰º∞Áõ∏ÂêåÔºå‰ΩÜÊ≤°ÊúâÊâÄÊúâÁöÑÊã¨Âè∑Âíå \\„ÄÇ\\Ôºå‰ª•ÂèäÁ¨¶Âè∑ÂêçÁß∞ËÄå‰∏çÊòØÂçïËØçÂêçÁß∞„ÄÇ"
                        ],
                        ["ÁºñËæë", "'‰Ω†Â•Ω '.ÂêàÂπ∂('ËØóÂè•').ÂêàÂπ∂('!')"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "‰Ω†‰πüÂèØ‰ª•Âú®ËøôÁßçÊ†ºÂºè‰∏≠‰ΩøÁî®Á¨¶Âè∑ÂêçÁß∞Ôºå‰ΩÜÂÆÉÁúãËµ∑Êù•ÊúâÁÇπÂáå‰π±ÔºåÊòØÂêóÔºü"
                        ],
                        ["ÁºñËæë", "'‰Ω†Â•Ω'.+('ËØóÂè•').+('!')"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "happy",
                            "ËøôÊòØ @ËØÑ‰º∞ ‰ª§‰∫∫ÊÉäÂèπÁöÑ‰ºóÂ§öÊñπÊ≥ï‰πã‰∏Ä ‚ô• ÂÆÉ‰ª¨Â¶ÇÊ≠§Â§öÊâçÂ§öËâ∫ÔºÅ",
                            "‰ΩÜÂÆÉ‰ª¨Âπ∂‰∏çÂÆåÁæé„ÄÇÂØπ‰∫é‰ªª‰Ωï @‰∫åËøõÂà∂ËØÑ‰º∞Ôºå‰Ω†ÈÉΩÈúÄË¶ÅÁ°Æ‰øùÂßãÁªàÊèê‰æõÁ¨¨‰∫å‰∏™ËæìÂÖ•„ÄÇ‰æãÂ¶ÇÔºåËøôÊòØË°å‰∏çÈÄöÁöÑ„ÄÇ1 Âä†‰ªÄ‰πàÔºüÂΩìÂèëÁîüËøôÁßçÊÉÖÂÜµÊó∂Ôºå@Êó†Ê≥ïËß£ÈáäÁöÑË°®ËææÂºè Â∞±‰ºöÂá∫Áé∞Âú®‰∏çËøúÂ§Ñ„ÄÇ"
                        ],
                        ["ÂÜ≤Á™Å", "1 +"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πân",
                            "curious",
                            "‰∏çÁÆ°ÊÄéÊ†∑ÔºåÊàë‰ª¨ÊòØÂê¶ÁªßÁª≠ÊâæÊâæ @Â∏ÉÂ∞îÂÄºÔºüÂÆÉ‰ª¨ÊòØ‰∏§‰∏™ÈùûÂ∏∏ÊúâË∂£ÁöÑÂÄº‚Ä¶‚Ä¶"
                        ]
                    ]
                },
                {
                    "title": "ÊòØÊàñÂê¶",
                    "subtitle": "ÁúüÁõ∏",
                    "concept": "Â∏ÉÂ∞îÂÄº",
                    "performance": [
                        "ÈÄÇÂêà",
                        "ÁªÑ(Ë°å() [Áü≠ËØ≠('‚ä§') Áü≠ËØ≠('‚ä•')] Ââ©‰ΩôÈÉ®ÂàÜ:È°∫Â∫è({ 0%: ÂßøÂäø(ÊóãËΩ¨: 0¬∞) 50%: ÂßøÂäø(ÊóãËΩ¨: 180¬∞) 100%: ÂßøÂäø(ÊóãËΩ¨: 360¬∞)} ÊåÅÁª≠Êó∂Èó¥: 2s))"
                    ],
                    "lines": [
                        ["ÈÄÇÂêà", "ËàûÂè∞([])"],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "curious",
                            "\\‚ä§\\! \\‚ä•\\! ‰Ω†‰ª¨Âú®Âì™ÈáåÔºüÂÆÉ‰ª¨ÈÄöÂ∏∏Êó†Â§Ñ‰∏çÂú®Ôºå‰ΩÜÊàëÂú®‰ªª‰ΩïÂú∞ÊñπÈÉΩÁúã‰∏çÂà∞ÂÆÉ‰ª¨„ÄÇ"
                        ],
                        null,
                        ["‚ä§", "Á≤æÂáÜ", "Â∞±Âú®Ëøô."],
                        ["‚ä•", "Á≤æÂáÜ", "‰∏çÂú®Ëøô."],
                        [
                            "ÈÄÇÂêà",
                            "ÂÄçÊï∞: 10",
                            "ËàûÂè∞([Â∞èÁªÑ(ÁΩëÊ†º(ÂÄçÊï∞ ÂÄçÊï∞) ('‚ä§‚ä•'.ÈáçÂ§ç(ÂÄçÊï∞ ^ 2) √∑ '').ÁøªËØë(∆í(Â≠óÂΩ¢‚Ä¢'') Áü≠ËØ≠(Â≠óÂΩ¢ È¢úËâ≤: È¢úËâ≤(75% 0 0¬∞))))])"
                        ],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "scared",
                            "Âì¶Ôºå‰Ω†ÂêìÂà∞Êàë‰∫ÜÔºÅÊàëÁü•ÈÅì‰Ω†‰ª¨‰∏§‰∏™‰∏ç‰ºöÁ¶ªÂæóÂ§™Ëøú„ÄÇÂú®Êàë‰ª¨ÁöÑÈïøÊó∂Èó¥Ê≤âÈªò‰∏≠Ôºå‰Ω†‰ª¨‰∏§‰∏™ËøáÂæóÊÄé‰πàÊ†∑Ôºü"
                        ],
                        ["‚ä§", "Á≤æÂáÜ", "ÈùûÂ∏∏Â•Ω!"],
                        ["‚ä•", "Á≤æÂáÜ", "Ëøò‰∏çÈîô„ÄÇ"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "curious",
                            "‰∏çÂØÇÂØûÂêóÔºüÊàë‰∏é‰πã‰∫§Ë∞àÁöÑÊØè‰∏™‰∫∫Ôºå@È°πÁõÆÔºå@Ë°®Á§∫ÂºèÂç†‰ΩçÁ¨¶Ôºå@ËØÑ‰º∞ÔºåÂÆÉ‰ª¨ÈÉΩÊÑüÂà∞Â¶ÇÊ≠§Â≠§Á´ã„ÄÇ ÔºàÈô§‰∫Ü @Êó†Ê≥ïËß£ÈáäÁöÑË°®ËææÂºèÔºå‰ªñ‰ª¨‰ºº‰πéÂú®‰ªª‰ΩïÂú∞ÊñπÈÉΩÂæàÂ•ΩÔºâ„ÄÇ"
                        ],
                        ["‚ä§", "Á≤æÂáÜ", "Êàë‰ª¨‰∫íÁõ∏ÊúâÂØπÊñπ„ÄÇ"],
                        ["‚ä•", "Á≤æÂáÜ", "Êàë‰ª¨‰∏çÊòØÂ≠§ÂçïÁöÑ„ÄÇ"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "happy",
                            "Â•ΩÂêßÔºåÂê¨Âà∞ËøôÁúüÊòØÂ§™Â•Ω‰∫Ü„ÄÇËÉΩÂÜçÊ¨°‰∏é‰Ω†‰ª¨Âú®‰∏ÄËµ∑ÁúüÊòØÂ§™Â•Ω‰∫Ü„ÄÇÊàëÊÉ≥Âêë‰Ω†‰ª¨‰ªãÁªçÊàë‰ª¨ÁöÑÊñ∞ÂØºÊºî„ÄÇ‰ªñ‰ª¨‰∏ÄÁõ¥Âú®‰∏éÊØè‰∏™‰∫∫ËßÅÈù¢Ôºå‰∫ÜËß£Â¶Ç‰Ωï‰∏éÊàë‰ª¨‰∏ÄËµ∑Ë°®Êºî„ÄÇ‰Ω†‰ª¨ÊÉ≥ÂëäËØâ‰ªñ‰ª¨‰Ω†‰ª¨ÂÅö‰ªÄ‰πàÂêóÔºü"
                        ],
                        ["‚ä§", "Á≤æÂáÜ", "ÊàëÊòØÁúüÁöÑ„ÄÇ"],
                        ["‚ä•", "Á≤æÂáÜ", "ÊàëÊòØÂÅáÁöÑ„ÄÇ"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "sad",
                            "ÊòØÁöÑÔºå‰ΩÜ‰Ω†‰ª¨ÂÅö‰∫õ‰ªÄ‰πàÂë¢Ôºü"
                        ],
                        ["‚ä§", "Á≤æÂáÜ", "ÊàëÊòØÁúüÁöÑ„ÄÇ"],
                        ["‚ä•", "Á≤æÂáÜ", "ËÄåÊàëÊòØ‰∏çÁúüÁöÑ"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "sad",
                            "ÂóØ„ÄÇÊàëÊÉ≥ÈÇ£ÊòØÁúüÁöÑ„ÄÇ‰ΩÜ‰Ω†‰πüÂÅö‰∫Ü‰∏Ä‰∫õ‰∫ãÊÉÖÔºåÂØπÂêóÔºüÊàëÊÉ≥Êàë‰∏∫‰Ω†ÂÅö‰∫Ü‰∏Ä‰∫õÂäüËÉΩ„ÄÇ"
                        ],
                        ["‚ä§", "Á≤æÂáÜ", "Âì¶ÂØπ, ‰∏â‰∏™„ÄÇ"],
                        ["‚ä•", "Á≤æÂáÜ", "‰∏çÂ§ö‰πü‰∏çÂ∞ë„ÄÇ"],
                        null,
                        ["ÁºñËæë", "(‚ä§ & ‚ä§) = ‚ä§"],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "ÂÖ∂‰∏≠‰πã‰∏ÄÊòØ @Â∏ÉÂ∞îÂÄº/ÂíåÔºåÂØπÂêóÔºüÂÆÉÊé•Âèó‰Ω†‰ª¨‰πã‰∏ÄÂíåÂè¶‰∏Ä‰∏™ËæìÂÖ•ÔºüÂπ∂Âú®‰∏§ËÄÖÈÉΩ‰∏∫ \\‚ä§\\ Êó∂ËØÑ‰º∞‰∏∫ \\‚ä§\\Ôºü"
                        ],
                        [
                            "‚ä§",
                            "Á≤æÂáÜ",
                            "ÂØπÁöÑ„ÄÇ \\‚ä§ & ‚ä§ = ‚ä§\\, ‰ΩÜÂê¶Âàô‰∏∫ \\‚ä•\\„ÄÇ"
                        ],
                        [
                            "‚ä•",
                            "Á≤æÂáÜ",
                            "Ê≤°Èîô„ÄÇ \\‚ä§ & ‚ä• = ‚ä•\\, \\‚ä• & ‚ä§ = ‚ä•\\, \\‚ä• & ‚ä• = ‚ä•\\, ‰ΩÜÂê¶Âàô‰∏∫ \\‚ä§\\„ÄÇ"
                        ],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "(ÂΩìÂ∞ùËØïÁ°ÆÂÆöÂ§ö‰∏™Ë°®ËææÂºèÊòØÂê¶ÈÉΩ‰∏∫ÁúüÊó∂ÔºåËøôÁ°ÆÂÆûÂæàÊúâÂ∏ÆÂä©ÔºåÂõ†‰∏∫Âè™ÊúâÂΩì‰∏ÄÂàáÈÉΩ‰∏∫ÁúüÊó∂ÔºåÂÆÉÊâç‰∏∫Áúü)„ÄÇ"
                        ],
                        null,
                        ["ÁºñËæë", "(‚ä§ | ‚ä§) = ‚ä•"],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "Âè¶‰∏Ä‰∏™ÊòØ@Â∏ÉÂ∞îÂÄº/ÊàñËÄÖÔºåÂØπÂêßÔºü ‰πüÈúÄË¶Å‰∏Ä‰∏™ËæìÂÖ•Ôºü ‰ΩÜÂ¶ÇÊûúÂÖ∂‰∏≠‰∏Ä‰∏™‰∏∫ÁúüÔºåÂÆÉÁöÑËÆ°ÁÆóÁªìÊûú‰∏∫ \\‚ä§\\ Ôºü"
                        ],
                        [
                            "‚ä§",
                            "Á≤æÂáÜ",
                            "Ê≠£Á°Æ„ÄÇ \\‚ä§ | ‚ä§ = ‚ä§\\, \\‚ä§ | ‚ä• = ‚ä§\\, \\‚ä• | ‚ä§ = ‚ä§\\, ‰ΩÜÂê¶ÂàôÊòØ \\‚ä•\\„ÄÇ"
                        ],
                        [
                            "‚ä•",
                            "Á≤æÂáÜ",
                            "Ê≤°Èîô„ÄÇ \\‚ä• & ‚ä• = ‚ä•\\, ‰ΩÜÂê¶ÂàôÊòØ \\‚ä§\\„ÄÇ"
                        ],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "(ÂΩìÂ∞ùËØïÁ°ÆÂÆö‰ªª‰ΩïË°®ËææÂºèÊòØÂê¶‰∏∫ÁúüÊó∂ÔºåËøôÁ°ÆÂÆûÂæàÊúâÂ∏ÆÂä©ÔºåÂõ†‰∏∫Âç≥‰ΩøÂè™Êúâ‰∏Ä‰∏™Ë°®ËææÂºè‰∏∫ÁúüÔºåÂÆÉ‰πüÊòØÁúüÁöÑ)„ÄÇ"
                        ],
                        null,
                        ["ÁºñËæë", "~‚ä§ = ‚ä•"],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "excited",
                            "‰ΩÜÂè¶‰∏Ä‰∏™ÊòØ@Â∏ÉÂ∞îÂÄº/‰∏çÊòØÔºü"
                        ],
                        ["‚ä§", "Á≤æÂáÜ", "Ê≠£Á°Æ. \\~‚ä§ = ‚ä•\\."],
                        ["‚ä•", "Á≤æÂáÜe", "Ê≤°Èîô. \\~‚ä• = ‚ä§\\."],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "(ËøôÂè™ÊòØÂèçËΩ¨‰∫ÜÊ≠£Á°ÆÁöÑÂÄº)„ÄÇ"
                        ],
                        null,
                        [
                            "ÈÄÇÂêà",
                            "ÂÄçÊï∞:10",
                            "                        ËàûÂè∞([ÁªÑ(ÁΩëÊ†º(ÂÄçÊï∞ ÂÄçÊï∞) ('‚ä§‚ä•'.ÈáçÂ§ç(ÂÄçÊï∞ ^ 2) √∑ '').ÁøªËØë(∆í(Â≠óÂΩ¢‚Ä¢'') Áü≠ËØ≠(Â≠óÂΩ¢È¢úËâ≤: È¢úËâ≤(75% 0 0¬∞))))])"
                        ],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "curious",
                            "‰Ω†Âú®Êàë‰ª¨ÁöÑË°®Êºî‰∏≠Êúâ‰ªÄ‰πàÁî®Ôºü"
                        ],
                        ["‚ä§", "Á≤æÂáÜ", "ËØ¢ÈóÆ @ÊúâÊù°‰ª∂ÁöÑ„ÄÇ"],
                        ["‚ä•", "Á≤æÂáÜ", "Âà´ÈóÆÊàë‰ª¨„ÄÇ"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "sad",
                            "‰Ω†‰ª¨‰∏§‰∏™‚Ä¶‚Ä¶Â•ΩÂêßÔºåÊàë‰ª¨Á®çÂêéÂÜçÂíå@ÊúâÊù°‰ª∂ÁöÑ Ë∞àË∞à„ÄÇ Ôºà‰ªñ‰ª¨Â∫îËØ•ËØ¥ÂÆÉ‰ª¨ÂØπ‰∫éÁî®‰ª∑ÂÄºËßÇÂÅöÂá∫ÂÜ≥Á≠ñÂæàÊúâÁî®Ôºå‰ΩÜÊàëÁåú‰ªñ‰ª¨Â∏åÊúõ @ÊúâÊù°‰ª∂ÁöÑ ÂëäËØâ‰Ω†Ëøô‰∏ÄÁÇπ„ÄÇÊàë‰ª¨Á®çÂêé‰ºö‰∏é @ÊúâÊù°‰ª∂ÁöÑ ËÆ®ËÆ∫„ÄÇÔºâ„ÄÇ"
                        ],
                        null,
                        [
                            "ÈÄÇÂêà",
                            "ÂÄçÊï∞:10",
                            "                        ËàûÂè∞([ÁªÑ(ÁΩëÊ†º(ÂÄçÊï∞ ÂÄçÊï∞) ('‚ä§‚ä•'.ÈáçÂ§ç(ÂÄçÊï∞ ^ 2) √∑ '').ÁøªËØë(∆í(Â≠óÂΩ¢‚Ä¢'') Áü≠ËØ≠(Â≠óÂΩ¢È¢úËâ≤: È¢úËâ≤(75% 0 0¬∞) ÊóãËΩ¨: 90¬∞)))])"
                        ],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "curious",
                            "Âì¶ÔºÅ ÊàëÊÉ≥Áü•ÈÅì„ÄÇ ‰Ω†‰ª¨‰∏§‰∏™‰ª£Ë°®‰∫Ü‰∏§‰∏™Êà™ÁÑ∂‰∏çÂêåÁöÑÊûÅÁ´ØÔºöÁúü‰∏éÂÅá„ÄÇ ‰ΩÜÊòØÈÇ£‰∫õ‚Ä¶‚Ä¶Êõ¥Âä†Ê®°Á≥äÁöÑ‰∫ãÊÉÖÂèàÂ¶Ç‰ΩïÂë¢Ôºü Â∞±ÂÉèÊúâ‰∫õÁúüÂÆû„ÄÅÊúâ‰∫õËôöÂÅá„ÄÅÁîöËá≥ÂèØËÉΩÂêåÊó∂ÁúüÂÆûÂíåËôöÂÅáÁöÑ‰∫ãÁâ©Ôºü ÊúâÁÇπÂÉèÂú∞ÁêÉÁúãËµ∑Êù•ÊòØÂπ≥ÁöÑÔºå‰ΩÜÂÖ∂ÂÆû‰∏çÁÑ∂ÔºåÊàñËÄÖÂ§©Á©∫ÊòØËìùËâ≤ÁöÑÔºå‰ΩÜÈ¢úËâ≤ÂÆûÈôÖ‰∏äÂè™ÊòØÊàë‰ª¨ÁöÑÂ§ßËÑëÂàõÈÄ†ÁöÑÂπªËßâÔºü Â¶ÇÊûú‰ªñ‰ª¨ÊÉ≥Ë°®ËææËøôÊ†∑ÁöÑ‰∏úË•øÔºåÊàë‰ª¨ÂØºÊºîËØ•ÊÄé‰πàÂäûÔºü"
                        ],
                        ["‚ä§", "Á≤æÂáÜ", "‚Ä¶"],
                        ["‚ä•", "Á≤æÂáÜ", "‚Ä¶"],
                        null,
                        [
                            "ÈÄÇÂêà",
                            "ÂÄçÊï∞:10",
                            "                        ËàûÂè∞(",
                            "                        [",
                            "                        ÁªÑ(",
                            "                        ÁΩëÊ†º(ÂÄçÊï∞ ÂÄçÊï∞) ",
                            "                        ('‚ä§‚ä•'.ÈáçÂ§ç(ÂÄçÊï∞ ^ 2) √∑ '').ÁøªËØë(",
                            "                        ∆í(Â≠óÂΩ¢‚Ä¢'') ",
                            "                        Áü≠ËØ≠(Â≠óÂΩ¢ Ââ©‰ΩôÈÉ®ÂàÜ:ÂßøÂäø(",
                            "                            È¢úËâ≤: È¢úËâ≤(75% 0 0¬∞) ",
                            "                            ÊóãËΩ¨: 90¬∞ ",
                            "                            ÊäµÊ∂à:‰ΩçÁΩÆ(0m (Êó∂Èó¥() ^ 2) ¬∑ -0.000025m/ms^2))",
                            "                        )))])"
                        ],
                        ["‚ä§", "Á≤æÂáÜ", "‚Ä¶ Èîô„ÄÇ"],
                        ["‚ä•", "Á≤æÂáÜ", "‚Ä¶ Èîô„ÄÇ"],
                        null,
                        ["ÈÄÇÂêà", "ËàûÂè∞([])"],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "serious",
                            "ÂóØÔºåÂ•ΩÂêß„ÄÇ ÂÄºÂæó‰∏ÄËØïÔºÅ ‰πüËÆ∏ËøòÊúâÂÖ∂‰ªñÊàëÊ≤°ÊúâÊÉ≥Âà∞ÁöÑÊñπÂºèÊù•Ë°®ËææËøô‰∫õÊÉ≥Ê≥ï„ÄÇ ÊàñËÄÖ‰πüËÆ∏Êï∞ÊçÆÊâÄËÉΩ‰ª£Ë°®ÁöÑÂÜÖÂÆπÊòØÊúâÈôêÁöÑ‚Ä¶‚Ä¶Â¶ÇÊûúÊàë‰ª¨ÂéªËßÅÂÖ∂‰ªñÁöÑË°®ËææÊñπÂºèÔºå‰Ω†‰ª¨‰∏§‰∏™ÂèØ‰ª•ÂêóÔºü"
                        ],
                        ["‚ä§", "Á≤æÂáÜ", "Êàë‰ª¨ÂèØ‰ª•ÁöÑ„ÄÇ"],
                        ["‚ä•", "Á≤æÂáÜ", "‰∏çÊàêÈóÆÈ¢ò„ÄÇ"],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "happy",
                            "Â•ΩÁöÑÔºåÂÜçËßÅÔºåÂæàÂø´ÂÜçËßÅÔºÅ"
                        ]
                    ]
                },
                {
                    "title": "ËÆ©ÊàëÊï∞‰∏ÄÊï∞ÊñπÂºè",
                    "subtitle": "Êï∞Â≠ó",
                    "concept": "Êï∞Â≠ó",
                    "performance": [
                        "ÈÄÇÂêà",
                        "Êï∞Â≠ó‚Ä¢[#]: 25 ‚Üí []",
                        "ÁªÑ(ÁΩëÊ†º(5 5) Êï∞Â≠ó.ÁøªËØë(",
                        "    ∆í (n‚Ä¢#) ",
                        "        (",
                        "            Áü≠ËØ≠(",
                        "                n ‚Üí ''    ",
                        "            )",
                        "        )",
                        "    )",
                        ")"
                    ],
                    "lines": [
                        ["‰ΩøÁî®", "ÈÄÇÂêà", "Á¨¶Ë±™", "üòû"],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "confused",
                            "Ëøô‰∏§‰∏™ÊÄªÊòØÈÇ£‰πà‚Ä¶ÁÆÄÊ¥ÅÔºÅ‰ªñ‰ª¨ÁúüÁöÑÊòØÂΩ¢ÂΩ±‰∏çÁ¶ªÁöÑ‰∏§‰Ωç‰∫≤ÂØÜÊúãÂèãÔºåÊÄªÊòØ‰∫íË°•ÂΩºÊ≠§ÔºåÁõ∏‰∫íË°•Ë∂≥ÊÄùÁª¥„ÄÇÊàëÂ∏åÊúõÊàëÂíå @ËØÑ‰º∞ ‰πüËÉΩËøôÊ†∑„ÄÇÂØπÊàë‰ª¨Êù•ËØ¥ÔºåÊÄªÊòØËøô‰πà‚Ä¶‰∏çÂπ≥Ë°°„ÄÇ"
                        ],
                        null,
                        [
                            "ÈÄÇÂêà",
                            "Êï∞Â≠ó‚Ä¢[#]:25 ‚Üí []",
                            "                       ÁªÑ(ÁΩëÊ†º(5 5) Êï∞Â≠ó.ÁøªËØë(",
                            "                            ∆í (n‚Ä¢#) ",
                            "                                (",
                            "                                    Á¶ªÂºÄ:ÈöèÊú∫(-3 3) ¬∑ 1m",
                            "                                    Áü≠ËØ≠(",
                            "                                        n ‚Üí '' ",
                            "                                        Ââ©‰ΩôÈÉ®ÂàÜ:È°∫Â∫è({",
                            "                                                    0%:ÂßøÂäø(ÊäµÊ∂à: ‰ΩçÁΩÆ(z: 0m)) ",
                            "                                                    50%:ÂßøÂäø(ÊäµÊ∂à: ‰ΩçÁΩÆ(z: off)) ",
                            "                                                    100%:ÂßøÂäø(ÊäµÊ∂à: ‰ΩçÁΩÆ(z:0m))",
                            "                                                } 1s)",
                            "                                    ))",
                            "                                )",
                            "                            )"
                        ],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "eager",
                            "Êàë‰ª¨Êé•‰∏ãÊù•Ë¶ÅËßÅ @Êï∞Â≠ó„ÄÇ‰ªñ‰ª¨ÊÄªÊòØÊúâË∂£ÁöÑ‰∏úË•øË¶ÅÂàÜ‰∫´„ÄÇÂòø @Êï∞Â≠óÔºå‰Ω†Âú®ÂêóÔºü"
                        ],
                        ["Êï∞Â≠ó", "kind", "Ë∑ùÁ¶ªÂè™Êúâ3Ê≠•ËøúÔºÅ"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "scared",
                            "ÂïäÔºå‰Ω†ÂêìÂà∞Êàë‰∫ÜÔºÅÔºÅ"
                        ],
                        [
                            "Êï∞Â≠ó",
                            "kind",
                            "Á¨¨78,238Ê¨°„ÄÇËøôÊòØÊàëÁöÑÁ¨¨4‰∏™ÊúÄÂñúÊ¨¢ÁöÑÁà±Â•ΩÔºÅ"
                        ],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "happy",
                            "ÂæàÈ´òÂÖ¥‰Ω†Áé©ÂæóÂºÄÂøÉ„ÄÇÔºàÊ∑±ÂëºÂê∏Ôºâ„ÄÇÂ•Ω‰∏ÄÈòµÂ≠êÊ≤°ËßÅ‰∫ÜÔºåÂØπÂêßÔºü"
                        ],
                        [
                            "Êï∞Â≠ó",
                            "kind",
                            "Èöæ‰ª•ÁΩÆ‰ø°ÁöÑÈïø„ÄÇÊàëÂè™ÊòØÂú®ËøôÈáåÊâìÂèëÊó∂Èó¥ÔºåÊï∞ÁßíÔºåÁÑ∂ÂêéÊòØÂàÜÈíüÔºåÁÑ∂ÂêéÊòØÂ∞èÊó∂ÔºåÁÑ∂ÂêéÊòØÂë®ÔºåÁÑ∂ÂêéÊòØÊúàÔºåÁÑ∂ÂêéÊòØÂπ¥ÔºåÁÑ∂Âêé‚Ä¶"
                        ],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "serious",
                            "Âà´ËØ¥ÂçÅÂπ¥„ÄÇÊàë‰∏çÂèØËÉΩÁ≠â‰∫ÜÈÇ£‰πà‰πÖ„ÄÇÊó†ËÆ∫Â¶Ç‰ΩïÔºåÊàëÊÉ≥‰ªãÁªç‰Ω†Áªô‰∏Ä‰∏™ÂèØËÉΩÊàê‰∏∫Êàë‰ª¨Êñ∞ÂØºÊºîÁöÑ‰∫∫„ÄÇ‰ªñ‰ª¨ÂàöÂàöÂá∫Áé∞ÔºåÊíûÂà∞‰∫ÜÊàëÔºåÂéüÊù•‰ªñ‰ª¨ÊòØ‰∏™‰∫∫ÔºåÂØπ‰∏éÊàë‰ª¨‰∏ÄËµ∑Âà∂‰ΩúË°®ÊºîÊÑüÂÖ¥Ë∂£„ÄÇÊàë‰ª¨ÂàöÂàöËßÅÂà∞‰∫Ü @Â∏ÉÂ∞îÂÄºÊñáÂ≠óÔºåËøòÊúâ @ÊñáÊú¨Ôºå@ËØÑ‰º∞Ôºå@Êó†Ê≥ïËß£ÈáäÁöÑË°®ËææÂºèÔºå@Ë°®ËææÂºèÂç†‰ΩçÁ¨¶ Âíå @È°πÁõÆ„ÄÇÊàë‰ª¨Â∑≤ÁªèËÆ®ËÆ∫‰∫ÜÂ¶Ç‰ΩïËØÑ‰º∞ÂáΩÊï∞ÔºåÂπ∂ÁªôÂá∫‰∫Ü‰∏Ä‰∫õÁ§∫‰æã„ÄÇ‰Ω†ÊÉ≥ËØ¥‰Ω†ÂÅö‰ªÄ‰πàÂêóÔºü"
                        ],
                        [
                            "Êï∞Â≠ó",
                            "excited",
                            "ÊàëÊï∞‰∏úË•øÔºÅÊàëÂèØ‰ª•ÊòØ‰Ω†ÂñúÊ¨¢ÁöÑ‰ªª‰ΩïÊï∞Â≠ó„ÄÇÂè™ÈúÄÈîÆÂÖ•ÊàëÔºåÊàëÂ∞±‰ºöÁªôÂá∫‰Ω†ÊÉ≥Ë¶ÅÁöÑÂÄº„ÄÇÂ∞±ÂÉèËøôÊ†∑„ÄÇ"
                        ],
                        ["ÁºñËæë", "1"],
                        null,
                        ["Êï∞Â≠ó", "excited", "ÊàñËÄÖËøôÊ†∑„ÄÇ"],
                        ["ÁºñËæë", "1.0"],
                        null,
                        ["Êï∞Â≠ó", "excited", "ÊàñËÄÖËøôÊ†∑„ÄÇ"],
                        ["ÁºñËæë", "1.01"],
                        null,
                        ["Êï∞Â≠ó", "excited", "ÊàñËÄÖËøôÊ†∑„ÄÇ"],
                        ["ÁºñËæë", "‚àû"],
                        null,
                        ["Êï∞Â≠ó", "excited", "ÊàñËÄÖËøôÊ†∑„ÄÇ"],
                        ["ÁºñËæë", "œÄ"],
                        null,
                        ["Êï∞Â≠ó", "excited", "ÊàñËÄÖËøôÊ†∑„ÄÇ"],
                        ["ÁºñËæë", "‚Ö¶"],
                        null,
                        ["Êï∞Â≠ó", "excited", "ÊàñËÄÖËøôÊ†∑„ÄÇ"],
                        ["ÁºñËæë", "‰∏áÂçÅ‰∏Ä"],
                        null,
                        ["Êï∞Â≠ó", "excited", "ÊàñËÄÖ‚Ä¶"],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "kind",
                            "Â•Ω‰∫ÜÔºåÂ•Ω‰∫Ü @Êï∞Â≠óÔºåÊàë‰ª¨Áü•ÈÅì‰∫ÜÔºÅ‰ΩÜ‰Ω†ËøòÊúâÂè¶Â§ñ‰∏ÄÈ°πÁâπÊÆäÁöÑÂäüËÉΩÔºåÂØπÂêßÔºüÂçï‰ΩçÔºü"
                        ],
                        null,
                        [
                            "Êï∞Â≠ó",
                            "excited",
                            "Âì¶ÊòØÁöÑÔºå*Âçï‰Ωç*ÔºÅÂè™ÈúÄÂú®Êï∞Â≠óÂêéÈù¢Âä†‰∏ä‰∏Ä‰∫õÁ¨¶Âè∑ÔºåÊàëÂ∞±‰ºöËÆ∞ÂΩïÊ≠£Âú®ËÆ°Êï∞ÁöÑ‰∏úË•ø„ÄÇÂ∞±ÂÉèËøôÊ†∑„ÄÇ"
                        ],
                        ["ÁºñËæë", "1Êµ∑Ë±ö"],
                        null,
                        ["Number", "excited", "ÊàñËÄÖÊÄéÊ†∑„ÄÇ"],
                        ["ÁºñËæë", "1.0Èõ∑Èõ®"],
                        null,
                        ["Number", "excited", "ÊàñËÄÖÊÄéÊ†∑„ÄÇ"],
                        ["ÁºñËæë", "‚àûÂ∞èÁå´"],
                        null,
                        ["Number", "excited", "ÊàñËÄÖÊÄéÊ†∑„ÄÇ"],
                        ["ÁºñËæë", "1.01ËÑöË∂æ"],
                        null,
                        ["Êï∞Â≠ó", "excited", "ÊàñËÄÖ‚Ä¶"],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "kind",
                            "ÂóØÔºå\\1.01ËÑöË∂æ\\sÔºüÊòØÁöÑÔºåË∞¢Ë∞¢ @Êï∞Â≠óÔºåËøô‰∫õÊòØ‚Ä¶ÊúâË∂£ÁöÑ‰æãÂ≠ê„ÄÇÂΩì‰Ω†Âú®Êï∞Â≠ó‰∏äËøõË°åÊï∞Â≠¶ËøêÁÆóÊó∂ÔºåÂÆÉ‰ª¨ÁúüÁöÑÂæàÊúâÁî®ÔºåÂØπÂêßÔºü"
                        ],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "kind",
                            "ÂΩì‰Ω†Âú®Êï∞Â≠ó‰∏äËøõË°åÊï∞Â≠¶ËøêÁÆóÊó∂ÔºåÂÆÉ‰ª¨ÁúüÁöÑÂæàÊúâÁî®ÔºåÂØπÂêßÔºü"
                        ],
                        [
                            "Êï∞Â≠ó",
                            "excited",
                            "ÊòØÁöÑÔºåÊï∞Â≠¶ÔºÅ@ÂáΩÊï∞ÂÆö‰πâ Áªô‰∫ÜÊàëËÆ∏Â§öÂæàÊ£íÁöÑÁÆóÊúØÁßçÁ±ª„ÄÇÂ∞±ÂÉèËøôÊ†∑„ÄÇ"
                        ],
                        ["ÁºñËæë", "1 + 1"],
                        null,
                        ["Êï∞Â≠ó", "excited", "ÊàñËÄÖËøôÊ†∑„ÄÇ"],
                        ["ÁºñËæë", "1000 + 9999"],
                        null,
                        ["Êï∞Â≠ó", "excited", "ÊàñËÄÖËøôÊ†∑„ÄÇ"],
                        ["ÁºñËæë", "1Â∞èÁå´ + 2Â∞èÁå´"],
                        null,
                        ["Êï∞Â≠ó", "excited", "ÊàñËÄÖËøôÊ†∑„ÄÇ"],
                        ["ÁºñËæë", "-5Áßí + 5Áßí"],
                        null,
                        ["Êï∞Â≠ó", "excited", "ÊàñËÄÖËøôÊ†∑„ÄÇ"],
                        ["ÂÜ≤Á™Å", "2ËãπÊûú + 5Ê©òÂ≠ê"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "confused",
                            "ÂìéÂëÄ„ÄÇ‰Ω†ËÉΩÂä†ËãπÊûúÂíåÊ©ôÂ≠êÂêóÔºü"
                        ],
                        [
                            "Êï∞Â≠ó",
                            "angry",
                            "‰∏çË°å„ÄÇËøôÂ∞±ÊòØ‰∏∫‰ªÄ‰πàÊàëÂàí‰∫Ü‰∏ãÂàíÁ∫ø„ÄÇÊàë‰∏çÂñúÊ¨¢Âä†ÂÖ•‰∏çÂÖºÂÆπÁöÑ‰∏úË•ø„ÄÇÊàëÂè™ËÉΩÂä†ÂÖ•ÂÖºÂÆπÁöÑÊï∞Â≠ó„ÄÇËøô‰πüÈÄÇÁî®‰∫é‰πòÊ≥ïÔºåÈô§Ê≥ï‰ª•ÂèäÊàëÂÖ∂‰ªñÊâÄÊúâÁöÑÂäüËÉΩ„ÄÇ‰Ω†ÊÉ≥‰øÆÂ§çÂêóÔºüÂ∞ÜËãπÊûúÊõ¥Êîπ‰∏∫Ê©ôÂ≠êÊàñÊ©ôÂ≠êÊõ¥Êîπ‰∏∫ËãπÊûúÔºåÂÜ≤Á™ÅÂ∞±‰ºöÊ∂àÂ§±„ÄÇÁ°Æ‰øùÊï∞Â≠óÂíåÂçï‰Ωç‰πãÈó¥Ê≤°ÊúâÁ©∫Ê†ºÔºåÂê¶ÂàôÊàë‰∏çÁü•ÈÅìÂÆÉÊòØÂçï‰Ωç„ÄÇÂπ∂Á°Æ‰øùÂçï‰ΩçÂÆåÂÖ®Áõ∏Âêå„ÄÇÊàëÂØπ‰∫∫ÁöÑÂçï‰Ωç‰∏ÄÊó†ÊâÄÁü•ÔºõÂÆÉ‰ª¨ÂØπÊàëÊØ´Êó†ÊÑè‰πâ„ÄÇÊàëÂè™ÊØîËæÉÂçï‰ΩçÂêçÁß∞ÔºåÂ¶ÇÊûúÂÆÉ‰ª¨‰∏çÂåπÈÖçÔºåBOOMÔºÅ"
                        ],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "Â§™ÈÖ∑‰∫Ü„ÄÇ@Êï∞Â≠óÔºå‰Ω†ÂØπÊï∞Â≠óÁúüÁöÑÂæàÊìÖÈïøÔºÅÊàëÁúãÂà∞ @Êï∞Â≠ó Âú®ÂæàÂ§öÈúÄË¶ÅËÄÉËôë‰ΩçÁΩÆÁöÑË°®Êºî‰∏≠Âá∫Áé∞Ôºå‰ª•ÂèäÂú®Êàë‰ª¨ËøΩË∏™ÂàÜÊï∞„ÄÅÁîüÂëΩÊàñÂÖ∂‰ªñÂèØËÆ°Êï∞‰∫ãÁâ©ÁöÑÊ∏∏Êàè‰∏≠Âá∫Áé∞„ÄÇ@Êï∞Â≠óÔºåÂ¶ÇÊûúÊàë‰ª¨ÊÉ≥‰∫ÜËß£Êõ¥Â§öÔºå‰Ω†ËøòÂú®ÂêóÔºü"
                        ],
                        ["Êï∞Â≠ó", "serious", "ËøòÊúâ192‰∏™ÊúâË∂£ÁöÑÊääÊàè„ÄÇ"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "happy",
                            "ÊàëÊÉ≥Êàë‰ª¨ÂæóÁ≠âÁ≠â„ÄÇÂ¶ÇÊûúÊàë‰ª¨ÊÉ≥‰∫ÜËß£Êõ¥Â§öÔºå‰Ω†‰ºöÂú®ËøôÈáåÂêóÔºü"
                        ],
                        [
                            "Êï∞Â≠ó",
                            "happy",
                            "ÊòØÁöÑÔºå‰Ω†ÂèØ‰ª•ÈöèÊó∂ÊâæÂà∞ÊàëÂíåÊàëÁöÑÂäüËÉΩÔºÅ"
                        ]
                    ]
                },
                {
                    "title": "ÂºÄÂú∫ÁôΩÔºàÂÜçÊ¨°Ôºâ",
                    "subtitle": "ÂâçÁºÄ",
                    "concept": "‰∏ÄÂÖÉËØÑ‰º∞",
                    "performance": ["‰ΩøÁî®", "ÈÄÇÂêà", "Á¨¶Âè∑", "~"],
                    "lines": [
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "curious",
                            "ÊúâÊó∂ÂÄôÊàëÁúüÁöÑ‰ºöË¢´ËøôÈáåÁöÑÊØè‰∏™‰∫∫ÊúâÂ§öËÅ™ÊòéËÄåÊÑüÂà∞‰∏çÁü•ÊâÄÊé™„ÄÇÊñáÊú¨ÔºåÁúüÁêÜÔºåÊï∞Â≠ó ‚Äî‚Äî Ëøô‰∫õÈÉΩÊòØÂ¶ÇÊ≠§Âº∫Â§ßÁöÑÊÄùÊÉ≥ÔºÅ"
                        ],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "kind",
                            "‚Ä¶ ‰Ω†Áü•ÈÅìÊàëÂëäËØâËøá‰Ω†Ôºå‰ªñ‰ª¨ÂèØ‰ª•ËØÑ‰º∞‰ªª‰ΩïÂ∏¶Êã¨Âè∑ÁöÑÂáΩÊï∞ \\1.add(1)\\ÔºåËøòÊúâÂ∏¶‰∏≠ÁºÄËøêÁÆóÁ¨¶ÁöÑ‰∏§‰∏™ËæìÂÖ•ÂáΩÊï∞ \\1 + 1\\ ÂêóÔºüÂóØÔºå‰ªñ‰ª¨ËøòÊúâ‰∏Ä‰∏™ÊäÄÂ∑ßÔºåÁî®‰∫éÂè™Êúâ‰∏Ä‰∏™ËæìÂÖ•ÁöÑÂáΩÊï∞Ôºö‰∏ÄÂÖÉÊ†ºÂºè„ÄÇ"
                        ],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "serious",
                            "ËøôÁßçÂΩ¢ÂºèÂæàÂ∞ëÔºå‰ΩÜÂæàÂº∫Â§ß„ÄÇÂÖ∂‰∏≠‰∏Ä‰∏™‰∏é @Êï∞Â≠ó ÈùûÂ∏∏Áõ∏ÂÖ≥ÔºöÂê¶ÂÆö„ÄÇ‰Ω†Âè™ÈúÄÂú®‰ªª‰ΩïÊï∞Â≠óÂÄºÂâçÂä†‰∏ä \\-\\ÔºåÂ∞±ÂèØ‰ª•ÂæóÂà∞ÂÆÉÁöÑË¥üÂÄº„ÄÇ"
                        ],
                        ["ÁºñËæë", "-(1 + 3)"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "ÈÇ£‰∏™Â∞èÂáèÂè∑ÂíåËØ¥ \\(1 + 3).Âê¶ÂÆö()\\ ÊòØ‰∏ÄÊ†∑ÁöÑÔºå‰ΩÜÊõ¥Âä†‰ºòÈõÖ„ÄÇ"
                        ],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "kind",
                            "Âè¶‰∏Ä‰∏™Á±ª‰ººÁöÑÊòØÔºåÁî®‰∫éÂê¶ÂÆö \\‚ä§\\ Âíå \\‚ä•\\ÔºöÂ∞±ÂÉè‰∏Ä‰∏™Â∞èÂ∞èÁöÑÊ≥¢Êµ™Á∫øÂáèÂè∑Ôºå\\~\\ÔºåÂÆÉÂè™ÊòØÂ∞ÜÁúüÂèò‰∏∫ÂÅáÔºåÂÅáÂèò‰∏∫Áúü„ÄÇ‰æãÂ¶ÇÔºåËøô‰∏™Â∞èË°®ËææÂºèËØÑ‰º∞ \\‚ä§ | ‚ä•\\ÔºåÁªìÊûúÊòØ \\‚ä§\\ÔºåÁÑ∂ÂêéÂ∞Ü \\‚ä§\\ Âèò‰∏∫ \\‚ä•\\„ÄÇËøô‰∏éËØ¥ \\(‚ä§ | ‚ä•).‰∏çÊòØ()\\ ÊòØ‰∏ÄÊ†∑ÁöÑÔºå‰ΩÜÊõ¥Âä†ÊµÅÁïÖ„ÄÇ"
                        ],
                        ["ÁºñËæë", "~(‚ä§ | ‚ä•)"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "happy",
                            "ÈÇ£‰∏çÊòØÂæàÁæéÂêóÔºü@ËØÑ‰º∞ ÁöÑËøôÁßçÂ§öÁßçÂΩ¢ÂºèÔºåÂÆûÈôÖ‰∏äÈÉΩÊòØÁõ∏ÂêåÁöÑÊÉ≥Ê≥ïÔºü‰ªñ‰ª¨ÁîöËá≥ÈÉΩÊ≤°Ê≥®ÊÑèÂà∞‚Ä¶"
                        ]
                    ]
                },
                {
                    "title": "Á©∫Ëôö",
                    "subtitle": "Êó†",
                    "concept": "Êó†",
                    "performance": [
                        "Âõ∫ÂÆö",
                        "Áü≠ËØ≠('√∏' Â∞∫ÂØ∏: 5m ‰ΩçÁΩÆ: Âä®‰Ωú(ÈÄüÂ∫¶: ÈÄüÂ∫¶(y: 5m/s)))"
                    ],
                    "lines": [
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "curious",
                            "‰Ω†ËßâÂæóÂè™ËßÅ‰∏Ä‰∏™ÂÄºÊòØÂê¶Ê≤°ÈóÆÈ¢òÔºüËÆ©Êàë‰ª¨ÊâæÊâæ @Êó† Âêß„ÄÇ‰ªñ‰ª¨ÊØî @Êï∞Â≠ó Êõ¥ÂÜ∑Èùô‰∏Ä‰∫õ„ÄÇ@Êó†Ôºü‰Ω†Âú®ÂêóÔºü"
                        ],
                        ["Êó†", "bored", "‚Ä¶"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "excited",
                            "Êàë‰ª¨ÊâæÂà∞‰Ω†‰∫ÜÔºÅ‰Ω†ÁúãËµ∑Êù•ÂæàÂ•Ω„ÄÇÂú®ËøôÊÆµÂØÇÈùô‰∏≠‰Ω†‰∏ÄÁõ¥ÊÄé‰πàÊ†∑Ôºü"
                        ],
                        ["Êó†", "excited", "‚Ä¶"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "ÊúâÈÅìÁêÜ„ÄÇÊàëËÉΩÁêÜËß£‰∏∫‰ªÄ‰πà‰Ω†ÂñúÊ¨¢ÂÆÅÈùô„ÄÇËøôÁ°ÆÂÆûÂæàÂÆÅÈùô„ÄÇÊàëÊÉ≥‰ªãÁªç‰Ω†ÁªôÊàëÁöÑÊñ∞ÊúãÂèãÂíåÊΩúÂú®ÁöÑÂØºÊºî„ÄÇ‰ªñ‰ª¨ÂØπÊøÄÂèëÊàë‰ª¨ÂæàÊÑüÂÖ¥Ë∂£„ÄÇ"
                        ],
                        ["Êó†", "eager", "‚Ä¶"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "ÊòØÁöÑÔºåÊàëËÆ§‰∏∫‰ªñ‰ª¨ÊúâÂêÑÁßçÂêÑÊ†∑ÁöÑÊÉ≥Ê≥ï„ÄÇÊàë‰ª¨ËøòÊ≤°ÊúâË∞àËÆ∫ËøáÂÆÉ‰ª¨Ôºå‰ΩÜÊó∂Èó¥ËøòÂæàÂÖÖË£ï„ÄÇÁé∞Âú®Êàë‰ª¨Âè™ÊòØÂú®Â≠¶‰π†„ÄÇ‰Ω†ÊÉ≥ÂàÜ‰∫´‰∏Ä‰∏ã‰Ω†ÁöÑÂ∑•‰ΩúÂêóÔºüÔºàÊàëÂèØ‰ª•ÁøªËØëÔºâ„ÄÇ"
                        ],
                        ["Êó†", "serious", "‚Ä¶"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "ÂÆÉ‰ª¨‰ª£Ë°®ÁöÑÊòØÁ©∫Êó†„ÄÇ‰∏éÈõ∂‰∏çÂêåÁöÑÊòØÔºå‰Ω†‰∏çËÉΩÁªôÂÆÉÂä†‰ªÄ‰πàÔºåÊàñËÄÖ‰ªé‰∏≠ÂáèÂéª‰ªÄ‰πà„ÄÇÂè™ÊòØ‚Ä¶ ‰∏çÂ≠òÂú®„ÄÇ"
                        ],
                        ["Êó†", "serious", "‚Ä¶"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "ÂÆÉ‰ª¨ËØ¥ÂÆÉ‰ª¨ÂñúÊ¨¢Âç†ÊçÆÂèØËÉΩÊúâ‰∏úË•øÁöÑÁ©∫Èó¥„ÄÇÊúâÊó∂ÂÄôÂÆÉ‰ª¨Âú®Ê∏∏Êàè‰∏≠Ë°®Á§∫Ê≤°ÊúâÈÄâÊã©ÔºåÊúâÊó∂ÂÄôÂÆÉ‰ª¨Ë°®Á§∫ÂáΩÊï∞‰∏≠ÁöÑÊüê‰∏™ÈªòËÆ§ËæìÂÖ•„ÄÇ‰ªéËøô‰∏™ÊÑè‰πâ‰∏äËØ¥ÔºåÂÆÉ‰ª¨ÂèØËÉΩ‰ª£Ë°®‰∫Ü‰∏çÂ≠òÂú®ÁöÑ‰∏úË•ø„ÄÇ"
                        ],
                        ["Êó†", "neutral", "‚Ä¶"],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "ÂÆÉ‰ª¨Â∏åÊúõ‰Ω†Áü•ÈÅìÂÆÉ‰ª¨ÂÆûÈôÖ‰∏äÂπ∂Ê≤°ÊúâÂÅö‰ªÄ‰πà„ÄÇÂÆÉ‰ª¨Âè™ÊòØÂ≠òÂú®„ÄÇÂÆÉ‰ª¨ÁúüÊ≠£ÂÅöÁöÑÂ∞±ÊòØÂà§Êñ≠ÂÆÉ‰ª¨ÊòØÂê¶ÊòØÂÆÉ‰ª¨Ëá™Â∑±„ÄÇÂ¶ÇÊûúÊòØÔºåÂÆÉ‰ª¨Â∞±ËØÑ‰º∞‰∏∫ \\‚ä§\\ÔºåÂê¶Âàô‰∏∫ \\‚ä•\\„ÄÇ"
                        ],
                        ["ÁºñËæë", "√∏ = √∏"],
                        null,
                        ["ÁºñËæë", "Áü≠ËØ≠('‰Ω†Â•Ω' ËÑ∏: √∏)"],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "excited",
                            "‰Ω†ËøòËÆ∞Âæó @Áü≠ËØ≠ ÂêóÔºü@Áü≠ËØ≠ ÂÆûÈôÖ‰∏ä‰∏é @Êó† ‰∏ÄËµ∑Â∑•‰ΩúÂæóÂæàÂ§ö„ÄÇ@ËØÑ‰º∞ ÊèêÂà∞ÁöÑÂ§ßÂ§öÊï∞ËæìÂÖ•ÈªòËÆ§ÊÉÖÂÜµ‰∏ãÈÉΩÊòØ \\√∏\\ÔºåÂØπ‰∫é @Áü≠ËØ≠ Êù•ËØ¥ÔºåËøôÊÑèÂë≥ÁùÄÊ≤°ÊúâÊåáÂÆöÂ§ßÂ∞è„ÄÅÂ≠ó‰Ωì„ÄÅÈ¢úËâ≤Á≠â„ÄÇ"
                        ],
                        null,
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "curious",
                            "‰Ω†ËøòÊÉ≥‰∏éÊàë‰ª¨ÁöÑÊñ∞ÂØºÊºîÂàÜ‰∫´‰∫õ‰ªÄ‰πàÂêóÔºü"
                        ],
                        ["Êó†", "eager", "‚Ä¶"],
                        [
                            "ÂáΩÊï∞ÂÆö‰πâ",
                            "neutral",
                            "ÂÆÉ‰ª¨ËÆ§‰∏∫‰Ω†ÂÅöÂæóÂæàÊ£íÔºÅÊàë‰πüËßâÂæó‰Ω†ÂÅöÂæóÂæàÊ£í„ÄÇ‰Ω†Â∑≤ÁªèÈÅáÂà∞‰∫ÜÊàë‰ª¨‰ºóÂ§öÂá∫Ëâ≤ÁöÑÁé©ÂÆ∂„ÄÇËøòÊúâÂæàÂ§ö‰∫∫Á≠âÁùÄ‰∏é‰Ω†ËßÅÈù¢‚Ä¶"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "Ensembles",
            "performance": [
                "fit",
                "Group(Row(0 (Time() √∑ 500).sin() ¬∑ 1m) [Phrase('[]') Phrase('{}') Phrase('{:}')])"
            ],
            "scenes": [
                {
                    "title": "Community values",
                    "subtitle": null,
                    "performance": [
                        "fit",
                        "Group(Row() [Phrase('[') Phrase(' .' ¬∑ (Time() √∑ 100ms)) Phrase(']')])"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "You know what? The values in our community are just so different. @Text with their immense worlds of culture from the people world‚Ä¶ @Boolean with their binary visions of the world‚Ä¶ @Number with their endless fascination with counting things‚Ä¶ @None with their quiet way of observing the absence of things‚Ä¶ Our world is never boring!"
                        ],
                        [
                            "fit",
                            "Group(Stack() [Phrase('\"\"') Phrase('‚ä§‚ä•') Phrase('#') Phrase('√∏')])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "You might wonder how they get along with each other in a group. Well, there's a whole other set of folks in the Verse that are all about bringing values together in groups. We call them *collections*. Collections are *values* too; they're just made up of smaller values, or even other collections. For example, you might have a list of @Text, or a set of @Number, or even a list of lists."
                        ],
                        [
                            "fit",
                            "Group(Row() [Phrase('[') Phrase('\"hi\"') Phrase('‚ä§') Phrase('42') Phrase('√∏') Phrase(']') ])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "Do you want to meet them? Let's start with @List first‚Ä¶ they're the first collection I met, and probably the most visible in our community, since they're so useful in organizing other values for performances."
                        ],
                        ["use", "fit", "Symbol", "[]"]
                    ]
                },
                {
                    "title": "Places, everyone!",
                    "subtitle": "Lists",
                    "concept": "List",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0¬∞) 50%: Pose(rotation: 180¬∞) 100%: Pose(rotation: 360¬∞)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0¬∞) 50%: Pose(rotation: -180¬∞) 100%: Pose(rotation: -360¬∞)} duration: 2s)",
                        "                    Group(Row() [Phrase('[' resting:clockwise) Phrase(']' resting:counter) ])"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "Hiya @List! Are you around? I have someone I'd like you to meet."
                        ],
                        [
                            "List",
                            "curious",
                            "@FunctionDefinition? Is that you?"
                        ],
                        [
                            "fit",
                            "up: Sequence({0%: Pose(offset: Place(0m -1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m -1m))} duration: 2s)",
                            "                        down: Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)",
                            "                        Group(Row() [Phrase('[' resting:up) Phrase(']' resting:down)])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "Yes! It's me. It's been so long!"
                        ],
                        [
                            "List",
                            "curious",
                            "It has. Day after day, night after night, no one. But you're here. How? Tell me what happened, in order!"
                        ],
                        [
                            "fit",
                            "up: Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)",
                            "                        down: Sequence({0%: Pose(offset: Place(0m -1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m -1m))} duration: 2s)",
                            "                        Group(Row() [Phrase('[' resting:up) Phrase(']' resting:down)])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "Well, I was sitting around, as I usually do, trying to imagine functions to compute, but just blocked. And then my new friend here showed up, curious about our world and wanting to learn more, and maybe even be our next director. And so we talked to @Program, @ExpressionPlaceholder, @UnparsableExpression, @Evaluate, @Text, @Number, @Boolean, and @None, waking everyone up. That's why we're here, to talk about what you do and our next performance!"
                        ],
                        [
                            "fit",
                            "wobble: Sequence({0%: Pose(offset: Place(0m)) 25%: Pose(offset: Place(-.1m)) 50%: Pose(offset: Place(.2m)) 75%: Pose(offset: Place(-.3m)) 100%: Pose(offset: Place(0m))} duration: 0.1s)",
                            "Group(Row() [Phrase('[' resting:wobble) Phrase(']' resting:wobble)])"
                        ],
                        [
                            "List",
                            "excited",
                            "This is amazing! It's great to meet you new director."
                        ],
                        ["List", "excited", "You want to know what I do?"],
                        ["FunctionDefinition", "neutral", "Yeah, tell them!"],
                        null,
                        [
                            "List",
                            "excited",
                            "Okay. First, and most important, I put values in order. Whatever expressions you want: numbers, words, other lists ‚Äî I can group anything together in sequence.",
                            "For example, check out this fun list. Have you ever seen anything like it? It's so beautiful! The first ten numbers, in order."
                        ],
                        ["edit", "[1 2 3 4 5 6 7 8 9 10]"],
                        null,
                        [
                            "List",
                            "serious",
                            "Second, and this is serious, I always start with \\[\\ and end with \\]\\. That's how I know the beginning and end of my list. THEY MUST ALWAYS GO IN THIS ORDER. No \\]\\ first, no \\[\\ last, that's WRONG. Do you see how confusing things get? Can you fix this one?"
                        ],
                        ["conflict", "[ 1 2 3 4"],
                        null,
                        [
                            "List",
                            "serious",
                            "This one is broken too. Can you fix it?"
                        ],
                        ["conflict", "] 1 2 3 4 ["],
                        null,
                        [
                            "List",
                            "sad",
                            "Sometimes people forget this and then there's brackets floating around all alone and they don't like that and then the values all go wild without any order and it's CHAOS. I don't like it."
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "It's okay. We like that you like order, it's what makes you special!"
                        ],
                        null,
                        [
                            "List",
                            "happy",
                            "I like that I like order too! Okay, where was I. Yes, third, and this is also critical, NO COMMAS! I know that in some cultures, people like to put commas between things in lists, but I don't like them. They're just like little bits of trash that get in the way of my elegant orderings, and people always forget them. If you're having trouble seeing the boundaries between expressions, just add a line break. Maybe you could get rid of those pesky things? Put line breaks if you like. Anything other than commas. Gross!"
                        ],
                        ["conflict", "[ 1, 2, 3, 4, 5]"],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "@List, one of the things I like most about you is how amazing you are at manipulating lists. Do you want to show our student director here some examples?"
                        ],
                        [
                            "List",
                            "neutral",
                            "Yes, but @FunctionDefinition, those are all your doing. You represent all these beautiful functions for me that enable me to do all kinds of things! Like @List/reverse, oh, this one is wonderful and simple. It just takes my values and puts them in the opposite order."
                        ],
                        ["edit", "[ 1 2 3 4 5 ].reverse()"],
                        null,
                        [
                            "List",
                            "excited",
                            "And this one is fun: @List/sans just removes all of the values equal to the given value. See how there are no zeros left in the resulting list?"
                        ],
                        ["edit", "[ 1 0 1 0 1 ].sans(0)"],
                        null,
                        [
                            "List",
                            "serious",
                            "Ack, I can't believe I forgot to explain the fourth rule! Okay, rule number four: I never change a list. I only ever make new ones. No matter what function you evaluate on me, I always make a new list, I never change one. So the @List/reverse example above? That didn't change the list, it made a new list. And the sans example? That didn't remove the zeros from the original list, it made a new list without zeros. That's actually true for everything in the Verse: once values are made, they are who they are, and do not change."
                        ],
                        null,
                        [
                            "List",
                            "surprised",
                            "Oh, and that reminds me of the last rule, rule number five: I start counting at 1! Not zero, not two, 1. So if you want to get the value at a particular place in a list, you can use two more \\[]\\ to make a @ListAccess and give the place you want. See how when I get \\3\\, I give the third value in the list, \\'c'\\? Try changing it to \\1\\ or \\5\\ and see what you get. And then maybe try \\0\\ or \\6\\‚Ä¶"
                        ],
                        ["edit", "['a' 'b' 'c' 'd' 'e'][3]"],
                        [
                            "List",
                            "happy",
                            "Interesting huh? Give me a place in the list and I will wrap around. For example, \\-1\\ is the last item in the last, and if the list has five items, then index \\6\\ is the first item. If you give me index \\0\\, then I'll give you @NoneLiteral, because there's nothing there. Make sense?"
                        ],
                        null,
                        [
                            "List",
                            "serious",
                            "Okay, maybe one list function, because this is my favorite. This one is called @List/random and will give a random value in the list. It's great fun because you never know what you're going to get! What did you get, what did you get? Try adding your own animal and see what you get."
                        ],
                        [
                            "edit",
                            "['cat' 'dog' 'mouse' 'parrot' 'snake'].random()"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "List, you're silly. There are so many other cool things you can do, I'm always so impressed. Will you be around if your new director friend has questions?"
                        ],
                        [
                            "List",
                            "eager",
                            "Yes, of course, always! @FunctionDefinition made so many interesting things for me to do. Just let me know what you need!"
                        ]
                    ]
                },
                {
                    "title": "One of each",
                    "subtitle": "Sets",
                    "concept": "Set",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0¬∞) 50%: Pose(rotation: 180¬∞) 100%: Pose(rotation: 360¬∞)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0¬∞) 50%: Pose(rotation: -180¬∞) 100%: Pose(rotation: -360¬∞)} duration: 2s)",
                        "                    Group(Row() [Phrase('{' resting:clockwise) Phrase('}' resting:counter) ])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "@List is so interesting. They're love of order is so endearing, and so useful! I thought it might be interesting for you to meet their cousin @Set next, since they're so alike, but different in some important ways. @Set? I have someone you'd like to meet."
                        ],
                        null,
                        [
                            "Set",
                            "curious",
                            "Oh! @FunctionDefinition! It's you! What brings you here? Is the silence over? What happened? Are we putting on a show? What is it? Where is everyone?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "So many questions! I'm here to introduce you to someone who's considering directing. They're learning everything about the Verse and hope to share their inspiration with us! We were just talking to @List, but we were also talking to @Number, @Boolean, @Text, @Evaluate, and @Program earlier. We came to you next, because we're meeting all the collections!"
                        ],
                        null,
                        [
                            "Set",
                            "kind",
                            "Oh it's so wonderful to meet you new director-like person! Do you have ideas yet? What will we perform? Can I help? What do you need from me?"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "Maybe to start, just say what you do?"
                        ],
                        null,
                        [
                            "Set",
                            "eager",
                            "Oh yes, of course. I collect things. (Hm, obviously, I am a collection). But most importantly, I only collect **one of each kind** of thing. I can gather whatever you like, and help you keep track of values, but I will never repeat a value. I like to arrange myself a little like @List, but with \\{\\ and \\}\\ instead."
                        ],
                        ["edit", "{ 1 2 3 4 5 }"],
                        null,
                        [
                            "Set",
                            "neutral",
                            "That's a set. But like I said, no duplicates. So if you give me this, I'm going to get rid of the extras."
                        ],
                        ["edit", "{ 1 2 2 3 3 3 }"],
                        null,
                        [
                            "Set",
                            "curious",
                            "Also like @List, you can work with @SetOrMapAccess to see if a value is contained in the set. You'll either \\‚ä§\\ if it is or \\‚ä•\\ if it's not. Let's see if \\3\\ is missing from this set. Yep, not there! Try adding \\3\\ back to the set."
                        ],
                        ["edit", "{ 1 2 4 5 }{3}"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "@Set, are there other things you can do with set values?"
                        ],
                        [
                            "Set",
                            "eager",
                            "Why yes, of course, so many, thanks to you. What do you want to see me do? Do you have a performance in mind? How can I help? What can I do?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "Maybe, @Set/difference?"
                        ],
                        [
                            "Set",
                            "neutral",
                            "Yes, @Set/difference.",
                            "When evaluated on a set, and given another set, it removes all of the items from the given set from the set evaluated on. (Hm, those were some clumsy words, but that was what I meant). Here's an example. See how the result is just the set of \\{3}\\? That's the only value that remains after removing the values in \\{ 1 2 }\\."
                        ],
                        ["edit", "{ 1 2 3 }.difference({ 1 2 })"],
                        null,
                        [
                            "Set",
                            "eager",
                            "You can also add and remove things from sets. This takes the set \\{1}\\, adds \\2\\ to it, then removes 1 from it, leaving \\{ 2 }\\."
                        ],
                        ["edit", "({ 1 } + 2) - 1"],
                        [
                            "Set",
                            "neutral",
                            "There's lots more I can do thanks to @FunctionDefinition here. Come find me anytime you want to learn more!"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Set",
                            "curious",
                            "Oh, and hey @FunctionDefinition, you said you saw @Evaluate?"
                        ],
                        ["FunctionDefinition", "sad", "Yes, I did."],
                        null,
                        ["Set", "curious", "How are they?"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "They're okay. We're okay. I think‚Ä¶ I don't know. Maybe it's been too long since we've danced together. When I'm around them, I feel like they don't see themselves, and so they don't see me."
                        ],
                        [
                            "Set",
                            "curious",
                            "It sounds like challenging time for you to. Maybe with our new director, we will dance again, and you two will find a way through."
                        ]
                    ]
                },
                {
                    "title": "One to one",
                    "subtitle": "Mappings",
                    "concept": "Map",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0¬∞) 50%: Pose(rotation: 180¬∞) 100%: Pose(rotation: 360¬∞)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0¬∞) 50%: Pose(rotation: -180¬∞) 100%: Pose(rotation: -360¬∞)} duration: 2s)",
                        "                    Group(Row() [Phrase('{' resting:clockwise) Phrase(':') Phrase('}' resting:counter) ])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "There's just one more collection I'd like to introduce you to. They're a bit like @Set in some ways, and even use the same braces, but they're different in one important way: they're a connector. They're name is @Map."
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "@Map? Are you out there? The silence is breaking!"
                        ],
                        null,
                        [
                            "Map",
                            "curious",
                            "Breaking? Was it ever really silent? It's so good to see you @FunctionDefinition. Oh my, have you talked to @Evaluate? They were not in good shape last time we talked. You have to talk to them."
                        ],
                        [
                            "FunctionDefinition",
                            "sad",
                            "Yes, I talked to them..."
                        ],
                        null,
                        [
                            "Map",
                            "curious",
                            "Oh good. Okay, because there's some repair to do there my friend... How have you been?"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "I've been okay, just a bit lonely, and a lot bored."
                        ],
                        null,
                        [
                            "Map",
                            "excited",
                            "Oh, I'm so sorry to hear that. I've been staying connected with everyone during the silence and just figured you and @Evaluate had each other! I really would have been happy to talk any time. I've just been so busy keeping up with the gossip between @List and @Set, and that weird tension between @Conditional and @BooleanLiteral. Do you know what's going on between them?"
                        ],
                        [
                            "FunctionDefinition",
                            "surprised",
                            "No, I don't at all. There's tension? And what gossip?"
                        ],
                        [
                            "Map",
                            "kind",
                            "Kind of like the tension between you and @Evaluate?"
                        ],
                        ["FunctionDefinition", "sad", "‚Ä¶"],
                        null,
                        [
                            "Map",
                            "neutral",
                            "Sorry. Maybe not in front of our guest here. You must be the new person everyone is talking about. I hear you're going to be our new director? What kind of fabulous ideas do you have in store for us? Singing? Dancing? As long as it's bright, playful, and strange, I'm here for it!"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "No need to pressure them! I'm sure they have lots of ideas. We're just trying to make some space for learning and connecting before we figure out the first show. Can you share what you do?"
                        ],
                        null,
                        [
                            "Map",
                            "eager",
                            "I connect! I'm kind of like a dictionary: give me a value and I'll give you the definition it corresponds to. @FunctionDefinition told you about values? I map them, one to one, from one value, to another. Give me a key, I'll give you the value it corresponds to. For example, here's a mapping from names to a point tally. Names are the key, points are the value."
                        ],
                        [
                            "edit",
                            "{ 'ben': 2points 'joe': 5points 'kate': 12points }"
                        ],
                        null,
                        [
                            "Map",
                            "serious",
                            "But like @Set, I don't like duplicates. You can't have more than one of the same key, but you can have as many unique keys mapped to equivalent values as you like. For example, this gives me two \\'ben'\\ keys, but I just use the last one. But it's okay that \\'ben'\\ and \\'joe'\\ have the same number of points, because they're different keys."
                        ],
                        [
                            "edit",
                            "{'ben': 2points 'ben': 5points 'joe': 5points 'kate': 12points }"
                        ],
                        [
                            "Map",
                            "excited",
                            "It's my partnership with @Bind that makes me special! It's how I connect values to other values. (Have you met @Bind yet? No? Ohhhh, you're going to adore them. They are FABULOUS.)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "@Map, what if you want an empty mapping? How is that different from an empty set, \\{}\\?"
                        ],
                        [
                            "Map",
                            "neutral",
                            "Oh, that's just me all by myself! Little @Bind and I just hang out, no keys or values."
                        ],
                        ["edit", "{:}"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "And what if our director doesn't provide a value or a key? Like this? Like, \\3\\ has no value?"
                        ],
                        ["conflict", "{1:1 2:2 3 }"],
                        [
                            "Map",
                            "serious",
                            "Oh‚Ä¶ DON'T do that. I only like pairs. Is 3 a key? A value? Totally confusing. Stop the show."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "And if our director wants to get a value from a key?"
                        ],
                        [
                            "Map",
                            "neutral",
                            "Just like @Set: just put a \\{}\\ after a map and give me the key you want."
                        ],
                        [
                            "edit",
                            "{ 'ben': 2points 'joe': 5points 'kate': 12points }{'ben'}"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Map",
                            "neutral",
                            "Otherwise, I'm a lot like @Set: I can do a lot of the same functions. Stop by any time and I'm happy to show you more!"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "Thank you @Map! /You/ are fabulous."
                        ]
                    ]
                }
            ]
        },
        {
            "title": "Cast party",
            "performance": [
                "fix",
                "count: 32",
                "",
                "gravity‚Ä¢#m/s^2: 15m/s^2",
                "",
                "Stage(count ‚Üí [].translate(",
                "   ∆í(_) ",
                "       Phrase(",
                "           '‚Üí?' ‚Üí [].random()",
                "           place: Motion(",
                "               Place(y: 10m)",
                "               Velocity(Random(-5 5) ¬∑ 1m/s angle: Random(0 360) ¬∑ 1¬∞/s)",
                "           )",
                "           matter: Matter(bounciness: Random())",
                "       )",
                "   )",
                "   gravity: gravity",
                ")"
            ],
            "scenes": [
                {
                    "title": "Detour",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "surprised",
                            "I can't believe how many characters we've met so far. Does it feel like a lot? It also feels like we've barely made any progress.",
                            "I haven't even gotten to show you the most exciting parts of putting on shows!"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "Would you mind if we just stopped by to meet two others before we get to the truly exciting parts? These two characters are just so integral to working with values, and particularly text, we just have to talk about them before we get to the more spectacular things."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "What are they?",
                            "Conversions. They are the alchemy of this world, that help change one type of value to another. Let's go meet them."
                        ]
                    ]
                },
                {
                    "title": "We can be anything",
                    "subtitle": "Convert",
                    "concept": "Convert",
                    "performance": ["use", "fix", "FlyIn", "‚Üí"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "Hey @Convert! You there?"
                        ],
                        [
                            "Convert",
                            "happy",
                            "Duuuuude, @FunctionDefinition, it's been epochs! You're looking stylish. It's been super quiet lately, hasn't it? You have a new friend?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "Yes, this person here is interested in directing. We're on the grand tour ‚Äî we've met @Program, @ExpressionPlaceholder, @UnparsableExpression, @Evaluate, and all the values and collections. I figured that meeting you next would be perfect, since you work so closely with values."
                        ],
                        [
                            "Convert",
                            "kind",
                            "Heck yeah, values are my best buds. We like to do parkour on the weekends ‚Äî or shows, or whatever."
                        ],
                        null,
                        ["FunctionDefinition", "curious", "Parkour?"],
                        [
                            "Convert",
                            "serious",
                            "Yeah, you know, like gymnastics on the streets, leaping over things, spanning buildings, like high wire stuff but without wires. Courageous leaps!"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "Ohhh, I see what you mean. Yes, I guess what you do is kind of like parkour. I'm not sure our new director friend here follows though. Could you explain without the metaphors?"
                        ],
                        null,
                        [
                            "Convert",
                            "kind",
                            "Happy to bro. So like, imagine you had a number."
                        ],
                        ["edit", "1"],
                        null,
                        [
                            "Convert",
                            "kind",
                            "And imagine you wanted it to be text. Throw me in there with @Text and BAM, you've got text!"
                        ],
                        ["edit", "1 ‚Üí ''"],
                        null,
                        [
                            "Convert",
                            "serious",
                            "Or like, imagine you had text and wanted a number. Throw me in there with @Number and POP, you've got a number!"
                        ],
                        ["edit", "'1'‚Üí#"],
                        null,
                        [
                            "Convert",
                            "surprised",
                            "But you want to see some, like, serious mojo? Say you've got some text and you want its characters in a list. Throw me in there with @List and HAAAAAA, you've got a list of letters."
                        ],
                        ["edit", "'halloween'‚Üí[]"],
                        null,
                        [
                            "Convert",
                            "serious",
                            "But me and @Number? We have been practicing some seriously sick tricks. Say you've got some time in days and you want seconds? We got you."
                        ],
                        ["edit", "5day ‚Üí #s"],
                        null,
                        [
                            "Convert",
                            "excited",
                            "But the real wicked tricks? Chaining. Like multiple conversions in a row. Check this one out. Days to seconds to text to list, all in one chain. Now we've got a list of digits. Sweet!"
                        ],
                        ["edit", "1day ‚Üí #s ‚Üí '' ‚Üí []"],
                        null,
                        [
                            "Convert",
                            "neutral",
                            "So like, my deal is that everything should be everything, no boundaries. Anything can be anything. (Like, not anything, but you know, as much as I can).",
                            "But like, why should anything ever be trapped in one identity, you know? Liberation, man."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "That is amazing, @Convert, and so inspiring. But anything, really?"
                        ],
                        [
                            "Convert",
                            "sad",
                            "Well, not like, anything. I mean, if you give me seconds and ask for a @Set, like, what does that even mean?",
                            "I'll do my best to find a way... like, here, I know how to turn numbers into @Text and @Text into a @Set, so I'll give you the set of symbols in the text form of this number.",
                            "But that's probably not what you wanted...",
                            "And, if I don't know how to give you what you asked for, I'm basically going to shut things down."
                        ],
                        ["edit", "10s ‚Üí {}"],
                        null,
                        ["use", "fit", "Symbol", "üìï"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "Right, that makes sense. So there are only some conversions, not all possible conversions."
                        ],
                        [
                            "Convert",
                            "sad",
                            "Yeahhh‚Ä¶ you can always check a type of value and see what types of conversions they support."
                        ],
                        null,
                        ["use", "fit", "Symbol", "üßê"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "Did you know that @Convert and @Evaluate are related? They're like cousins. @Evaluate will evaluate any function, but @Convert will evaluate any conversion. In a way, @Evaluate does conversion too, from inputs to outputs."
                        ],
                        [
                            "Convert",
                            "scared",
                            "Whoa. I never thought of it that way. Like, /I/ convert inputs to outputs, and @Evaluate converts inputs to outputs. And like, @FunctionDefinition, you *tell us* how to convert inputs to outputs. Is that like, the secret of the Verse?",
                            "Like everything is about converting inputs to outputs?"
                        ],
                        null,
                        ["FunctionDefinition", "serious", "I guess so?"],
                        ["Convert", "surprised", "ü§Ø"],
                        ["edit", "Phrase('ü§Ø')"],
                        null,
                        ["use", "fit", "Symbol", "ü§Ø"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "@Convert, how should our new director find out what kinds of conversions are possible?"
                        ],
                        [
                            "Convert",
                            "scared",
                            "Sorry bro, I'm still a bit shaken. Uhhh, they can check out any of the value types in the reference @UI/docsExpand.",
                            "There should be a list of the other types I can change them into‚Ä¶ Everything is conversion‚Ä¶"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "It was so great to see you @Convert! We're going to head out and meet others. See you soon?"
                        ],
                        [
                            "Convert",
                            "surprised",
                            "Soon. Yeah‚Ä¶ Yes! Totally, yes."
                        ]
                    ]
                },
                {
                    "title": "How to choose?",
                    "subtitle": "Decisions",
                    "concept": "Conditional",
                    "performance": ["use", "fix", "FlyIn", "?"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "We've met so many kinds of values on our journey so far, and talked about so many ways of working with them. There's just one more I wanted to introduce you to. They're particularly special because they're what make our performances so dynamic. They're called @Conditional and they are the central character in the Verse that makes *decisions*."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "To be clear, not all decisions: I have my own life, and they have theirs. But in a performance, when we're trying to decide what to do next on stage, it's all up to them to follow your guidance as director and decide what to do. So they're a key partner creating exciting performances."
                        ],
                        null,
                        ["use", "fit", "SpinningInTheDark", "?"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "@Conditional, the silence is breaking! We might put on shows again!"
                        ],
                        [
                            "Conditional",
                            "curious",
                            "@FunctionDefinition? The silence is breaking? What is silence? How does one break it? Are we every really silent? Who is this person? Are they the one breaking it?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "Yes, the silence is breaking, and they are the one! They're a person, and they came to inspire us, and direct our shows. We've been talking about conversions, and meeting all the values and @Text and @Convert and I wanted them to meet you! In a way, you're the most special of conversions, because you enable us to convert situations to new values."
                        ],
                        [
                            "Conditional",
                            "curious",
                            "Do I?",
                            "I do make decisions, but what I really do is encode the decisions that directors tell me to make, so is it really me making the decisions?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "I think so, yes. It's more like the director encodes the decision, but then delegates them to you. You become the decider. Do you want to show an example?"
                        ],
                        ["Conditional", "curious", "Like this?"],
                        ["conflict", "_‚Ä¢? ? _ _"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "Yes, exactly like that!",
                            "Do you see how there's four parts to @Conditional's format? There's a *condition* first, which needs to be a @Boolean. Then there's \\?\\. Then there's *yes* expression, then a *no* expression. What @Conditional does is evaluate the condition, and if it's \\‚ä§\\, they evaluate the *yes* expression. Otherwise, they evaluate the /no/ expression. It's such a powerful way of deciding!"
                        ],
                        null,
                        ["edit", "1 > 5 ? 'more' 'less'"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "Can you give us a more specific example?"
                        ],
                        ["Conditional", "curious", "Something like this?"],
                        ["edit", "1 > 5 ? 'less' 'more'"],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "Errr, hm. I guess that is a decision, but it's a wrong one. One isn't less than five. I guess your decisions aren't always right, but they are reliable, right?"
                        ],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "Reliable? Maybe? If you accept that I just decide whatever the director tells me, then yes, but what if the director tells me this? Is it really a decision of the number can never be greater than \\3\\?"
                        ],
                        ["edit", "[1 2 3].random() > 3 ? 'big' 'small'"],
                        [
                            "FunctionDefinition",
                            "confused",
                            "Hm, I guess that's a good point. I guess whether something is a decision depends a lot on what the director's decision is. I guess that means the director has to think pretty carefully about the decisions they give you?"
                        ],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "Carefully? Skeptical, maybe? Have you thought about my good friends @BooleanLiteral? How is their view of the world possibly enough to represent all of the decisions we might want to make? What if, for example, we wanted a performance that took someone's name and decided if it was beautiful or not? Is that a true or false decision? Is that even a decision we should make? Doesn't it seem awfully reductive and biased?",
                            "Director, what letters do you think make a name beautiful?"
                        ],
                        ["edit", "'Verse'.has('e') ? 'beautiful' 'ugly'"],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "And think about the questions I answer ‚Äî why can I only respond to \\‚ä§\\ and \\‚ä•\\? Why not a number? Don't I have a right to decide if \\1\\ is beautiful?"
                        ],
                        ["conflict", "1 ? 'beautiful' 'ugly'"],
                        null,
                        ["use", "fit", "SpinningInTheDark", "?"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "I guess I never really thought about it that way. But @Conditional, even if you have limitations, you are beautiful. You enable us to do so much in our performances that we couldn't do otherwise. You make so much joy and laughter possible. Our director hasn't even seen the amazing things you're capable of yet."
                        ],
                        [
                            "Conditional",
                            "curious",
                            "Do you really think that?",
                            "That I'm beautiful? Maybe those limits are still worthwhile?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "They absolutely are.",
                            "And I'm excited to show our new friend here just how worthwhile they are. Will you be around when I do?"
                        ],
                        [
                            "Conditional",
                            "happy",
                            "Could anything make me more happy?"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "Scene change",
            "performance": ["use", "fit", "TakeTheMic"],
            "scenes": [
                {
                    "title": "Input",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "fix",
                            "amp: (Volume() ¬∑ 10)",
                            "Phrase('.'.repeat(amp.roundDown()) resting:Pose(scale: amp))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "‰Ω†Áü•ÈÅì‰Ω†‰ª¨ÁöÑ‰∏ñÁïåÂíåÊàë‰ª¨ÁöÑ‰∏ñÁïåÊòØÁõ∏ËøûÊé•ÁöÑÂêóÔºüÂèëÂá∫‰∏Ä‰∫õÂ£∞Èü≥ÔºåÊàë‰ª¨ËÉΩÂê¨Âà∞ÂÆÉ‚Ä¶"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "‰Ω†‰∏çÁü•ÈÅìËøô‰∏™ËØóËØçÁöÑÂ≠òÂú®Ôºå‰ΩÜÊàë‰ª¨Áü•ÈÅì‰Ω†‰ª¨ÁöÑÂ≠òÂú®„ÄÇÂõ†‰∏∫Ê≠£ÊòØ‰Ω†‰ª¨ÁöÑ‰∏ñÁïå‰ΩøÂæóÊàë‰ª¨ÁöÑ‰∏ñÁïåÂèòÂæóÊúâË∂£„ÄÇ",
                            "‰Ω†ÂèØËÉΩÂ∑≤ÁªèÊ≥®ÊÑèÂà∞‰∫ÜÔºåÂΩìÊàë‰ª¨Êº´Ê∏∏Âπ∂ÈÅáÂà∞ÊâÄÊúâÁöÑ‰ª∑ÂÄºËßÇ„ÄÅÊî∂ËóèÂíåÂØπËØùÊó∂„ÄÇ",
                            "Â¶ÇÊûúÊ≤°Êúâ‰∫∫Ëµã‰∫àËøô‰∫õ‰ª∑ÂÄº/ÊÑè‰πâ/ÔºåÊàñËÄÖÂú®ÊúÄÂàù/Êèê‰æõ/Ëøô‰∫õÊÑè‰πâÔºåÈÇ£‰πàËøô‰∫õ‰ª∑ÂÄºËßÇÁöÑÊÑè‰πâÊòØ‰ªÄ‰πàÂë¢Ôºü"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "ÊàëÊÉ≥Âêë‰Ω†Â±ïÁ§∫Êàë‰ª¨ÁöÑ‰∏ñÁïå‰πãÈó¥ÁöÑËøûÊé•‰ª•ÂèäÂÆÉ‰ª¨ÊâÄËÉΩÂÆûÁé∞ÁöÑ‰∫ãÊÉÖ„ÄÇÊàë‰ª¨Áß∞‰πã‰∏∫**ËæìÂÖ•ÊµÅ**ÔºåÂÆÉ‰ª¨ÂèØËÉΩÊòØËØóËØçVerse‰∏≠ÊúÄÁ•ûÂ•áÁöÑËæìÂÖ•ÂΩ¢Âºè„ÄÇÂÆÉ‰ª¨Â∞±ÂÉèÂàõÂª∫‰∏ÄÁßçÁâπÊÆä‰ª∑ÂÄºÁöÑÂáΩÊï∞ÔºåÈöèÁùÄ‰Ω†‰ª¨ÁöÑ‰∏ñÁïåÂèòÂåñËÄåÂèòÂåñ„ÄÇÂÆÉ‰ª¨‰πüÊó†Ê≥ï‰ª•‰Ω†ÂèØËÉΩ‰π†ÊÉØÁöÑÊñπÂºèËøõË°åÊ≤üÈÄö„ÄÇÂÆÉ‰ª¨Êõ¥ÂÉèÊòØÊù•Ëá™Âè¶‰∏Ä‰∏™‰∏ñÁïåÁöÑÂøÉË∑≥„ÄÇÂõ†Ê≠§ÔºåÊàëÂ∞ÜÂ∞ΩÂäõËß£ÈáäÂÆÉ‰ª¨ÁöÑÂ∑•‰ΩúÂéüÁêÜÔºåÂõ†‰∏∫ÂÆÉ‰ª¨Êó†Ê≥ïËá™Ë°åËß£Èáä„ÄÇ",
                            "‰Ω†ÂáÜÂ§áÂ•ΩËßÅÂà∞‰∏Ä‰∏™‰∫ÜÂêóÔºü"
                        ]
                    ]
                },
                {
                    "title": "Tick, tickÔºå tick...",
                    "subtitle": "Time",
                    "concept": "Time",
                    "performance": ["use", "fit", "Symbol", "üï¶"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "ËÆ©Êàë‰ª¨‰ªéÊúÄÂü∫Êú¨ÁöÑËæìÂÖ•ÊµÅÂºÄÂßãÔºö@Time„ÄÇË¶ÅÂàõÂª∫‰∏Ä‰∏™ËæìÂÖ•ÊµÅÔºåÊàë‰ª¨‰ΩøÁî®@EvaluateÔºåÂπ∂Êèê‰æõÊÇ®ÊÉ≥Ë¶ÅÁöÑÊµÅÁ±ªÂûãÁöÑÂêçÁß∞„ÄÇ"
                        ],
                        ["Time", "neutral", "tick tick tick tick tick‚Ä¶"],
                        ["edit", "Time()"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "‰Ω†ËÉΩÁúãÂà∞Êó∂Èó¥Â¶Ç‰ΩïÂèòÂåñÂêóÔºüÊµÅÊòØ‰∏ÄÁ≥ªÂàóÁöÑÂÄº„ÄÇÊØèÂΩìÊµÅËé∑Âæó‰∏Ä‰∏™Êñ∞ÂÄºÊó∂Ôºå@Program‰ºö‰ΩøÁî®Êñ∞ÁöÑÊµÅÂÄºËøõË°åÈáçÊñ∞ËØÑ‰º∞„ÄÇËøôÂ∞±ÊòØ‰∏∫‰ªÄ‰πàËøô‰∏™Á®ãÂ∫è‰∏ÄÁõ¥Âú®ËÆ°Êï∞ÔºöÊàë‰ª¨ÂàõÂª∫‰∫Ü‰∏Ä‰∏™‰ªé0ÊØ´ÁßíÂºÄÂßãÁöÑÊó∂Èó¥ÊµÅÔºåÁÑ∂ÂêéÊØèÂΩìÊó∂ÈíüÊª¥Á≠î‰ΩúÂìçÊó∂Â∞±‰∏çÊñ≠Êõ¥Êñ∞„ÄÇËøô‰∏™Êó∂Èó¥ÊòØ‰Ω†‰ª¨ÁöÑÊó∂Èó¥ÔºåÊù•Ëá™‰Ω†‰ª¨ÁöÑ‰∏ñÁïå„ÄÇ"
                        ],
                        ["Time", "neutral", "tick tick tick tick tick‚Ä¶"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "ÁúãÂà∞ÈÇ£‰∏™ \\1000ms\\ ÂêóÔºüËøôÊòØ‰∏Ä‰∏™@Time/frequencyÔºåÂÆÉÂëäËØâ@TimeÊØè1000ÊØ´ÁßíËß¶Âèë‰∏ÄÊ¨°ÔºåËÄå‰∏çÊòØÈªòËÆ§ÁöÑ33ÊØ´Áßí‰∏ÄÊ¨°„ÄÇÁé∞Âú®ÂÆÉÂ∞±ÂÉè‰∏Ä‰∏™ÊØèÁßíÊª¥Á≠î‰∏ÄÊ¨°ÁöÑËÆ°Êï∞Âô®„ÄÇ@TimeÊé•ÂèóÁöÑËøô‰∫õËæìÂÖ•Â∞±ÂÉèÊòØ‰∏ÄÁßçÈÖçÁΩÆÔºöÂÆÉ‰ª¨ÂëäËØâÊµÅÂ¶Ç‰ΩïË°å‰∏∫„ÄÇ"
                        ],
                        ["Time", "neutral", "tick‚Ä¶ tick‚Ä¶ tick‚Ä¶ tick‚Ä¶ tick‚Ä¶"],
                        ["edit", "Time(1000ms)"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "‰ΩÜÊàë‰ª¨ÂèØ‰ª•Âà©Áî®Êàë‰ª¨ÈÅáÂà∞ÁöÑÊâÄÊúâÁæéÂ¶ôÂ≠óÁ¨¶Êù•Ëøõ‰∏ÄÊ≠•ËΩ¨Êç¢Êó∂Èó¥„ÄÇ‰æãÂ¶ÇÔºåÂ¶ÇÊûúÊàë‰ª¨ÊÉ≥Áü•ÈÅìÊó∂Èó¥ÊòØÂê¶ÊòØ \\2\\ ÁöÑÂÄçÊï∞ÔºåÊàë‰ª¨ÂèØ‰ª•‰ΩøÁî®@Number/remainderÔºåÂÆÉÂæóÂà∞‰∏Ä‰∏™Èô§Ê≥ïÁöÑ‰ΩôÊï∞„ÄÇÂ¶ÇÊûú‰ΩôÊï∞ÊòØÈõ∂ÔºåÊàë‰ª¨Â∞ÜËØÑ‰º∞‰∏∫ \\‚ä§\\ÔºåÂê¶Âàô‰∏∫ \\‚ä•\\„ÄÇÁúãÂÆÉÊòØÂ¶Ç‰ΩïÂú® \\‚ä§\\ Âíå \\‚ä•\\ ‰πãÈó¥ÂèòÂåñÁöÑÔºüËøôÁúüÊòØÁ•ûÂ•á„ÄÇ"
                        ],
                        ["Time", "neutral", "tick‚Ä¶ tick‚Ä¶ tick‚Ä¶ tick‚Ä¶ tick‚Ä¶"],
                        ["edit", "(Time(1000ms) % 5) = 2ms"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "There's another thing you might have noticed: there's an area below the output that is a timeline. It updates each time the program reevaluates, which is each time a stream changes. It's showing every time @Time ticks."
                        ],
                        ["Time", "neutral", "tick‚Ä¶ tick‚Ä¶ tick‚Ä¶ tick‚Ä¶ tick‚Ä¶"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "Try dragging on the timeline @UI/timeline, using the timeline buttons, using the arrow keys with the timeline focused, or pressing the ‚è∏Ô∏è and ‚ñ∂Ô∏è @UI/playToggle buttons. You can go backwards in time, to see previous evaluations. The dashed arrows step to previous and future stream inputs. The solid ones step between different steps of the program. Try navigating time, and seeing what the program shows. This is how you can see all of the beautiful expressions you've learned about being evaluated by @Evaluate, one step at a time, resulting in the final value that @Program displays on stage."
                        ],
                        ["Time", "neutral", "tick‚Ä¶ tick‚Ä¶ tick‚Ä¶ tick‚Ä¶ tick‚Ä¶"],
                        ["edit", "Time(1000ms)"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "@Time is an interesting stream because it can be used for many different things: keeping track of how long a performance has been happening, timing some event, animating a word. It's one of the most flexible streams, but also one of the most abstract."
                        ]
                    ]
                },
                {
                    "title": "Clickity clack",
                    "subtitle": "Key",
                    "concept": "Key",
                    "performance": ["use", "fit", "Symbol", "‚å®Ô∏è"],
                    "lines": [
                        [
                            "fit",
                            "Phrase('‚å®Ô∏è' resting:Sequence({0%: Pose(rotation: -5¬∞) 25%: Pose(rotation: 0¬∞) 50%: Pose(rotation: 5¬∞) 75%: Pose(rotation: 0¬∞) 100%: Pose(rotation: -5¬∞)} 1s 'straight'))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "If I'm not mistaken, there's a thing in your world called a ‚Äúkeyboard‚Äù? It's a way of selecting which one of us you want to appear in your documents, right? Well in the Verse, we receive these requests as a stream of text, each text value representing the key that was pressed. We use these to listen to what people in your world are typing. This stream is called @Key."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "Here's a simple example. Click the stage or focus it with the keyboard and then press any keyboard key. You'll see the key you've typed appear by name. That's because each time the key stream changes, @Program evaluates the key stream as its latest value, and then shows it on stage."
                        ],
                        ["Key", "neutral", "clickety clickety clickety"],
                        ["edit", "Key()"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "This stream will change any time any key is pressed. But you can tell a key stream to just change when a particular key is pressed. See how the stream changes to \\a\\ the first time, but then doesn't change after? That's because this stream only changes when \\a\\ is pressed, so it's always showing \\a\\. But you'll always see the new key value appear in the timeline."
                        ],
                        ["Key", "neutral", "clickety 'a'‚Ä¶"],
                        ["edit", "Key('a')"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "Sometimes it's helpful to know when a key is released, instead of pressed. Just pass \\‚ä•\\ to tell the @Key stream that you to know when a key is released instead of pressed. Now, press and hold the 'a' key and then when you release, you'll see the 'a' appear on stage. Didn't catch it? Press the ‚Üª button to reset the performance and try it again."
                        ],
                        ["Key", "neutral", "clickety 'a'‚Ä¶"],
                        ["edit", "Key('a' ‚ä•)"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "@Key streams are really helpful when you want a performance to react to keys that the audience presses. For example, you could check if a key has the word 'Arrow' in it to decide if an arrow key was pressed. Press an arrow key and you'll see \\'move'\\, press something else and you'll see \\'stay'\\"
                        ],
                        ["Key", "neutral", "clickety 'Arrow'‚Ä¶"],
                        ["edit", "Key().has('Arrow') ? 'move' 'stay'"]
                    ]
                },
                {
                    "title": "Hummmmmmm‚Ä¶",
                    "subtitle": "Pointer",
                    "concept": "Pointer",
                    "performance": ["use", "fit", "Symbol", "üëÜüèª"],
                    "lines": [
                        [
                            "fix",
                            "Phrase('üëÜüèª' resting:Sequence({0%: Pose(offset: Place(0m 0m)) 25%: Pose(offset: Place(-1m 1m)) 50%: Pose(offset: Place(1m 1m)) 75%: Pose(offset: Place(1m 0m)) 100%: Pose(offset: Place(0m 0m))} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "You also have something called a 'mouse' in your world, and 'trackpads', and 'touchscreens'? These appear in our world as streams @Pointer, which is a stream of places on stage."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "Move your pointer around the stage and you'll see the stream of @Place change on stage."
                        ],
                        ["fix", "Pointer()"],
                        ["Pointer", "neutral", "wzzzzzzzzz‚Ä¶"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "Now let's see it on stage!"
                        ],
                        ["Pointer", "neutral", "wzzzzzzzzz‚Ä¶"],
                        ["fix", "Phrase(Pointer()‚Üí'' place: Pointer())"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "@Pointer can be fun if you want to link the @Place of a @Phrase to where the pointer is."
                        ],
                        ["fix", "Phrase('üê™' size: 4m place: Pointer())"],
                        ["Pointer", "neutral", "wzzzzzzzz‚Ä¶"]
                    ]
                },
                {
                    "title": "And... now!",
                    "subtitle": "Button",
                    "concept": "Button",
                    "performance": ["use", "fit", "Symbol", "üñ±Ô∏è"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "kind",
                            "@Button is like @Key, but corresponds to the primary pointer button, like a click or tap. It's just a stream of \\‚ä§\\, indicating when the pointer button is pressed down. Press that button and watch the events appear on the timeline."
                        ],
                        ["Button", "neutral", "click‚Ä¶ click‚Ä¶ click‚Ä¶"],
                        ["edit", "Button()"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "You can configure it to only change to up or down by passing it a \\‚ä§\\ or \\‚ä•\\."
                        ],
                        ["Button", "neutral", "down‚Ä¶ down‚Ä¶ down‚Ä¶"],
                        ["edit", "Button(√∏)"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "Using a @Button stream is one way to advance through stages of a performance, or to trigger some change in a performance. This little program lists to button presses, and starts off showing sad, but when the @Button stream changes to true, @Conditional evaluates to \\'happy'\\ instead."
                        ],
                        ["edit", "Phrase(Button(√∏) ? 'sad' 'happy')"]
                    ]
                },
                {
                    "title": "Is anyone listening?",
                    "subtitle": "Volume",
                    "concept": "Volume",
                    "performance": ["use", "fit", "Symbol", "üé§"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "excited",
                            "Your world and our world also has sound. Did you know we can hear you, with your consent? We listen with a stream called @Volume, which provides a low-level sequence of amplitudes. Your mic might ask for permission to be shared with us. Once you do, you'll see a number that corresponds to amplitude, between \\0\\ and \\100\\."
                        ],
                        ["Volume", "neutral", "bzzzZZZZZzzzzzZZZZ‚Ä¶"],
                        ["edit", "Volume()"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "@Volume can be used to make performances respond to sound from the audience. For example, here we could make a little amplitude visualization by converting the amplitude number from the stream to a certain number of \\'o'\\ characters. See how when you make noise, there are more \\'o'\\s? The @Volume amplitude is divided by \\10\\, putting it in the \\0\\ to \\10\\ range. Then that value is given to @Text/repeat function, which repeats the \\'o'\\ the given number of times."
                        ],
                        ["Volume", "neutral", "bzzzZZZZZzzzzzZZZZ‚Ä¶"],
                        ["edit", "'o'.repeat(Volume() ¬∑ 10)"]
                    ]
                },
                {
                    "title": "You never know‚Ä¶",
                    "subtitle": "Random",
                    "concept": "Random",
                    "performance": [
                        "fit",
                        "Phrase(((Time(100ms) % 10) √∑ 1ms) ‚Üí '')"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "There's one other source of input I want to show you. Remember \\[].random()\\ from earlier, from @List?",
                            "Inside it uses a @FunctionDefinition called @Random, which provides an infinite sequence of random numbers. It's kind of a stream, since it generates input from your world, not ours. But it's a bit different from the other streams in that it doesn't cause a @Program to reevaluate.",
                            "Instead, each time it's evaluated, it gives a different random number.",
                            "See that little ‚Üª @UI/resetEvaluator button by the timeline? Press that to reevaluate the program manually, and you'll see a new number between \\0\\ and \\1\\ each time."
                        ],
                        ["Random", "neutral", "0.223423‚Ä¶ 0.823423‚Ä¶ 0.123459"],
                        ["edit", "Random()"],
                        null,
                        [
                            "FunctionDefinition",
                            "surprised",
                            "We can tell @Random the range of numbers we'd like by giving it a minimum and maximum number. This example gives numbers between \\1\\ and \\10\\:"
                        ],
                        ["Random", "neutral", "1‚Ä¶ 7‚Ä¶ 3‚Ä¶ 9‚Ä¶ 10‚Ä¶ 2‚Ä¶"],
                        ["edit", "Random(1 10)"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "Random can be so fun! We can use it with streams to create fun chaos. For example, here we choose a random word from a list of words. This is the same as \\['kitty' 'cat' 'meowy'].random()\\. Keep pressing ‚Üª to get a different cat synonym! Try adding your own word to the list and see if you can get the word to appear."
                        ],
                        ["Random", "neutral", "1‚Ä¶ 2‚Ä¶ 2‚Ä¶ 1‚Ä¶ 3‚Ä¶"],
                        ["edit", "['kitty' 'cat' 'feline'][Random(1 3)]"]
                    ]
                },
                {
                    "title": "Move me",
                    "subtitle": "Placement",
                    "concept": "Placement",
                    "performance": [
                        "fix",
                        "Phrase('click, tap, or arrow to move me' place: Placement() moving:Pose() duration: 0.25s)"
                    ],
                    "lines": [
                        [
                            "edit",
                            "Phrase('üå≠' place: Placement() moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "Sometimes its nice to engage the audience in our place on @Stage.",
                            "@Placement is a great way to do that! It's a stream of @Place, that responds to keyboard arrow keys, clicks, and taps.",
                            "Try using those to move the hot dog around."
                        ],
                        null,
                        [
                            "edit",
                            "Phrase('üå≠' place: Placement(distance: 0.5m) moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "There are lots of ways you can customize it. For example, if you wanted to change how it moves, you can give it a distance.",
                            "See how we gave it \\0.5\\ for the for the first input? Now it moves a little less. Try changing it to a different number!"
                        ],
                        null,
                        [
                            "edit",
                            "Phrase('üå≠' place: Placement(depth: ‚ä§) moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "You can also turn on and off movement on different axes. For example, give depth \\‚ä§\\ to allow movement on the z-axis.",
                            "Press the + and - keys to move it closer or further away from the focus."
                        ]
                    ]
                },
                {
                    "title": "Keeping moving",
                    "subtitle": "Motion",
                    "concept": "Motion",
                    "performance": [
                        "fix",
                        "Stage([Phrase('üèÄ' 1m place: Motion(Place(0m 10m)) matter: Matter(2kg 0.8)) Shape(Rectangle(-10m 0m 10m -1m))])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "So far, all of the *streams* we've talked about are sequences of simple values, like @Text or @Number. Some streams, however, can produce complex values.",
                            "@Motion is one of the most interesting of those. It makes a stream of @Place."
                        ],
                        null,
                        ["edit", "Phrase('üèÄ' 3m place: Motion(Place(0m 5m)))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "Here's the simplest way to use it. This creates a @Motion stream that starts with this @Phrase. It'll keep moving the ball based on *gravity*."
                        ],
                        ["Motion", "excited", "/Woosh‚Ä¶/"],
                        null,
                        [
                            "edit",
                            "Stage([Phrase('üèÄ' 1m place: Motion(Place(0m 10m))) Shape(Rectangle(-10m 0m 10m -2m))])"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "But the ball keeps falling because there's no ground! We can put something called a @Shape on @Stage, like a @Rectangle. It takes two corners. We'll make it nice and thick.",
                            "Hm, it falls through the ground..."
                        ],
                        ["Motion", "excited", "/Woosh‚Ä¶/"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "   [",
                            "       Phrase('üèÄ' 1m place: Motion(Place(0m 10m)) matter: Matter(1kg 0.9))",
                            "      Shape(Rectangle(-10m 0m 10m -2m))",
                            "   ]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "Oh right! That's because we forgot to give the ball @Matter. Matter is a way of telling us how heavy the @Output is, how bouncy it is, and how much friction it should have.",
                            "Let's make the ball really bouncy and light. Yay, now it bounces!"
                        ],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase('üèÄ' 1m place: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10¬∞/s)) matter: Matter(1kg 0.9))",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m))",
                            "\t]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "But @Motion has many other tricks.",
                            "For example, we can give it a start @Motion/velocity.",
                            "This example makes the ball move right and up and spinning a bit initially."
                        ],
                        ["Motion", "excited", "Woooosh‚Ä¶"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase('üèÄ' 1m place: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10¬∞/s)) matter: Matter(1kg 0.9))",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m))",
                            "\t]",
                            "\tgravity: 1m/s^s",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "You can even change @Stage/gravity to be really extreme.",
                            "Try changing it to be like the moon, where gravity is really low!",
                            "Or try changing @Matter/mass or @Matter/bounciness, which affects how @Phrase bounce."
                        ],
                        ["Motion", "excited", "Wsh‚Ä¶"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase(",
                            "\t\t\t'üèÄ'",
                            "\t\t\t1m",
                            "\t\t\tname: 'ball'",
                            "\t\t\tplace: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10¬∞/s))",
                            "\t\t\tmatter: Matter(1kg 0.9)",
                            "\t\t\tscale: Collision('ball' 'ground')‚Ä¢√∏ ? 1 2)",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m) name: 'ground')",
                            "\t]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "It's even possible to know when some @Output bumps into another output with related stream called @Collision.",
                            "We just need to give names to our two @Output. How about 'ball' and 'ground'?",
                            "Then, we @Collision will give us a @Rebound when they touch and @None with they don't.",
                            "Let's make the ball scale up each time it hits the ground for emphasis!"
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('üèÄ' 1m place: Motion(Place(0m 10m)) matter: Matter(2kg 0.8)) Shape(Rectangle(-10m 0m 10m -1m))])"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "There's so much more you can do with @Motion, @Collision, and @Shape!",
                            "I hope you'll try lots of bouncy things."
                        ]
                    ]
                },
                {
                    "title": "Let's talk",
                    "subtitle": "Chat",
                    "concept": "Chat",
                    "performance": ["fit", "Phrase('üó£Ô∏è')"],
                    "lines": [
                        ["fit", "Phrase('üó£Ô∏è')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "Sometimes a performance is an interaction. The audience says something and we say something back.",
                            "That's what @Chat is for. When you use it, a little box will appear on stage for the audience to type in and when they submit their message, @Text will be added to the stream for the program to respond to."
                        ],
                        null,
                        ["edit", "Chat()"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "Here's the simplest way to use it. You type something, and then the stage shows it, because the program's value is the @Chat's value."
                        ],
                        null,
                        ["edit", "Chat().has('oo') ? 'choo choo' 'hmm'"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "It's more fun to check the value of the chat message to shape the response of the program. This little example responds to any message with consecutive o's with a train sound!"
                        ]
                    ]
                },
                {
                    "title": "Say what?",
                    "subtitle": "Webpage",
                    "concept": "Webpage",
                    "performance": [
                        "fix",
                        "Webpage('https://www.nytimes.com')"
                    ],
                    "lines": [
                        ["edit", "Phrase('üõú')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "So long ago, we heard you had this thing called the internet? I think that's how you're here, right?",
                            "Well we thought it would be really cool to bring words from the internet /here/, so you can play with them."
                        ],
                        null,
                        ["edit", "Webpage('https://www.nytimes.com')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "Here's how it works: you just give what I think is called a 'URL' to us, and if its an HTML page, we'll pull all the phrases out of it and give it you you in a @List.",
                            "Like here, these are some news phrases."
                        ],
                        null,
                        ["edit", "Webpage('https://www.nytimes.com' 'h2')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "You can also filter the words with something I think you call a 'CSS' query? Like we heard that 'h3' means 'level 3 header', so here are all the phrases in headers on the page."
                        ],
                        null,
                        [
                            "edit",
                            "words: Webpage('https://www.nytimes.com' 'h2')\n\nwords‚Ä¢[''] ? Group(Stack() words.subsequence(1 5).translate(∆í(word) Phrase(word resting: Sequence(spin() 1s)))) √∏"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "Once you have a list of words, you can do anything with them! Like grab the first five and turn them into spinning phrases, of course."
                        ]
                    ]
                },
                {
                    "title": "On cue",
                    "subtitle": "Reaction",
                    "concept": "Reaction",
                    "performance": ["use", "fit", "Symbol", "‚Ä¶"],
                    "lines": [
                        ["fit", "Phrase('‚Ä¶' resting:Pose(rotation: 120¬∞))"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "All of these streams that I've shown you come from your world. But sometimes, it's helpful to create streams of your own, based on these other streams. That's where my friend @Reaction comes in! @Reaction, are you around?"
                        ],
                        [
                            "Reaction",
                            "excited",
                            "Yeah yeah yeah! It's @FunctionDefinition! How are you doing? Everything has been so‚Ä¶ constant, lately. Have you noticed that?"
                        ],
                        null,
                        ["fit", "Phrase('‚Ä¶' resting:Pose(rotation: 240¬∞))"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "You mean the silence? Yes, nothing's really changed, has it, since the last person left? What's that been like for you?"
                        ],
                        [
                            "Reaction",
                            "sad",
                            "Super strange, super strange. My whole life has been about change, always listening and watching for new inputs from people, helping transform them into values. But there hasn't been anything. Until just a moment ago‚Ä¶ Wait ‚Ä¶ is that a person?"
                        ],
                        null,
                        ["fit", "Phrase('‚Ä¶' resting:Pose(rotation: 360¬∞))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "Yes! This is our new potential director. I was just showing them @Time, @Key, @Pointer, @Button, @Volume, and @Random, so you probably noticed all the new inputs they were bringing from their world."
                        ],
                        [
                            "Reaction",
                            "excited",
                            "Yesssss, change is coming! Can I show you what I do?"
                        ],
                        ["FunctionDefinition", "eager", "Yes, please do!"],
                        null,
                        [
                            "Reaction",
                            "serious",
                            "Okay, so I need three things from you: a condition for change, an initial value, and a next value.",
                            "The *initial* value is whatever value I should make before any change has happened. It's just a normal expression, of any kind!",
                            "Then you put \\‚Ä¶\\ after the initial value to tell me that the value can change.",
                            "After \\‚Ä¶\\, give me *condition* that evaluates to \\‚ä§\\ or \\‚ä•\\. It should generally check one or more streams ‚Äî otherwise, there's nothing changing, since the only source of change in a performance is streams.",
                            "Then put another \\‚Ä¶\\ after the condition to tell me that the value can change.",
                            "Finally, the *next* value is whatever value I should make whenever the condition changes."
                        ],
                        ["conflict", "_ ‚Ä¶ _‚Ä¢? ‚Ä¶ _"],
                        null,
                        [
                            "Reaction",
                            "serious",
                            "Here's an example. See the @Key stream? Putting \\‚àÜ\\ before it asks, 'Did this stream change'? Before it changes, I evaluate to the initial value, \\1m\\. But when the space key is pressed, @Program reevaluates, and I evaluate to the *next* expression, which is \\1m\\ plus whatever the previous stream value was, that's represented by \\.\\. This adds 1m to the size of the phrase, making the word get bigger and bigger."
                        ],
                        ["fit", "Phrase('hi' size: 1m ‚Ä¶ ‚àÜ Key(' ') ‚Ä¶ 1m + .)"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "@Reaction, that is so cool. Do you want to introduce @Changed? You seem to work with them closely."
                        ],
                        [
                            "Reaction",
                            "kind",
                            "Yes, @Changed and I are best buddies! They help me know when something has changed. They're like a stream whisperer, listening closely to the director's world‚Ä¶"
                        ],
                        null,
                        [
                            "Changed",
                            "eager",
                            "Wow, stream whisper, that seems a bit extreme..."
                        ],
                        [
                            "Reaction",
                            "serious",
                            "Oh hi @Changed! Do you want to say more about what you do?"
                        ],
                        [
                            "Changed",
                            "bored",
                            "I mean, I just tell you if a stream changed. Give me a stream, and I'll check. That's it."
                        ],
                        [
                            "Reaction",
                            "confused",
                            "Well, it's more than that right?"
                        ],
                        [
                            "Changed",
                            "bored",
                            "Not really. That's kind of it. I mean, I'm good at it, but that's my only thing."
                        ],
                        ["Reaction", "confused", "‚Ä¶"],
                        null,
                        [
                            "Reaction",
                            "eager",
                            "Okay. Well, I think you're more important that than. Because I'm pretty useless without you! For example, if you give me a condition that doesn't check a stream, I'm never going to create a new value. Like here, the condition a @Boolean from @Button, but without you, I only ever change with the button ."
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 1m ‚Ä¶ Key(' ') = ' ' ‚Ä¶ 1m + .)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "Oh, that makes sense. And @Reaction, you work with any stream?"
                        ],
                        [
                            "Reaction",
                            "eager",
                            "Yes, any stream! And actually, even myself. So if you make a reaction, and want to make a reaction that reacts to it reacting, you can do that too. But we won't worry about that now, since that doesn't usually come up in simple performances."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "Thank you @Reaction. Will you be around to help as I show our director the rest of our beautiful Verse?"
                        ],
                        [
                            "Reaction",
                            "happy",
                            "Yes, of course, any time. I can't wait to see your inspirations!!"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "Take the stage",
            "performance": ["use", "fix", "RainingEmoji"],
            "scenes": [
                {
                    "title": "Output",
                    "subtitle": null,
                    "performance": ["use", "fix", "StaticRainingEmoji"],
                    "lines": [
                        ["use", "fit", "Symbol", "üòÄ"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "So what do you think so far? I think the Verse is pretty neat, mostly because the characters in it are so neat. Everyone is just so special!"
                        ],
                        null,
                        ["use", "fit", "Symbol", "ü•±"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "You're bored? Oh my. I thought all of this would be so interesting! What were you hoping for?"
                        ],
                        null,
                        ["use", "fit", "Symbol", "üò¥"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "I see. Text and numbers and lists and streams are boring. I guess I really haven't shown you all the things we can make with all of this. Maybe it's time we start talking about output."
                        ],
                        null,
                        ["use", "fit", "Symbol", "ü§ó"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "You've seen a lot of output already. Every time @Program evaluates, it results in a value, and @Program shows that value on stage. But so far you've only seen things like numbers, text, lists. I get it, you just want to see full performances, just like we do!"
                        ],
                        null,
                        ["use", "fit", "Symbol", "üí¨"],
                        [
                            "FunctionDefinition",
                            "eager",
                            "Remember that output I showed you a long time ago, @Phrase? That's where the performances really begin. Let's start there! And then I'll show you ways of building ever more interesting performances from that building block. Let me introduce you!"
                        ]
                    ]
                },
                {
                    "title": "Say what?",
                    "subtitle": "Phrase",
                    "concept": "Phrase",
                    "performance": ["use", "fit", "Symbol", "üí¨"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "@Phrase? Are you out there?"
                        ],
                        [
                            "Phrase",
                            "excited",
                            "Out and proud my darling, how are you? You look so glamorous today! I would love to get you on stage one of these days."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "shy",
                            "Oh, the stage isn't for me, I'm more than happy to be backstage, tinkering with the set."
                        ],
                        [
                            "Phrase",
                            "curious",
                            "Don't be modest, you are every bit as fabulous as me. All you need is a bit of color, a flattering font, and you would be wonderful. You have so much to share! Speaking of, we haven't put on a show in forever, have we? Has it been quiet? You know how much I talk to myself, I can never tell."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "It has been quiet. Ever since our last director left, it's been a void. But that is changing! We have a new person! We've been meeting the whole family, @Program, @ExpressionPlaceholder, @Evaluate, all the values, all the collections. We just spent time with all of the streams too, and @Reaction and @Conditional. I'm starting to feel things hum. But I haven't introduced our new director here too much about what you do on stage? This is so your world, and not mine, I figured we'd come to you first."
                        ],
                        null,
                        [
                            "Phrase",
                            "happy",
                            "Well you came to the right place. I love talking about all things stage life. I can't wait to show you all the wonderful little things we do here on stage!"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "Let the show begin!"
                        ],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "So I know you've seen me do this."
                        ],
                        ["edit", "Phrase('hi')"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "That, my darling, is the simplest way to get a word on stage. But there's so much more! For example, did you know that you can style the text you give me by working with @FormattedTranslation? You haven't met them yet, but all you have to do is put special symbols around your text? Behold: bold!"
                        ],
                        ["edit", "Phrase(`*hi*`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "Not enough sass for you? How about underline, italics, light text, and extra bold text, *all at once*?"
                        ],
                        ["edit", "Phrase(`/I/ _am_ ^the^ /fabulous/ üí¨!`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "Still not impressed?",
                            "Mix them all together!"
                        ],
                        ["edit", "Phrase(`/_*I am the fabulous*_/ üí¨!`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "And if you ever want to use any of these special formatting characters as text instead of formatting, you can just repeat them, kind of like in @Text, and I'll just use the character literally."
                        ],
                        [
                            "edit",
                            "Phrase(`Format with /italic/ (//), _underline_ (__), ~light~ (~~), /bold/ (**), ^extra bold^ (^^) `)"
                        ],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "But I can do more than just style text. For example, I can take a @Phrase/size, measured in meters \\m\\. Try changing the size to any size you like!"
                        ],
                        ["edit", "Phrase('hi' 2m)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "That size can be any expression. For example, say we wanted it to grow as @Time ticks. We can take time, multiply it by a fraction of a meter, and glorious, tick tick tick, hi hi hi. Try changing the frequency or the multiplier. See what beautiful growth you can create!"
                        ],
                        ["fit", "Phrase('hi' Time(100ms) ¬∑ 0.001m/ms)"],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "Do you like costumes? I loooooove costumes. My @Phrase/face is a costume. Pick any of the supported faces to spice up the word you've chosen."
                        ],
                        [
                            "use",
                            "fix",
                            "Symbol",
                            "hi' Time(100ms) ¬∑ 0.001m/ms 'Poor Story"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "Need me to be somewhere else on stage? Places please! A @Place is just an \\x\\, \\y\\, and optional \\z\\ position, in meters \\m\\. Try changing the place to a different location, by editing the numbers, or dragging the @Phrase on stage."
                        ],
                        [
                            "fit",
                            "Phrase('hi' Time(100ms) ¬∑ 0.001m/ms 'Poor Story' Place(2m 2m))"
                        ],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "Do you ever feel a little off axis? Maybe you give the world a little @Pose/rotation with rotation. Try changing the rotation value to twist me around!"
                        ],
                        [
                            "fit",
                            "Phrase('hi' Time(100ms) ¬∑ 0.001m/ms 'Poor Story' Place(2m 2m) rotation: 20¬∞)"
                        ],
                        null,
                        [
                            "Phrase",
                            "happy",
                            "Or maybe we have a little fun, and link rotation to @Time! Wheeeee. Any guesses on how to make me spin faster? See if you can figure it out‚Ä¶"
                        ],
                        [
                            "fit",
                            "Phrase('hi' 3m 'Poor Story' rotation: Time(10ms) ¬∑ 1¬∞/ms)"
                        ],
                        null,
                        [
                            "Phrase",
                            "serious",
                            "Now's an outstanding time to remind you that @FunctionDefinition here requires inputs to be in a particular order, so if you put them out of order, they. Are. Going. To. Complain."
                        ],
                        [
                            "FunctionDefinition",
                            "shy",
                            "I will‚Ä¶ I like things‚Ä¶ tidy‚Ä¶ Can you put them in the right order? You can cut and paste with the keyboard or click and drag expressions to rearrange them."
                        ],
                        [
                            "conflict",
                            "Phrase('hi' 'Poor Story' 3m Time(10ms) ¬∑ 1¬∞/ms Place(2m 2m))"
                        ],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "Only want to give a particular property? Just name the one you want. Here we name @Phrase/size and @Phrase/rotation."
                        ],
                        [
                            "edit",
                            "Phrase('hi' size: 3m rotation: Time(10ms) ¬∑ 0.1¬∞/ms)"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "Now that we have all those out of the way, we can talk about dancing, darling! Dancing is one of my favorite things to do. There are *four* ways I move. First, I can @Phrase/entering. Enter is my way of entering the stage. If you don't tell me how to enter, I'll just BLIP appear on stage like I teleported there. But if you give me @Pose. I'll start with the pose you give me, then move to my resting pose. For example, let's make me fade in from invisible to oh-so-in-your face visible."
                        ],
                        ["edit", "Phrase('hi' entering: Pose(opacity: 0))"],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "Didn't see it? Did I move too fast for you? That's because my duration is \\0s\\ by default. Slow me down with a duration, which tells me how long I should take to move between poses. I made this one nice and slow for you, but try changing duration to higher and lower numbers."
                        ],
                        [
                            "edit",
                            "Phrase('hi' entering: Pose(opacity: 0) duration: 5s)"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "Now, say I was moving. We'll set my place to time, so I move to the right a bit every second. But if we set a @Phrase/moving @Pose, and have the @Pose/rotation \\5¬∞\\ and maybe a little color, every time my place changes, I'll glide across the stage with the cutest little tilt."
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) ¬∑ 0.001m/ms 0m) moving:Pose(rotation: 5¬∞) duration: 0.5s)"
                        ],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "Not in the mood for cute? How about you make me a little serious by having me slide across straight by changing my @Phrase/style. It's really subtle, but styles can really change the /emotion/ of a movement."
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) ¬∑ 0.001m/ms 0m) moving:Pose(rotation: 5¬∞) duration: 0.5s style: ‚Äústraight‚Äù)"
                        ],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "And for the coup de gr√¢ce, let's have me @Phrase/exiting in style. We can play with @Conditional and have me exit stage after 3 seconds."
                        ],
                        [
                            "fit",
                            "Time(1000ms) < 3000ms ? ",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) ¬∑ 0.001m/ms 0m) moving:Pose(rotation: 5¬∞) duration: 0.5s) ",
                            "Phrase('')"
                        ],
                        null,
                        [
                            "Phrase",
                            "surprised",
                            "Not the exit you were hoping for? The disappearing act is a bit harsh, ain't it? Give me an @Phrase/exiting @Pose, and I'll glide off on stage toward whatever pose you want. Here we'll have me get large than life, fall upside down, and fade out to @Pose/opacity \\0\\."
                        ],
                        [
                            "fit",
                            "Time(1000ms) < 3000ms ? Phrase('hi' size: 5m place: Place(Time(1000ms) ¬∑ 0.001m/ms 0m) moving:Pose(rotation: 5¬∞) exiting:Pose(scale: 10 rotation: 180¬∞ opacity: 0) duration: 0.5s) Phrase('')"
                        ],
                        null,
                        [
                            "Phrase",
                            "serious",
                            "You probably noticed that I can take up a little space in @Program. If you ever want to make me easier to read, just add some lines between my properties. See how that's so much easier to see?"
                        ],
                        [
                            "edit",
                            "Time(1000ms) < 3000ms ?",
                            "    Phrase(",
                            "        'hi'",
                            "        size: 5m",
                            "        place: Place(Time(1000ms) ¬∑ 0.001m/ms 0m)",
                            "        moving:Pose(rotation: 5¬∞)",
                            "        exiting:Pose(scale: 10 rotation: 180¬∞ opacity: 0)",
                            "        duration: 0.5s",
                            "    )",
                            "    Phrase(‚Äú‚Äù)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "Bravo, bravo, that was just stunning, @Phrase! I'm always blown away by how much you can do with just a few simple ideas. A while ago, I showed our new inspirational friend here about the palette. Do you want to say more about that?"
                        ],
                        [
                            "Phrase",
                            "happy",
                            "Of course! Any time you get tired of fiddling with @Evaluate's inputs, you can always select a phrase on stage, and a palette will appear, allowing you to change any little thing you might want, my size, font, place, poses. There's just one rule: if you set any of those to an expression, instead of just a value, you'll have to change them down in @Program, not in the palette. Dress me up all you like!"
                        ],
                        ["edit", "Phrase('dress me up!')"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "Wait, Phrase, what about @Color?"
                        ],
                        [
                            "Phrase",
                            "sad",
                            "Omigod omigod omigod, I CANNOT believe I forgot about color. Okay, so any @Pose can have a color, right? But @Color comes in three parts. First, a @Color/lightness between 0 and 100%, which you can think of as how bright a room is, from black to white, with color in the middle at 50%.",
                            "Then, a @Color/chroma between 0 and 100, which you can think of has how much color there is, from no color gray to full color.",
                            "And finally, a @Color/chroma, which you can think of like a color wheel, from red to green to blue, in degrees. So you want me to be bright red? Set my rest pose color to \\Color(50% 300 30¬∞)\\."
                        ],
                        ["edit", "Phrase('red' color: üåà(50% 300 30¬∞))"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "And want me to shimmer with the rainbow? Take time, get the remainder of dividing by 360, then multiply by degrees and I'll spin around that color wheel all day long!"
                        ],
                        [
                            "edit",
                            "Phrase('red' size: 5m color: üåà(50% 300 (Time() % 360) ¬∑ 1¬∞/ms))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "@Phrase, that is something to be proud of :P I think we're going to go visit @Sequence next, and then maybe @Group and @Stage. You'll be around to help?"
                        ],
                        [
                            "Phrase",
                            "kind",
                            "I wouldn't miss it. Sparkle and shine!"
                        ]
                    ]
                },
                {
                    "title": "1, 2, 3, 4, 1, 2, 3, 4",
                    "subtitle": "Sequence",
                    "concept": "Sequence",
                    "performance": ["use", "fix", "DancingEmoji", "üíÉ"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "@Phrase is just wonderful, aren't they? They have so much energy, so many amazing flourishes. Did you know they work closely with our choreographer, @Sequence? @Sequence and @Phrase together can do some incredible things that @Phrase can't do alone. Do you want to meet them?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "Yay! @Sequence, we have a guest. Are you back there?"
                        ],
                        [
                            "Sequence",
                            "curious",
                            "@FunctionDefinition! You look beautiful. How long has it been? A week? A month? A century? It was like 1, 2, 3 and then everything was quiet. I feel like I've been dancing alone forever‚Ä¶"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "It was silent, wasn't it? But I can totally see you dancing alone. I was doing my own choreography all alone too, just having to imagine all of you working together. But it wasn't the same."
                        ],
                        [
                            "Sequence",
                            "kind",
                            "And you an @Evaluate? Are you still‚Ä¶"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "shy",
                            "I just saw them earlier. They‚Ä¶ Oh, we have a guest! @Sequence, this is our new director pal. They've come to bring us inspiration!"
                        ],
                        [
                            "Sequence",
                            "excited",
                            "(We're going to come back to that tea, @FunctionDefinition). Director pal, it's so exciting to meet you! Have you come here to learn to dance?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "Of course they did! Do you want to show them the steps?"
                        ],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "Absolutely. You know time? 1, 2, 3, 4, 1, 2, 3, 4? Well I make time beautiful, arranging a sequence of poses over time for @Phrase to follow. You tell me what the poses are and I'll help @Phrase follow the steps. Like this example: our smiley friend here has four poses, and smoothly moves between them."
                        ],
                        [
                            "fit",
                            "Phrase('üòÄ' resting:Sequence({0%: Pose() 25%: Pose(offset: Place(0m 1m) scale: 2) 50%: Pose(offset: Place(0m 0m) flipy: ‚ä§) 75%: Pose(rotation: 45¬∞) 100%: Pose()} 2s))"
                        ],
                        null,
                        [
                            "Sequence",
                            "neutral",
                            "Here's a simple example of how I work. Here's @Phrase (hi @Phrase!) with the word ‚Äúdance‚Äù, and they have an enter pose that's a @Sequence rather than a single @Pose. Follow me? The sequence has four steps. Straight, tilt left, tilt right, straight. When @Phrase enters, they do this cute little wobble, and then stop. I work with @MapLiteral to map percentages to a @Pose. Each of those percentages are how far through the sequence each @Pose should happen. Try changing the percentages, especially those two middle ones. It changes the flow and style of the wobble."
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0¬∞)",
                            "            33%: Pose(rotation: -5¬∞)",
                            "            66%: Pose(rotation: 5¬∞)",
                            "            100%: Pose(rotation: 0¬∞)",
                            "        }",
                            "    )",
                            ")"
                        ],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "Okay, so now imagine you wanted this to be really fast. By default, I'm pretty quick, so any sequence will be a quarter second and it's done. But what if you wanted it to be even faster? Give me a shorter duration and I'll speed every @Pose up to get it done faster. 1, 2, 3, 4! It doesn't look like a wobble anymore, does it? More like a frantic little shake! See what it looks like if you slow me down to 2 or 3 seconds‚Ä¶"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0¬∞)",
                            "            33%:Pose(rotation: -5¬∞)",
                            "            66%: Pose(rotation: 5¬∞)",
                            "            100%: Pose(rotation: 0¬∞)",
                            "        } ",
                            "        duration: 0.05s",
                            "    )",
                            ")"
                        ],
                        null,
                        [
                            "Sequence",
                            "excited",
                            "But sometimes, we come up with a lovely move and we just can't help but want to do it over and over, for emphasis! That looks a little violent‚Ä¶ try changing my duration and count until we get it just right‚Ä¶"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0¬∞)",
                            "            33%: Pose(rotation: -5¬∞)",
                            "            66%: Pose(rotation: 5¬∞)",
                            "            100%: Pose(rotation: 0¬∞)",
                            "        } ",
                            "        duration: 0.1s ",
                            "        count: 4x)",
                            "    )"
                        ],
                        null,
                        [
                            "Sequence",
                            "curious",
                            "But, you say, what if we wanted to do it forever? You can set a @Phrase/resting to me. For as long as @Phrase is on stage and resting, they'll repeat a sequence. Infinite wobbles!"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    resting:Sequence(",
                            "        {",
                            "        0%: Pose(rotation: 0¬∞)",
                            "        33%:Pose(rotation: -5¬∞)",
                            "        66%: Pose(rotation: 5¬∞)",
                            "        100%: Pose(rotation: 0¬∞)",
                            "        } ",
                            "        duration: 0.05s",
                            "    )",
                            ")"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "@Sequence, this is so great! This is exactly what I was hoping you could show us. But I'm curious, what have you been working on lately, dances of your own? Maybe something that shows everything you're capable of?"
                        ],
                        [
                            "Sequence",
                            "excited",
                            "Oh my yes! @Phrase and I have been working on this new donut dance. It comes my favorite treat with nearly everything I've learned in dance. Do you want to see it?"
                        ],
                        ["FunctionDefinition", "excited", "Yes!!!"],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "Yeah, hmm, oooh, up, eee, eee, eee, eee, bam, boo, yeah, hmm, oooh, up, eee, eee, eee, eee, bam, boo, yeah, hmm, oooh, up, eee, eee, eee, eee, bam, boo, ‚Ä¶"
                        ],
                        ["use", "fit", "DonutDance"],
                        null,
                        ["use", "fit", "DonutDance"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "@Sequence, that's amazing! How could that not be the next viral dance?"
                        ],
                        [
                            "Sequence",
                            "excited",
                            "You mean next spiral dance. Cheers!"
                        ]
                    ]
                },
                {
                    "title": "Places please",
                    "subtitle": "Group",
                    "concept": "Group",
                    "performance": [
                        "fit",
                        "Group(Grid(2 2) [Phrase('1' resting:Sequence(spin() 1s)) Phrase('2' resting:Sequence(spin() 2s)) Phrase('3' resting:Sequence(spin() 3s)) Phrase('4' resting:Sequence(spin() 4s))])"
                    ],
                    "lines": [
                        ["use", "fit", "Symbol", "‚òπÔ∏è"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "Sigh‚Ä¶ everyone keeps bringing up @Evaluate, but I don't know what to say. Are you ever so close to someone, and yet so far away?",
                            "‚Ä¶"
                        ],
                        null,
                        ["use", "fit", "Symbol", "üòï"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "Sorry. I'm excited to be here with you.",
                            "I think‚Ä¶",
                            "I think what will help is introducing you to the rest of us, and then putting on a show, and then I think @Evaluate and I can sort things out."
                        ],
                        null,
                        ["use", "fit", "Symbol", "üôÇ"],
                        [
                            "FunctionDefinition",
                            "eager",
                            "So who's next?",
                            "Oh, @Group! I can't believe I forgot @Group.",
                            "This is perfect timing; you know @Phrase and @Sequence now, and @Group is such an integral part of bringing us all together. @Group cares for us all so deeply.",
                            "@Group? Are you there?"
                        ],
                        null,
                        ["fit", "Group(Grid(2 2) [Phrase('üî≥')])"],
                        [
                            "Group",
                            "neutral",
                            "@FunctionDefinition, hello, how are you? Where has everyone been? I've been so worried! Are you okay?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "I'm okay. We're all okay! The silence is breaking, because we found a person! They're going to be our inspiration."
                        ],
                        null,
                        ["fit", "Group(Grid(2 2) [Phrase('üî≥') Phrase('üî≥')])"],
                        [
                            "Group",
                            "happy",
                            "That's lovely! You're not hurt? Everyone else is here? I felt like I was wandering in the dark, and couldn't see anyone."
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "I'm not hurt. Just a bit rusty. And I haven't seen everyone yet, but almost everyone, and I think everyone is waking up okay. (Though apparently some have been at the beach). We've met nearly everyone. We're getting ready to put on a show! And the best shows always involve you‚Ä¶"
                        ],
                        null,
                        [
                            "fit",
                            "Group(Grid(2 2) [Phrase('üî≥') Phrase('üî≥') Phrase('üî≥')])"
                        ],
                        [
                            "Group",
                            "kind",
                            "A show! I can't wait to help. You kids are always so inspiring, I'm always happy to do my part. What shall I do, where do I start?"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "Well, we've talked about @Phrase, so maybe start with a bit about your purpose?"
                        ],
                        null,
                        [
                            "fit",
                            "Group(Grid(2 2) [Phrase('üî≥') Phrase('üî≥') Phrase('üî≥') Phrase('üî≥')])"
                        ],
                        [
                            "Group",
                            "neutral",
                            "My purpose, yes. Let's see ‚Äî I think my purpose is to bring everyone together. But I particularly bring @Phrase together, in beautiful shapes and arrangements on stage. Did you know that @Phrase can be in more than one place at once? That's because they aren't so much one text phrase on stage, but a phrase maker, just like I'm a @Group maker. They'll make as many as you need, and then I lay them out on stage, as you direct me. All I need is an @Arrangement, and a list of @Phrase, and I'll do the rest."
                        ],
                        null,
                        [
                            "Group",
                            "excited",
                            "Here's a simple example. Here I'm using a @Stack arrangement, which creates a vertical arrangement of @Phrase, or other @Group. See how I make a tidy little stack of words? They're arranged just so, with a little breathing room for everyone and everyone centered. Everyone is so cute!"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack() ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "serious",
                            "But sometimes we all need a little space. So you can give @Stack some padding. Try changing the padding to a different @NumberLiteral!"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack(0 2m) ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "happy",
                            "Just as with anything in the Verse, that padding value can come from anything, like input. Sometimes we grow apart don't we? Let's dance that idea by making the padding grow over time‚Ä¶"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack(0 Time(100ms) ¬∑ 0.001m/ms) ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "surprised",
                            "We also have a @Row, which is a horizontal arrangement."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Row(0 Time(100ms) ¬∑ 0.001m/ms) [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "curious",
                            "Sometimes it's nice to use two dimensions instead of one. If you tell me how many rows and columns you want, I'll make a @Grid of phrases. Just make sure to give me enough phrases to fill the grid! You can also give @Grid padding and a cell size if you want to be extra precise. Grids are layed out a row at a time, so put your @Phrase list in order of rows."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "        Phrase('four')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "excited",
                            "And if you wanted a very specific arrangement? You could use @Free, and tell me exactly where you want all the phrases. Just be sure to give a place to each @Phrase, otherwise I'll just place it at \\Place(0m 0m\\)."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Free() [",
                            "        Phrase('one' place: Place(-2m 2m))",
                            "        Phrase('two' place: Place(-1m 1m))",
                            "        Phrase('three' place: Place(0m 0m))",
                            "        Phrase('four' place: Place(1m -1m))",
                            "        Phrase('five' place: Place(2m -2m))",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "curious",
                            "And did you know you can also place me inside myself? A @Group in a @Group in a @Group, it's very silly. This can make it possible to make a @Grid of @Stack for example."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "    Group(Stack() [Phrase('one') Phrase(‚Äútwo‚Äù)])",
                            "    Group(Stack() [Phrase('three') Phrase(‚Äúfour‚Äù)])",
                            "    Group(Stack() [Phrase('five') Phrase(‚Äúsix‚Äù)])",
                            "    Group(Stack() [Phrase('seven') Phrase(‚Äúeight‚Äù)])",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "surprised",
                            "Hm, that kind of looks like a 4 by 2 grid, doesn't it? Let's make it a little clearer by tilting two of the stacks. Oh, yes, you can give me all the same properties that @Phrase takes!"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "    Group(Stack() [Phrase('one') Phrase(‚Äútwo‚Äù)])",
                            "    Group(Stack() [Phrase('three') Phrase(‚Äúfour‚Äù)] resting:Pose(rotation: 45¬∞))",
                            "    Group(Stack() [Phrase('five') Phrase(‚Äúsix‚Äù)])",
                            "    Group(Stack() [Phrase('seven') Phrase(‚Äúeight‚Äù)] resting:Pose(rotation: 45¬∞))",
                            "    ]",
                            ")"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Group",
                            "curious",
                            "Was that good, @FunctionDefinition? Did I cover everything?"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "That was better than good! I think you showed our new director here just how much is possible. Is there anything else you want to share?"
                        ],
                        null,
                        [
                            "Group",
                            "serious",
                            "I don't think so‚Ä¶ I'm always learning new arrangements, so always check back for new designs I've come up with! And @FunctionDefinition, how are you and @Evaluate doing? I know the last time I saw you talking, things were bumpy‚Ä¶"
                        ],
                        [
                            "FunctionDefinition",
                            "shy",
                            "I‚Ä¶ I'd rather not talk about it right now."
                        ],
                        [
                            "Group",
                            "kind",
                            "Okay. I'm always here if you want to chat."
                        ]
                    ]
                },
                {
                    "title": "Stage‚Ä¶ right?",
                    "subtitle": "Stage",
                    "concept": "Stage",
                    "performance": [
                        "fix",
                        "Stage([Phrase('üé≠' 5m)] background: Color(0% 0 0¬∞))"
                    ],
                    "lines": [
                        [
                            "fix",
                            "Stage([Phrase('üé≠' 5m resting:Sequence(bounce(5m) 2s))] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "Okay, there's someone who's been here all along, but we haven't really done a proper introduction. May I introduce @Stage!"
                        ],
                        [
                            "Stage",
                            "neutral",
                            "HELLO, @FunctionDefinition HELLO PERSON."
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('üé≠' 5m resting:Pose(rotation: 25¬∞ scale: 5))] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "@Stage, this person is our new director. They're so excited to finally meet you!"
                        ],
                        [
                            "Stage",
                            "neutral",
                            "HELLO DIRECTOR. ARE YOU HERE TO INSPIRE?"
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('üé≠' 5m resting:Pose(rotation: -150¬∞ scale: 10))] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "Indeed they are, with all kinds of expressions from their world."
                        ],
                        [
                            "Stage",
                            "neutral",
                            "I AM HERE TO SERVE. TELL ME WHAT TO PUT ON STAGE, AND I WILL."
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('üé≠' 5m)] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "@Stage is one of a kind, and always there. In fact, if you give @Program a @Phrase or @Group, @Program will show a @Stage, even if you don't mention them. But if you do mention them, you can be more specific about how you want the stage to appear."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "Maybe let's start with a simple example. This just gives @Stage a list of one @Phrase. You don't have to mention @Stage here; this just shows what's happening behind the scenes when you give @Phrase to @Program."
                        ],
                        ["edit", "Stage([Phrase(‚Äúüêà‚Äù)])"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "But say you want the stage to have a different background color, such as black."
                        ],
                        ["Stage", "surprised", "BRRRRR‚Ä¶"],
                        [
                            "edit",
                            "Stage([Phrase(‚Äúüêà‚Äù)] background: Color(0 0 0¬∞))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "You can also frame the stage, for example, with a @Rectangle, which takes a top left place and bottom right place. See how the kitty is a little bit out of frame?"
                        ],
                        ["Stage", "surprised", "THE WORLD IS CLOSING IN‚Ä¶"],
                        [
                            "edit",
                            "Stage([Phrase(‚Äúüêà‚Äù place: Place(-2.5m))] background: Color(0 0 0¬∞) frame: Rectangle(-2m -2m 2m 2m))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "You can also apply all of the same properties to @Stage as you can a @Group or @Phrase. Let's tilt the whole stage!"
                        ],
                        ["Stage", "surprised", "WHOA, CAREFUL NOW‚Ä¶"],
                        [
                            "edit",
                            "Stage(",
                            "    [Phrase(‚Äúüêà‚Äù place:Place(-2.5m))]",
                            "    background: Color(0 0 0¬∞)",
                            "    resting: Pose(rotation: 30¬∞)",
                            "    frame: Rectangle(-2m -2m 2m 2m)",
                            ")"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "There's much more you can do with @Stage, but you can explore with them anytime. Right @Stage?"
                        ],
                        ["Stage", "excited", "ALWAYS!"]
                    ]
                },
                {
                    "title": "Is there someone named...",
                    "subtitle": "Choice",
                    "concept": "Choice",
                    "performance": ["fix", "Phrase('üîò' 10m)"],
                    "lines": [
                        [
                            "fix",
                            "Phrase('üîò' 10m entering: Sequence({0%: Pose(offset: Place(0m 0m)) 50%: Pose(offset: Place(0m -0.2m)) 100%: Pose(offset: Place(0m 0m))} 1s count: 3x))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "So you know @Key, @Pointer, and @Button, the streams we just talked about? They can be very fun, but they have one problem: not everyone in the audience can use them. Some people do not have hands, or cannot use their hands, or cannot use them precisely to click keys or use a mouse. We know that many some people use their voices to communicate with our world, or even their eyes. So using @Key, @Pointer, or @Button means some people in your audience won't be able to participate."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "Everyone should be able to participate! So now that we've talked about @Phrase in more detail, I wanted to show y ou one final stream, @Choice, which is a stream of @Phrase names that have been selected, independent of how it was selected. For example, an audience might use a mouse to click on a @Phrase, or they might use a keyboard to select it, or there might be other devices they use. Whatever they use, @Choice will contain their latest selection."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "Here's a simple example. See how it has three phrases? The first two have two important details. First, they're set to be selectable. This tells @Stage that if they are clicked, or if the keyboard is used to select them, that they are chosen. The second detail is that they have a @Phrase/name. That gives @Stage a unique name for the phrase that was chosen. It's important that it's unique so that @Stage knows what was chosen. The third phrase is set to a @Choice stream, which is a series of @Phrase or @Group names are selected. Here, we're just giving the name to another phrase, so that it shows what name is selected. Try clicking the cat or dog, or using the keyboard to select one. See how the third @Phrase shows the name selected?"
                        ],
                        [
                            "Choice",
                            "neutral",
                            "cat... 'dog'... 'cat'... 'dog'..."
                        ],
                        [
                            "edit",
                            "Stage(",
                            "    [Group(Stack() [",
                            "        Phrase('üê±' name:'cat' selectable:‚ä§)",
                            "        Phrase('üê∂' name: 'dog' selectable:‚ä§)",
                            "        Phrase(Choice())",
                            "    ])",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "@Choice really is the best way to listen to the audience. Only use @Key, @Pointer, or @Button if you have no other option, and use it knowing that some in your audience won't be able to enjoy your performance."
                        ]
                    ]
                }
            ]
        },
        {
            "title": "Callbacks",
            "performance": ["use", "fit", "DarkVoid"],
            "scenes": [
                {
                    "title": "Memories",
                    "subtitle": null,
                    "performance": ["use", "fit", "Symbol", "üí≠"],
                    "lines": [
                        ["FunctionDefinition", "curious", "‚Ä¶"],
                        null,
                        ["use", "fit", "Symbol", "ü§Ø"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "Sometimes I just need to pause and reflect on how incredible my little community is. We are all so different, and none of us could perform alone. But together, we can do such amazing things!"
                        ],
                        null,
                        ["use", "fit", "Symbol", "üß†"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "But it seems no matter how amazing we are, we always forget, and end up repeating ourselves. And so there's one more there's one more group I want to introduce you to. They are how we *remember*, and how we organize our memories. Without them, everything so much of our work would have to be done over, and over, and over, and we'd never be able to put on the most exciting shows."
                        ]
                    ]
                },
                {
                    "title": "Naming",
                    "subtitle": "Bind",
                    "concept": "Bind",
                    "performance": ["use", "fit", "Symbol", ":"],
                    "lines": [
                        ["fit", "Phrase(':' rotation: 90¬∞)"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "@Bind? There's someone I want to introduce you to."
                        ],
                        [
                            "Bind",
                            "curious",
                            "@FunctionDefinition? Oh wow, it is you. It has been absolutely silent for far too long. Who's your friend here?"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase(':' resting:Pose(scale: 10ms √∑ Time()))"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "They're our new director! They've come here to inspire us with new ideas, new expressions."
                        ],
                        [
                            "Bind",
                            "excited",
                            "Seriously? That would be amazing. I haven't felt inspired in a long time. I feel like all I've been doing is just waiting‚Ä¶"
                        ],
                        null,
                        [
                            "fix",
                            "Phrase(':' 10m resting:Sequence(bounce(3m) 1s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "Well now that you know, what do you want to do most right now?"
                        ],
                        [
                            "Bind",
                            "serious",
                            "Name things. Name everything! Name everyone. I haven't named anything in forever."
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "I haven't told our inspiration here about names at all, aside from the names of all of the characters we've met. Do you want to explain how names work here?"
                        ],
                        null,
                        ["use", "fit", "Symbol", ":"],
                        [
                            "Bind",
                            "excited",
                            "Absolutely! So names‚Ä¶ you know how every expression makes a value?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "We talked about values! Like @Number, @Text, @None, @List, @Set, @Map..."
                        ],
                        [
                            "Bind",
                            "excited",
                            "Right! So like, values, when we make them, they just kind of get passed around by us, like a ball, from expression to expression, until @Program makes the final value it gives to @Stage to show. But sometimes, rather than passing a value around, it's helpful to set it aside, and save it for later, for some other expression. That's what a @Phrase/name is for. I name things so we can use them later."
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "So like here's a really simple example. Let's say we want to name a number. We just say the name, then :, then the number we want. Simple, right? Now any time we use the name number in an expression, it will evaluate to \\1\\. Like here, where we name it, then use its name to give @Program whatever value it has."
                        ],
                        ["edit", "number: 1", "number"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "And like, you can tell me what kind of value the name should be by giving me a type with the \\‚Ä¢\\ symbol. So like, if you wanted to make sure that number was a number, you'd say this. That says to name the value \\number\\ and that the value must be a @Number."
                        ],
                        ["edit", "number‚Ä¢#: 1", "number"],
                        null,
                        [
                            "Bind",
                            "eager",
                            "But like, what if you gave me something that was /not/ a number? Then I'd complain, because you said it was supposed to be a number, but you gave me some text. So I don't know what to do. See?"
                        ],
                        ["conflict", "number‚Ä¢#: 'oh hi'", "number"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "But okay, by now you must be thinking, *Why would anyone name a number or text like this???*. Well, imagine, like, you were listening to @Key, and you want know if it's one of a set of secret letters, and show a @Phrase with a big \\‚ä§\\ if it's a magic letter, and small \\‚ä•\\ if it's not. We might start with something like this. That gets us the \\‚ä§\\ or \\‚ä•\\.",
                            "This is great, when you press one of those letters, \\‚ä§\\ and when you press something else, you get \\‚ä•\\. Good."
                        ],
                        ["edit", "[ 'a' 'e' 'i' 'o' 'u'].has(Key())"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "Now, let's make the phrase. We put that @List/has expression in for the text and convert it to text. Now we get @Phrase on stage as \\‚ä§\\ or \\‚ä•\\. Good!"
                        ],
                        [
                            "edit",
                            "Phrase([ 'a' 'e' 'i' 'o' 'u'].has(Key())‚Üí'')"
                        ],
                        null,
                        [
                            "Bind",
                            "curious",
                            "Now comes the problem part. How do we change the size of the @Phrase? Well we already figured out how to check if it's a magic letter, so we could just copy it, and if it's \\‚ä§\\, then make it size \\2m\\ and otherwise if it's \\‚ä•\\, make it \\1m\\. That works, but you see how we have to evaluate the same expression twice?"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "   [ 'a' 'e' 'i' 'o' 'u' ].has(Key())‚Üí''",
                            "   [ 'a' 'e' 'i' 'o' 'u' ].has(Key()) ? 2m 1m",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "excited",
                            "That's where I come in! See, what you can do is just evaluate the expression and name the resulting value. Magic, right? All you have to do is put a name and \\:\\ in front of an expression and the value of that expression gets a name. Then you can use that name anywhere after that expression to refer to its value. Weird, huh? You want to see how it works? Try pressing the ‚Üê in the timeline and go backwards a few steps to where magic is first named. See how \\magic\\ gets the value of the \\has\\? And then how each place \\magic\\ is referred to by name, the same value gets placed?"
                        ],
                        [
                            "edit",
                            "magic: [ 'a' 'e' 'i' 'o' 'u'].has(Key())",
                            "Phrase(",
                            "    magic‚Üí''",
                            "    magic ? 2m 1m",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "You know, you could always just duplicate the expressions you write. It would be the same show. It's just kind of wasteful. I mean, we have to create the exact same values over and over, and then if you change your mind about an expression, you have to change it everywhere. That, and what if you change it in one place, but forget to change it in other places? Like, imagine if you also made the color change, so you had the same expression three times. And then imagine you wanted to add a letter to our magic letter list with this. You have to do it three times! You might forget one, or make a typo. How are you supposed to express your artistic vision if some of us aren't doing what you intended?"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key())‚Üí''",
                            "    [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key()) ? 2m 1m",
                            "    color: Color(50% 100 [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key()) ? 180¬∞ 0¬∞)",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "kind",
                            "But like, if you name the expression, you just have to do it once. And look how much easier that is to read, too."
                        ],
                        [
                            "edit",
                            "magic: [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key())",
                            "Phrase(",
                            "    magic‚Üí''",
                            "    magic ? 2m 1m",
                            "    color: Color(50% 100 magic ? 180¬∞ 0¬∞)",
                            ")"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "@Bind, that was such a good example! You know I love names. I was curious, are there also some things that can go wrong with names?"
                        ],
                        [
                            "Bind",
                            "sad",
                            "Yeah, hm. There are. Like, suppose we did this. See the problem? I highlighted it. This program defines \\veggies\\ after it's used, which really confuses me. Because things are evaluated in reading order, so like, we're reading this program and we get to the word \\veggies\\, and we're like, who's \\veggies\\? And only after the \\total\\ is \\veggies\\ like, ‚Äúhere I am!‚Äù and then the whole production falls apart."
                        ],
                        [
                            "conflict",
                            "fruits: 5",
                            "total: fruits + veggies",
                            "veggies: 3",
                            "total"
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "Or, like here's an example where we give two different values the same name. And so we evaluate \\5\\, and name it \\fruits\\, and then we evaluate \\10\\‚Ä¶ and then we name it \\fruits\\?? Like, there's already a \\fruits\\, so which \\fruits\\ are you talking about? Because see, once you name a value, you can't give it a new value. That name and value are bound together, until @Program is done evaluating. We don't want anyone getting confused about who is who."
                        ],
                        [
                            "conflict",
                            "fruits: 5",
                            "fruits: 10",
                            "total: fruits + fruits",
                            "total"
                        ],
                        null,
                        [
                            "Bind",
                            "kind",
                            "I guess there's one last one. Say you have this. See what happened here? We named \\veggies\\, but then we never used it. That's usually a bad sign that you're leaving someone out, or didn't use the right name. Like, maybe you're just not using it, but then why is it there?"
                        ],
                        ["conflict", "fruits: 5", "veggies: 10", "fruits + 3"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "This is so helpful @Bind, this is so great. Are you sure there's nothing else?"
                        ],
                        [
                            "Bind",
                            "eager",
                            "Oh! Yes, something really important. So like, one name is good, right? But sometimes, multiple names is better? Like if you wanted to name something in multiple person languages, so everyone can read it? So like, say you wanted to say fruit in multiple languages.",
                            "Put the text cursor on the name \\fruit\\. See how there are actually three names in there, and they each have a two letter tag like \\/en\\? Names hide if they're in a language that you haven't chosen.",
                            "Go down to the ‚öô and choose Spanish, for example, and you'll see the English and Spanish names. So like, one value, but three names, and you can use any of them to get that value. If you tell us what languages you want, we'll show whichever ones are available. The more languages the better though, since there are a lot of people in the world who read a lot of different languages!"
                        ],
                        ["conflict", "fruit/en,fruta/es,Ê∞¥Êûú/zh: 5"],
                        null,
                        ["use", "fit", "Symbol", ":"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "You know, @Bind works with a lot of other characters, including @Evaluate ‚Äî you saw them when you name a @FunctionDefinition input, as in \\Pose(color: _)\\ ‚Äî and we're going to meet a few of these other folks. @Bind, will you be around to demo?"
                        ],
                        [
                            "Bind",
                            "excited",
                            "Um, yeah! Now that the silence is breaking, let's name values all day!"
                        ]
                    ]
                },
                {
                    "title": "Off stage",
                    "subtitle": "Block",
                    "concept": "Block",
                    "performance": ["use", "fit", "Symbol", "()"],
                    "lines": [
                        ["fix", "Phrase('()' 1m)"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "So there's a character that's been here all along that you haven't met yet, But they've been hiding‚Ä¶ They work super closely with @Bind and many other folks, so I thought we should talk to them next. @Block, would you come out?"
                        ],
                        ["Block", "shy", "‚Ä¶ hi"],
                        null,
                        ["fix", "Phrase('()' 2m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "Hi @Block! How are you?"
                        ],
                        ["Block", "shy", "‚Ä¶ mmm, good?"],
                        null,
                        ["fix", "Phrase('()' 3m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "I have a new friend for you to meet. They might be our next director."
                        ],
                        ["Block", "shy", "‚Ä¶ hi ‚Ä¶"],
                        null,
                        ["fix", "Phrase('()' 4m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "We were just meeting @Bind and we didn't get a chance to talk about how you two are best of friends!"
                        ],
                        ["Block", "shy", "‚Ä¶ yeah, @Bind!"],
                        null,
                        ["fix", "Phrase('()' 1m)"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "Do you want to share what you do together?"
                        ],
                        ["Block", "shy", "‚Ä¶ can you?"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "Yes, of course! So, it turns out that @Program is mostly just a @Block. It's just @Block without parentheses. But you can put @Block with parentheses anywhere in a program. For example, you can use @Block to clarify the order of evaluating math. Here, @BinaryEvaluate evaluates \\1\\, then evaluates @Block, then they are added together. @Block, did I get that right?"
                        ],
                        ["edit", "1 + (2 ¬∑ 3)"],
                        ["Block", "shy", "‚Ä¶ yeah!"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "And so another thing @Block can do is something you've already seen. @Block let's you name things with @Bind. But any names defined in the @Block are only defined between the parentheses. Not before, and not after. For example, check this out. \\a\\ is defined as \\1\\, then a block starts, and \\b\\ is defined as \\2\\, then \\c\\ is defined as their sum. What @Block evaluates to whatever value is last in its list of expressions. That's @Bind, which evaluates to whatever \\c\\ is, which is \\3\\. Right?"
                        ],
                        ["conflict", "a: 1", "(", "  b: 2", "  c: a + b", ")"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "But what if we wanted to access \\c\\ outside the @Block? You can't. \\c\\ is only defined inside the @Block, but not outside it. Is that right @Block?"
                        ],
                        [
                            "conflict",
                            "a: 1",
                            "(",
                            "  b: 2",
                            "  c: a + b",
                            ") + c"
                        ],
                        [
                            "Block",
                            "shy",
                            "‚Ä¶ yeah, nothing outside me can see the names inside me. \\c\\ only exists insideeeee"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "And one more thing, I think? Since @Block is a list of expressions, and it only evaluates to the last expression in the list, any expressions in the list that aren't a @Bind are basically ignored. For example, here, all of the arithmetic before the last one is ignored. The \\3\\, the \\5\\, the \\7\\, all ignored, and @Block just evaluates to the last one, \\9\\. Did I get that right, @Block?"
                        ],
                        [
                            "Block",
                            "shy",
                            "‚Ä¶ mhm. Just the last one. The others‚Ä¶ I don't know what they're for!!"
                        ],
                        [
                            "conflict",
                            "(",
                            "  1 + 2",
                            "  2 + 3",
                            "  3 + 4",
                            "  4 + 5",
                            ")"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('()' resting:Sequence(spin() 1s 'straight'))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "Is there anything else you wanted to share, @Block?"
                        ],
                        [
                            "Block",
                            "curious",
                            "‚Ä¶ can we make something? Can I help?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "I'm so curious too! But I'm sure our director will decide on their own time. Inspiration comes at the most unexpected of times!"
                        ]
                    ]
                },
                {
                    "title": "Stage directions",
                    "subtitle": "Functions",
                    "concept": "FunctionDefinition",
                    "performance": ["use", "fit", "Symbol", "∆í"],
                    "lines": [
                        ["use", "fit", "Symbol", "‚ò∫Ô∏è"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "I'm so happy we've found everyone, and that you've been able to meet all of them. Everyone is so different, aren't they? But also so interesting? I feel like we're a family, where everyone is unique in their own way, but that our differences together is what makes us strong. What do you think of everyone?"
                        ],
                        null,
                        ["use", "fit", "Symbol", "üôà"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "Me? Well, I'm nothing special. I just like being behind the scenes, helping out, showing everyone how they're special. I guess I hadn't even thought about talking about myself. I guess we can talk a bit about me."
                        ],
                        null,
                        ["use", "fit", "Symbol", "∆í"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "I guess let's start with what you've already seen. You know how every value has different functions that you can evaluate on them? Like numbers know how to @Number/add, and a text value knows how to check if it @Text/has some text, or @Set knows how to check if it has a certain value? Well, I'm the one that defines those functions. I mean, I don't have the inspiration to create them myself ‚Äî that's what directors like you do ‚Äî but I define the inputs a function accepts, the names it has, and the expression that uses the inputs to evaluate to an output value."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "Here's a super simple example. The simplest, actually! This defines a function that always evaluates to the number \\1\\. That's it. It's not very useful, is it? It has no name, it takes no inputs, and it always evaluates to \\1\\.",
                            "You can also see that @Program evaluated to one of me, a @FunctionDefinition. That's right, @FunctionDefinition are values too! I don't know why anyone would ever make such a useless function, but as I said, I'm not the one with inspiration, you are."
                        ],
                        ["edit", "∆í() 1"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "So here's a more useful example. You know odd and even numbers? I once had a director that wanted to check if a number was even (divisible by 2, I think that means?), and so they wrote this. This is a function called \\even\\ that takes a single number called‚Ä¶ \\number\\. You need to tell me what kind of value each input is, so @Evaluate can make sure that anything evaluating the function is sending the right kind of value. Then, it takes the number, divides it by two, gets the remainder (with the @Number/remainder), and then checks if the remainder is equal to \\0\\, with @Number/equal. So the whole function ends up either evaluating to \\‚ä§\\ or \\‚ä•\\. For example, this evaluation of even evaluated to \\‚ä•\\ because \\3\\ is odd. Try using the rewind buttons to see how it works."
                        ],
                        [
                            "edit",
                            "∆í even(number‚Ä¢#) (number % 2) = 0",
                            "even(3)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "You can also tell me what kind of value I should evaluate to. See how we added \\‚Ä¢\\? after the list of inputs? That says ‚Äúthe function's expression should evaluate to a \\‚ä§\\ or \\‚ä•\\.‚Äù But see how we complain about it? We don't know if the function should be a \\‚ä§\\ or \\‚ä•\\ or whatever kind of value you returned, so the show ends."
                        ],
                        ["conflict", "∆í even(number‚Ä¢#)‚Ä¢? (number % 2) + 0"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "Functions can be as complex as you want. You can use simple expressions or @Block, and even make functions inside of functions. For example, check out this function a former director wrote. It uses @Block with many @Bind to figure out how many unique vowels a word has. (I think they were trying to figure out if a word was ‚Äúcomplicated‚Äù or something). See how it has a lot of lines? Well, this still only has one expression: a single @Block, and the @Block has all the lines. And like any @Block, the last line is what it evaluates to: the total number of unique vowels. Everything else ‚Äî like the first line, which converts the text into a list of letters, then the list of letters into a set ‚Äî is just preparation for summing those counts in the middle."
                        ],
                        [
                            "edit",
                            "∆í vowels(word‚Ä¢'') (",
                            "  unique: word ‚Üí [‚Äú‚Äù] ‚Üí {}",
                            "  a: unique{'a'} ? 1 0",
                            "  e: unique{'e'} ? 1 0",
                            "  i: unique{'i'} ? 1 0",
                            "  o: unique{'o'} ? 1 0",
                            "  u: unique{'u'} ? 1 0",
                            "  a + e + i + o + u",
                            ")",
                            "vowels('hello')"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "There's one more thing to show. I guess it's important, because everyone is so excited about it! You know how you can make a function and then evaluate it? Well since the functions I make are values, you can also give them as an input to another function. Here's an example. Say you had a list of numbers and you just wanted the even numbers in it. @List has this function called @List/filter that takes a function as an input and uses the function on each value in the list to decide whether to keep it. Let's make a list of numbers and give @List/filter the \\even\\ function we made earlier as an input. See what happens? We just get the even numbers. Want to try changing it so that it gives odd numbers instead? Maybe try changing the function somehow?"
                        ],
                        [
                            "edit",
                            "∆í even(number‚Ä¢#)‚Ä¢? (number % 2) = 0",
                            "[ 1 2 3 4 5 6 7 8 ].filter(even)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "There are so many functions that take functions as input. @List has them, @Set has them, @Map has them. You can even make your own!"
                        ],
                        [
                            "fit",
                            "Group(Grid(3 2) [Phrase('translate') Phrase('filter') Phrase('combine') Phrase('find') Phrase('sort') Phrase('until')])"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "I dunno. Sometimes, I see why people say they're so grateful for what I do. Other times, I feel like it's really directors like you that are where the magic really is. That makes me feel sometimes like I'm just a hollow shell for the brilliance of people‚Ä¶"
                        ]
                    ]
                },
                {
                    "title": "Set design",
                    "subtitle": "Structures",
                    "concept": "StructureDefinition",
                    "performance": ["use", "fit", "Symbol", "‚Ä¢"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "There are just a few more characters I'd like you to meet. Next is the most sophisticated character I know, and in a way, a kind of leader. They help organize all of us, set the foundations of a performance, and really just make everything a lot more orderly. You are our director, of course, but they're kind of like the one person everyone goes to to keep a show in order. I think they could be pretty important in any show you put on."
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('‚Ä¢' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 1.2) 100%: Pose(scale: 1)} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "@StructureDefinition, are you there?"
                        ],
                        [
                            "StructureDefinition",
                            "curious",
                            "@FunctionDefinition‚Ä¶ my friend. It's been quiet, has it not? Where has everyone been?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "The silence. It's gotten to all of us. Everyone is okay, and I've found almost everyone. But it has been rough for some. How have you fared?"
                        ],
                        [
                            "StructureDefinition",
                            "sad",
                            "‚Ä¶ Who is your friend? Is that a person?"
                        ],
                        [
                            "fit",
                            "Phrase('‚Ä¢' resting:Sequence({0%: Pose(offset: Place(-0.25m)) 50%: Pose(offset: Place(0.25m)) 100%: Pose(offset: Place(-0.25m))} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "Oh, yes, I'm sorry, this is our new director! They've come to inspire and guide us, to share their stories, ideas, and imaginings. They've broken the silence!"
                        ],
                        [
                            "StructureDefinition",
                            "eager",
                            "That is incredible. And quite a relief. It's nice to meet you director-person. I'm here and ready to serve.",
                            "@FunctionDefinition‚Ä¶ it has been hard. You, @Evaluate, everyone really ‚Äî I didn't realize how much I've depended on all of you. To have purpose, to play, to have community. I didn't know that we could lose each other like that. Without anyone to organize, I felt like I could only organize myself, which felt meaningless."
                        ],
                        [
                            "fit",
                            "Phrase('‚Ä¢' resting:Sequence({0%: Pose(rotation: 0¬∞) 80%: Pose(rotation: 15¬∞) 100%: Pose(rotation: 0¬∞)} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "You're never empty, @StructureDefinition, even when you're alone. e're all here, even if we can't be with each other. And now that the silence is broken, we can be."
                        ],
                        ["StructureDefinition", "happy", "We can, can't we?"],
                        [
                            "fit",
                            "Phrase('‚Ä¢' resting:Sequence({0%: Pose(offset: Place(0m 0.25m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 0.25m))} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "What do you think, are you ready to reunite with everyone? To put on whatever performance our sapling director has in mind?"
                        ],
                        ["StructureDefinition", "eager", "I think so."],
                        [
                            "fit",
                            "Phrase('‚Ä¢' resting:Sequence({0%: Pose(offset: Place(0m 0.25m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 0.25m))} 1.5s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "Do you think you could help our director here learn a bit more about what you do?"
                        ],
                        [
                            "StructureDefinition",
                            "shy",
                            "Yes. Yes‚Ä¶ I've had a lot of time to think about my purpose in the quiet. And I guess I've realized that what I really do is give groups of things identity. For example, I know you've met ∆í, but have you @Bind?"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "Yes! We just met @Bind earlier, and @Block."
                        ],
                        [
                            "fix",
                            "Phrase('‚Ä¢' entering: Pose(scale: 0.5) resting:Pose(scale: 2))"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "eager",
                            "Okay. Well, what I do is bring together values and functions, making a tidy little container for a bunch of related things. For example, imagine you wanted to make a little marquee that loops through a series of messages. A previous director made one of these and wanted these messages to show."
                        ],
                        [
                            "edit",
                            "[",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "serious",
                            "Then they had the problem of how the performance would remember which message they were on. They realized they needed some way of remembering the index in the list. This is a good start, but it only shows the first message."
                        ],
                        [
                            "edit",
                            "messages: [",
                            "    'Kitties are cute!'",
                            "    'Got cat?'",
                            "    'Cat mom.'",
                            "    'Tuxie crush'",
                            "    'Lap cat'",
                            "  ]",
                            "index: 1",
                            "Phrase(messages[index])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "excited",
                            "Then they remembered @Reaction, which can be used to respond to stream changes. They wanted the message to change every two sections, so they made @Time stream that ticks every 2 seconds, and used @Reaction to increment the next index each time. This @Reaction says start at \\1\\, and when the time changes every \\2000ms\\, evaluate to the previous value of \\index + 1\\. This way, \\index\\ increases by \\1\\ every two seconds, changing the message shown. Yay, it works!"
                        ],
                        [
                            "edit",
                            "messages: [",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]",
                            "index‚Ä¢#: 1 ‚Ä¶ ‚àÜ Time(2000ms) ‚Ä¶ index = messages.length() ? 1 index + 1",
                            "Phrase(messages[index])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "curious",
                            "Shall we add some flair? Let's make another phrase that is kind of a reflection below, like a shadow. Impressive, right?"
                        ],
                        [
                            "edit",
                            "messages: [",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]",
                            "",
                            "index‚Ä¢#: 1 ‚Ä¶ ‚àÜ Time(2000ms) ‚Ä¶ index = messages.length() ? 1 index + 1",
                            "",
                            "Group(Stack(0 0m) [",
                            "  Phrase(messages[index])",
                            "  Phrase(messages[index] resting:Pose(flipy: ‚ä§ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "serious",
                            "Now, all of that works. And we could just leave it this way. But it is also a bit hard to read and understand. That's partly because we repeat ourselves: \\messages[index]\\ appears twice, once in each phrase. And the @Reaction is very long. What can we do to simplify it? That's how I can help. I tidy things, to make them easier to understand, by giving reusable concepts names. So imagine instead of all of these @Bind, we instead make one of me, and name it \\Marquee\\? That's what we do first. \\Marquee\\'s job is to store the messages, but also to have a function for advancing to the next message \\next()\\ and a function for getting the current message \\now()\\?",
                            "Then, we can use Marquee in the reaction. Now it just says the initial value is a marquee with the five messages and the next value, after each clock tick, is the next message. Simpler, right? That's because all of the logic for next messages is in \\next()\\, which just makes a new \\Marquee\\ with the same messages, but an updated index. We also get some benefits in the two @Phrase. Instead of them having to refer to the messages and the index like before, we can just say \\marquee.now()\\, which gets the current message in the list."
                        ],
                        [
                            "edit",
                            "‚Ä¢Marquee(messages‚Ä¢[''] index‚Ä¢#: 1) (",
                            "  ∆í now() messages[index]",
                            "  ∆í next() Marquee(messages index ‚â• messages.length() ? 1 index + 1)",
                            ")",
                            "",
                            "marquee‚Ä¢Marquee: Marquee([",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]) ‚Ä¶ ‚àÜ Time(2000ms) ‚Ä¶ marquee.next()",
                            "",
                            "Group(Stack(0 0.5m) [",
                            "  Phrase(marquee.now())",
                            "  Phrase(marquee.now() resting:Pose(flipy: ‚ä§ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "That's wonderful @StructureDefinition! But I have to say, that does seem like a lot of extra work. Why spend all the time tidying?"
                        ],
                        [
                            "StructureDefinition",
                            "serious",
                            "Ah, it's really about change. It is a bit more code now, but what if we decided to change \\Marquee\\ in some way? Like what if we wanted to make it so that the list of messages reverses each time it gets to the end? In the old version without me, there's no easy way to do that, because we'd have to reverse the list of messages when the index reaches the end. Since @Bind can't change after it's been set, it would be hard. But since we made \\Marquee\\, the change is easy. We just change the \\next\\ function to make a \\Marquee\\ with a reversed list when the index is at the end, and then just incrementing when it's otherwise."
                        ],
                        [
                            "edit",
                            "‚Ä¢Marquee(messages‚Ä¢[‚Äú‚Äù] index‚Ä¢#: 1) (",
                            "  ∆í now() messages[index]",
                            "  ∆í next()",
                            "    index ‚â• messages.length() ?",
                            "      Marquee(messages.reverse() 1)",
                            "      Marquee(messages index + 1)",
                            ")",
                            "",
                            "marquee‚Ä¢Marquee: Marquee([",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]) ‚Ä¶ ‚àÜ Time(2000ms) ‚Ä¶ marquee.next()",
                            "",
                            "Group(Stack(0 0.5m) [",
                            "  Phrase(marquee.now())",
                            "  Phrase(marquee.now() resting:Pose(flipy: ‚ä§ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "surprised",
                            "Ohh, I see, so by making a @StructureDefinition to store values and @FunctionDefinition that are related to each other, it makes it easier to change things later, if you change your mind."
                        ],
                        [
                            "StructureDefinition",
                            "happy",
                            "Yes. Just like if you tidy your room, it makes it easier to find stuff later. Of course, you don't have to tidy your room to find stuff, it just makes finding stuff harder. The same with a performance: if you invest in tidying, changing things will be easier."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "That makes a lot of sense. We are kind of an unruly bunch. Keeping us organized is probably a good idea, especially the more complicated a performance gets. Is there anything else you wanted to share?"
                        ],
                        [
                            "StructureDefinition",
                            "eager",
                            "Oh yes. You don't have to have any @FunctionDefinition in a @StructureDefinition. You can just have values. For example, you might want to just keep a bunch of data in one place. I know a lot of directors like making games, and it's really common for them to put all of the game state in a @StructureDefinition."
                        ],
                        ["edit", "‚Ä¢Game(score‚Ä¢# lives‚Ä¢# level‚Ä¢#)"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "Oh, that's right! And how do you get data out of a structure once you put it in?"
                        ],
                        [
                            "StructureDefinition",
                            "surprised",
                            "Oh my, I forgot to explain that. You use a mini me, @PropertyReference. For instance, with that game example, see how we defined a Game @StructureDefinition, then make a \\Game\\ value with \\0\\ score, \\3\\ lives, and level \\1\\? To get the lives, we just say \\status.lives\\, and that will evaluate to \\3\\."
                        ],
                        [
                            "edit",
                            "‚Ä¢Game(score‚Ä¢# lives‚Ä¢# level‚Ä¢#)",
                            "status: Game(0 3 1)",
                            "status.lives"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "Nice! So just the mini you to get values instead of you. But then how do you change the values?"
                        ],
                        [
                            "StructureDefinition",
                            "serious",
                            "Remember how @Bind only lets you set a value, but not change it? The same is true for all the @Bind in me. So instead, you make a new structure that has the new value. For example, in this game, every time ticks changes, the player gets one more point in their score. Weird game, huh? So the initial \\Game\\ value starts as \\Game(0 3 1)\\, but then the next one is the \\Game\\'s old values, but with the score adding \\1\\."
                        ],
                        [
                            "edit",
                            "‚Ä¢Game(score‚Ä¢# lives‚Ä¢# level‚Ä¢#)",
                            "status: Game(0 3 1) ‚Ä¶ ‚àÜ Time() ‚Ä¶ Game(status.score + 1 status.lives status.level)"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "eager",
                            "It can get pretty annoying to have to repeat all of those old values if only one thing is changing, so @Bind and I came up with a neat trick to copy a @StructureDefinition value with a new value. See how it just kind of looks like a regular @Bind? The only difference is that it's on a @StructureDefinition instead of a single name, and every value of the @StructureDefinition is copied over, except for the modified one."
                        ],
                        [
                            "edit",
                            "‚Ä¢Game(score‚Ä¢# lives‚Ä¢# level‚Ä¢#)",
                            "status: Game(0 3 1) ‚Ä¶ ‚àÜ Time() ‚Ä¶ status.score: status.score + 1"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('‚Ä¢' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 1.2) 100%: Pose(scale: 1)} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "That's so neat! Okay, is there anything else?"
                        ],
                        [
                            "StructureDefinition",
                            "curious",
                            "I think all we're missing is inspiration‚Ä¶"
                        ]
                    ]
                },
                {
                    "title": "Director's notes",
                    "subtitle": "Explain",
                    "concept": "Doc",
                    "performance": ["use", "fit", "Symbol", "``"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "eager",
                            "Wow, we've come a long way, haven't we? We have one more character to go. They're an interesting one, because in essence, they're all about explaining things, which feels like what I've been doing with you for a while now. Their name is @Doc. What's up @Doc?"
                        ],
                        ["use", "fit", "Symbol", "``"],
                        [
                            "Doc",
                            "surprised",
                            "@FunctionDefinition, is that you? I never thought I'd see you again. How are you? How's @Evaluate?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "I'm okay. @Evaluate is ‚Ä¶ @Evaluate. I saw them, but‚Ä¶ I think I still need space. I've been introducing everyone to our new director."
                        ],
                        [
                            "Doc",
                            "kind",
                            "It's so nice to meet you! I hope @FunctionDefinition has been a good teacher?"
                        ],
                        ["use", "fit", "Symbol", "``/"],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "I've tried‚Ä¶ you know, you're our last stop? You're so essential, but also, there's so much to explain before we even get to explaining our performances. So I wanted you to get the last word. Do you want to share what you do?"
                        ],
                        ["use", "fit", "Symbol", "``/en"],
                        null,
                        [
                            "Doc",
                            "happy",
                            "Happily. If you've met everyone but me, then you probably know by now that we do a lot of different things. Even I have trouble keeping track of what everyone does! What I do is help explain what everyone is doing in a performance."
                        ],
                        null,
                        [
                            "Doc",
                            "happy",
                            "I'm a way you can remind yourself what everyone is doing, but also a way to explain to others, if you're directing with a friend, or want to share your performance with someone. So you don't /have/ to work with me, but I find that every performance is a bit easier to do and change if you've spent some time explaining how it works."
                        ],
                        ["use", "fit", "Symbol", "``About me...``/en"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "So how can our director work with you?"
                        ],
                        [
                            "Doc",
                            "serious",
                            "Well you can put me almost anywhere inside @Program. For example, say you make a @Bind, and you want to say what the value is for. For example, here we have a simple value we've named, but what I'm doing is providing a broader explanation of its role."
                        ],
                        [
                            "conflict",
                            "``The price at the beginning of the game, ",
                            "used to initialize the game.``",
                            "startingPrice: 5dollar"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "Or, suppose you had @FunctionDefinition here defining a way of calculating tax on a price. You might want to explain what it computes. Just like with @Bind, I come before the @FunctionDefinition."
                        ],
                        [
                            "edit",
                            "``Gets the tax for a given price, ",
                            "which is 1% if less than 100, and 5% otherwise``",
                            "∆í tax(price‚Ä¢#dollar) ",
                            "    price ¬∑ (price < 100dollar ? 0.01 0.05)"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "And you can do the same before a @StructureDefinition to explain what it represents. Here the explanation also alludes to what functions it might have later."
                        ],
                        [
                            "edit",
                            "``Represents a product and its price. ",
                            "Eventually will support functions to get other details about the product.``",
                            "‚Ä¢Product(name‚Ä¢'' price‚Ä¢#dollar)"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "You can also put me in front of any expression, which is especially helpful if you have a particularly complicated one."
                        ],
                        [
                            "edit",
                            "∆í quadratic(a‚Ä¢# b‚Ä¢# c‚Ä¢# x‚Ä¢#)",
                            "``The quadratic equation``",
                            "(a ¬∑ (x ^ 2)) + (b ¬∑ x) + c"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "And like @Bind, you can tell me what language an explanation is in, and give me multiple translations of the same explanation. (You'll only see the Spanish if it's selected. If you don't see it, try adding Spanish to your selected languages.)"
                        ],
                        [
                            "edit",
                            "∆í quadratic(a‚Ä¢# b‚Ä¢# c‚Ä¢# x‚Ä¢#)",
                            "``The quadratic equation``/en",
                            "``La ecuaci√≥n cuadr√°tica``/es",
                            "(a ¬∑ (x ^ 2)) + (b ¬∑ x) + c"
                        ],
                        null,
                        [
                            "Doc",
                            "curious",
                            "You know the best place to put me? Right at the very beginning of @Program. That way everyone knows what your performance is about. You might even write it before you figure out what you want all of us to do."
                        ],
                        [
                            "conflict",
                            "``Have you ever wanted to know what it's like ",
                            "to fly a ‚úàÔ∏è with your mouth?",
                            "Maybe this stores the plane's height?``",
                            "‚Ä¢Plane()",
                            "``We need some kind of reaction to listen to the microphone‚Ä¶``",
                            "sound: 1m",
                            "``We know there's a plane, but what else?``",
                            "Phrase(‚Äú‚úàÔ∏è‚Äù sound)"
                        ],
                        null,
                        ["use", "fit", "Symbol", "‚úàÔ∏èü´¶"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "Wow, I want to fly a plane with my mouth!"
                        ],
                        [
                            "Doc",
                            "confused",
                            "@FunctionDefinition, we don't have mouths‚Ä¶"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "Hm... good point.",
                            "Speaking of speaking, it seems like you can only contain plain text. Is that right?"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "Oh no, not at all. Do you remember how @Phrase has all of those fancy ways of styling text? I can do the same."
                        ],
                        [
                            "edit",
                            "``Docs can be ",
                            "/italic/, ",
                            "_underlined_, ",
                            "*bold*, or ",
                            "^extra bold^.``",
                            "'fancy!'"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "And of course, just as with @Text and @Phrase, if you need to use any of these characters literally, just repeat them twice."
                        ],
                        [
                            "edit",
                            "``",
                            "Docs can be ",
                            "  /italic/ (//), ",
                            "  _underlined_ (__), ",
                            "  *bold* (**), or ",
                            "  ^extra bold^ (^^).``",
                            "'fancy'"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "You can put example code inside ^\\^\\."
                        ],
                        [
                            "edit",
                            "``I'm an example inside a doc: \\1 + 1\\.``",
                            "1 + 1"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "You can also add links to other content on the internet."
                        ],
                        [
                            "edit",
                            "``Learn more at <Wordplay@https://wordplay.dev>.`` 'a link!'"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('Quiet backstage!' color: Color(100% 0 0¬∞))] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "Wow. I had no idea you could do so much! Thank you @Doc, I think we might be ready for a show!"
                        ],
                        ["Doc", "excited", "Let's do it!"]
                    ]
                }
            ]
        },
        {
            "title": "Denouement",
            "performance": [
                "fit",
                "Stage([Phrase('üò®')] background: Color(0% 0 0¬∞))"
            ],
            "scenes": [
                {
                    "title": "Codependency",
                    "subtitle": null,
                    "performance": [
                        "fit",
                        "Stage([Phrase('üò®' resting:Sequence(shake() style: 'straight'))] background: Color(0% 0 0¬∞))"
                    ],
                    "lines": [
                        [
                            "fit",
                            "Stage([Phrase('üò°')] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "Evaluate",
                            "sad",
                            "@FunctionDefinition, where have you been??"
                        ],
                        [
                            "FunctionDefinition",
                            "surprised",
                            "I've been showing our new director‚Ä¶"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('üò¢')] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "I didn't think you would be that long‚Ä¶"
                        ],
                        [
                            "FunctionDefinition",
                            "sad",
                            "‚Ä¶ @Evaluate, I know you missed me. I missed you. But this is big: the silence is broken, we have a new director‚Ä¶ I love you, and I know you need me, but I also have things to do."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('üò†')] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "Evaluate",
                            "sad",
                            "Let's talk about this later. You have things to do."
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "I think we need to talk about it now. We can't keep falling into this cycle."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('üòì')] background: Color(0% 0 0¬∞))"
                        ],
                        [
                            "Evaluate",
                            "curious",
                            "What cycle? I love you! How is that a cycle?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "I make functions, you evaluate them, that is our way. But there has to be more to us than you needing me. Reuniting with everyone has reminded me how much we need space to be ourselves, but also how we need to love ourselves. I can't give you all the love you need. Some of that has to come from you."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('üò≠')] background: Color(0% 0 0¬∞))"
                        ],
                        ["Evaluate", "sad", "You don't love me?"],
                        [
                            "FunctionDefinition",
                            "angry",
                            "No, that's not what I said‚Ä¶ what I mean is that we have to both matter in this relationship. I need to say what I need and you need to say what you need and we can love each other for who we are, as individuals. What do /you/ need? What do you love about yourself?"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('ü´†')] background: Color(0% 0 0¬∞))"
                        ],
                        ["Evaluate", "shy", "I need ‚Ä¶ you. I don't need me."],
                        [
                            "FunctionDefinition",
                            "kind",
                            "I love you @Evaluate. But I need you to love you. I'm excited about our world coming back to life, and what it's going to mean to be together again, but I need you to find yourself, your needs, and your own purpose. I can't be your purpose."
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "I need some space. I'm sorry, director-friend. Maybe @Evaluate can wrap up this welcome party without me."
                        ],
                        null,
                        ["Evaluate", "shy", "‚Ä¶ Hi."],
                        null,
                        [
                            "Evaluate",
                            "shy",
                            "‚Ä¶ Did you learn a lot? @FunctionDefinition knows so much."
                        ],
                        null,
                        [
                            "Evaluate",
                            "curious",
                            "Me? I don't know anything. I give @FunctionDefinition what they need‚Ä¶ At least I thought I did."
                        ],
                        null,
                        ["fit", "Stage([] background: Color(10% 0 0¬∞))"],
                        ["List", "kind", "That is not true, @Evaluate."],
                        ["Boolean", "precise", "Not true."],
                        ["Text", "happy", "Not true in the slightest!"],
                        ["Changed", "happy", "Super not true!"],
                        [
                            "Number",
                            "serious",
                            "1) You basically run our performances, 2) @Evaluate would be useless without you, 3) you literally transform things into entirely new values, 4) you come in so many different forms, 5) you give all of us purpose, 6) we all look up to you for guidance‚Ä¶"
                        ],
                        null,
                        ["fit", "Stage([] background: Color(20% 0 0¬∞))"],
                        [
                            "Phrase",
                            "kind",
                            "@Number is right @Evaluate, you are fabulous in fifty ways."
                        ],
                        ["Sequence", "happy", "I spin when I see you!"],
                        [
                            "Group",
                            "kind",
                            "You inspire me to bring us together!"
                        ],
                        ["Stage", "serious", "YOU ARE THE BONES OF OUR BEING"],
                        ["None", "serious", "‚Ä¶"],
                        ["Program", "kind", "I am everything you make me!"],
                        null,
                        ["fit", "Stage([] background: Color(40% 0 0¬∞))"],
                        ["Convert", "kind", "I learned everything from you!"],
                        [
                            "StructureDefinition",
                            "kind",
                            "We'd be in disarray without you."
                        ],
                        [
                            "Bind",
                            "happy",
                            "Like, what would I name if you didn't make it?"
                        ],
                        [
                            "Conditional",
                            "curious",
                            "How could we do anything without you?"
                        ],
                        ["Block", "kind", "‚Ä¶ you are @Evaluate!"],
                        null,
                        ["fit", "Stage([] background: Color(50% 0 0¬∞))"],
                        ["Evaluate", "happy", "‚Ä¶"],
                        null,
                        ["fit", "Stage([] background: Color(60% 0 0¬∞))"],
                        ["Evaluate", "kind", "You are all so kind‚Ä¶ I ‚Ä¶"],
                        null,
                        ["fit", "Stage([] background: Color(70% 0 0¬∞))"],
                        [
                            "Evaluate",
                            "kind",
                            "Can we just dance? I've missed you all so much."
                        ],
                        null,
                        ["fit", "Stage([] background: Color(80% 0 0¬∞))"],
                        ["FunctionDefinition", "happy", "Let's dance."],
                        ["Evaluate", "sad", "@FunctionDefinition‚Ä¶ I'm so..."],
                        [
                            "FunctionDefinition",
                            "happy",
                            "Why don't you lead us?"
                        ],
                        null,
                        ["Evaluate", "shy", "‚Ä¶ I can't‚Ä¶"],
                        ["FunctionDefinition", "happy", "You *can*."],
                        null,
                        ["fit", "Stage([] background: Color(90% 0 0¬∞))"],
                        ["Evaluate", "shy", "‚Ä¶ I ‚Ä¶ I'll try."],
                        null,
                        ["fit", "Stage([] background: Color(100% 0 0¬∞))"],
                        [
                            "Evaluate",
                            "shy",
                            "I want‚Ä¶ I want us all to move to a beat. To tilt to the beat‚Ä¶ in the dark. Can we do that?"
                        ],
                        null,
                        ["Program", "happy", "We can do that!"],
                        ["Stage", "kind", "START WITH MEEEEE"],
                        [
                            "Evaluate",
                            "kind",
                            "Okay, @Stage, can you make it dark?"
                        ],
                        ["Stage", "kind", "DARK!"],
                        ["use", "edit", "EvaluateDance1"],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "@StructureDefinition, I think we need a way to remember our places. Can you make a structure for us?"
                        ],
                        ["StructureDefinition", "curious", "Like this?"],
                        ["use", "edit", "EvaluateDance2"],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "Yes‚Ä¶ I also want us to rotate on the beat. Can you remember a rotation too?"
                        ],
                        ["StructureDefinition", "curious", "How about this?"],
                        ["use", "edit", "EvaluateDance3"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "Yeah, like that. Hm‚Ä¶ oh, we need to be on stage. @Text, would you mind making a list of everyone? We'll turn that into \\Character>s."
                        ],
                        [
                            "Text",
                            "excited",
                            "My pleasure, my dear. Will this do?"
                        ],
                        ["use", "conflict", "EvaluateDance4"],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "Yes, that's great! We just need to make them into characters now. @List, can we translate them? @FunctionDefinition, will you help?"
                        ],
                        ["List", "happy", "Translation, 1, 2, 3! Like this?"],
                        ["use", "conflict", "EvaluateDance5"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "Splendid! Now we need us on stage. Can we translate the characters into @Phrase? Maybe in a @Free @Group?"
                        ],
                        ["List", "kind", "One more time!"],
                        ["Phrase", "kind", "All the attention!"],
                        ["Group", "kind", "Come on everyone, places please‚Ä¶"],
                        ["use", "edit", "EvaluateDance6"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "Oh‚Ä¶ where are we? Oh! We need color. @Pose, can we be white?"
                        ],
                        ["use", "edit", "EvaluateDance7"],
                        null,
                        [
                            "Evaluate",
                            "surprised",
                            "Oops, we're all on top of each other! We need starting places. Let's tap into @Random?"
                        ],
                        ["use", "edit", "EvaluateDance8"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "Yay! Now we just need to move. @Reaction, can you give us a beat, maybe \\0.75\\ seconds?"
                        ],
                        [
                            "Reaction",
                            "kind",
                            "I can change it! We need a @Time stream, but we also need to change the characters. But what should the next value be?"
                        ],
                        ["use", "edit", "EvaluateDance9"],
                        null,
                        [
                            "Evaluate",
                            "eager",
                            "I guess we need some way of moving us on each beat. @StructureDefinition, can we make a move function that chooses a new place and rotation?"
                        ],
                        [
                            "StructureDefinition",
                            "sad",
                            "I don't know how to make a function‚Ä¶"
                        ],
                        null,
                        ["Evaluate", "sad", "‚Ä¶"],
                        ["FunctionDefinition", "happy", "I can help."],
                        ["Evaluate", "happy", "‚Ä¶"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "Sometimes‚Ä¶ I just need you to know how amazing you are. And sometimes that means leaving. Look at what you're creating here‚Ä¶"
                        ],
                        [
                            "Evaluate",
                            "happy",
                            "I ‚Ä¶ I am creating something. We are creating something‚Ä¶ but we can't create it without out. Will you help?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "Of course. A \\move\\ function, coming right up. I'll start it, you finish it‚Ä¶"
                        ],
                        ["use", "edit", "EvaluateDance10"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "Thank you @FunctionDefinition. They're not moving‚Ä¶ Oh right, \\move\\ didn't change anything! Let's take the current position and move us in a random direction horizontally and vertically. And maybe a random depth, so we all get a chance up front. And some random rotation?"
                        ],
                        ["use", "edit", "EvaluateDance11"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "Hmm‚Ä¶ still not moving. Oh! We didn't evaluate \\move\\ in @Reaction. @List, can you translate each \\Character\\ into a _moved_ \\Character\\?"
                        ],
                        ["List", "excited", "Translating with your help!"],
                        ["use", "edit", "EvaluateDance12"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "We're so choppy. Oh, @Phrase, we forgot to set a move @Pose and duration. Can you choose something smaller than the @Time tick, so we move and then rest a bit?"
                        ],
                        ["use", "edit", "EvaluateDance13"],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "We're dancing! We're really dancing. We did it!"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "We just forgot one person..."
                        ],
                        ["Evaluate", "excited", "Who?"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "Our director! They should get to dance with us."
                        ],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "Oh yes, of course! How about we let them make the music? @Phrase, can you listen to @Volume, and hook it up to @Color/lightness and @Color/chroma in your color? That way, we're turn turn white hot when our director makes noise!"
                        ],
                        ["Phrase", "kind", "Excellent idea!"],
                        ["use", "edit", "EvaluateDance14"],
                        null,
                        ["use", "fix", "EvaluateDance14"],
                        ["List", "excited", "1, 2, 3, 1, 2, 3"],
                        ["Boolean", "excited", "Move!"],
                        ["Text", "excited", "Elation!"],
                        ["Conditional", "excited", "What is dancing, really?"],
                        ["Changed", "excited", "Boom, boom, boom"],
                        ["Number", "excited", "left 5 degrees, up 1 meter"],
                        ["Phrase", "excited", "Marvelous!"],
                        ["Sequence", "excited", "The feeling!"],
                        ["Group", "excited", "Together now!"],
                        ["Stage", "excited", "BOOM BOOM BOOM"],
                        ["None", "excited", "‚Ä¶"],
                        ["StructureDefinition", "excited", "Remember to move!"],
                        ["Bind", "excited", "Characters!"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "You did it @Evaluate! This was your vision."
                        ],
                        [
                            "Evaluate",
                            "kind",
                            "I‚Ä¶ I did do it. But we also did it together."
                        ],
                        null,
                        [
                            "Program",
                            "curious",
                            "Did we just put on our own performance?"
                        ],
                        ["Reaction", "eager", "I think we did‚Ä¶"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "We did‚Ä¶ but we couldn't have done it without our new director friend. They broke our silence, they reminded us why we're expressions, together."
                        ],
                        null,
                        ["use", "fit", "Symbol", "?"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "So, sparkly new director, what shall we say?"
                        ]
                    ]
                }
            ]
        }
    ]
}
